%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: figure8.pdf
%%Creator: (Adobe Acrobat 18.9.0)
%%For: shayo
%%CreationDate: 12/5/17, 16:38
%%BoundingBox: -1 0 424 151
%%HiResBoundingBox: 0 0 423.9931 150.6709
%%CropBox: 0 0 423.9931 150.6709
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 32701 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:MetadataDate="2017-12-05T16:34:04-05:00"
   xmp:ModifyDate="2017-12-05T16:34:04-05:00"
   xmp:CreateDate="2017-12-05T16:03:56-05:00"
   xmp:CreatorTool="Adobe Illustrator CC 2017 (Macintosh)"
   xmpMM:InstanceID="uuid:d457bed7-036f-a744-b364-bea68b0a0199"
   xmpMM:DocumentID="xmp.did:8ed3d85b-2ccb-4d2c-9279-60cf3039c2ba"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 15.00">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">figure8</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="92"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAXAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7/8Al+3nhrTU/wDFqMk/&#xA;16Q6cJPqpYWhRCq8rU8GVX5hWZVcj7QGKsqxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;Vh35laX5gvodAm0RLpp9P1Vbq5awazW5SD6ncws0Yvz9XYlplWjV617VCrItAGsDQtOGtFDrAtof&#xA;0iYqcPrHpj1eNNqc60piqTedfzA0zye9g2p208lpfmSNbiBVbjMhT04yrFd5AzUof2emKsmhkEsS&#xA;SBWUOobi4KsKitGB6HFV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVgNr5RvvKmqedvN8V8t1JqcDXVt&#xA;ayRtxje3jd1EhD/GATxFKfDilnqBwiiQhnAHNlHEE9yAS1PvxQ3irsVdirsVdirsVdirsVdiqX6l&#xA;e3Vtf6TFFw9G9uXguAyktQW00ylGDAD4od6g7YqgNL8rvY3sdybgOI2ZuCoR1VlIDFmPxl+T1ruF&#xA;8M0mj7IOHIJ8V15eR8+t8Ur6iPc7PUdoDJAxrn5+7y6VQ8ie9G6tbySywFrU31oocS2qlAS548GK&#xA;yMiMAAwoT375l63HKUo3HxIb3HbntR9RAI59evI9MfTTABqXBLajvy3vlZHRU0a0e2syrxiFnkkk&#xA;9FSKIrOSiAL8I4pQHjt8+ps0OE48dEcNkmu4XsNtthXLb38zHVZBOexugBfftue/n3/sR2ZjjOxV&#xA;2KvG/wA/Y9TkvNMWKS1ithY6g/JjL9YMaqhu1I4vF6Rj9MbUk5fZI3wJDNfNHleTzP8Al/Do1jNa&#xA;qLiG3KTTRSSQ+mqqaojPzBp9gsSV69RXCrAx+TmpeWb6XzHDra8orie44QQtHIPrIaE8ZXklasnr&#xA;85a1qUSn2cVe14odirsVdirsVfNH5/3Hn+//ADr0Py15b8xalolnc6PFcXjWVxcRQxgXNyHmaOF4&#xA;0LsFVF5FQzcVLDrihU0h/NGiRGzn8x6xfyRqr3V7d3t2efpFquFkdvSFZBVRtQDlyO+KU/TzIJtE&#xA;ms7rVNWlln4NFLHeTwSBvV5cfXjkR1VlWlV+6mKvNPq/5m6B+ZXlNoPOWu6x5Zvdasobhbm8uTwj&#xA;kvUQRXCeq6SI8ZCl6AM3JSo2qofUvm3zdpPlXTE1PVua2JlWGWaMK3p8wSGKlldqlePGMMxJ2XFK&#xA;hqmry6v5Nvr/AMqXTT3jwS/o+W29Hn9YjqAhFyjop5ji4dKjfauKsR1ZvzB9bX7bUTPceWo/LtzD&#xA;9YdLWD1LyOIo06mEmXlMVchfgVVoaVpiBaWXQ2vD6sw0zVgbYlow9/zqSQf3tbxhL8n5DLfDH84f&#xA;b+pr4j3H7P1pY8NvDeyNENc0+UIQtyS94ieqVDOEdrr1Hf0+Cq6uFK1CjlV5eBtYMfn+tHi77gpv&#xA;Y3+sym4FpLb6jHHFF6QuPUspxLQBvVURSfBIKurBBv8ADQjcVygY82YkCp3mq6pBK4l1PSbAiCsl&#xA;vNzkaCY04szmW39SMk/yIffGOKR5AoM4jmVZPNNvBbmTVbeWx9NooZJmR2he4deTpAaCSREp/eem&#xA;EI3B2NIMk7xVQuryO3aJWBZpnCKq70qQvI+wLDKcuYQIB5yNft9zZjxGVnuCvlzWxyfzXd3NlBda&#xA;Hpz3kdyrSwz3DC1geMVEXB3qS1wwCxfD0PM7U5IFq1peq6utqkqH9N2dZnubpWjjuYqJzWFYURUm&#xA;PLZGqnwFT8X2mlOBiaKBIHkg9R8yh/M/ljSrqxms76e4kugkhiZVj+qXicS6OwMi0TmFqBzX4jkU&#xA;swxVLPMggOjzGcVjVonIKq6krIpAdWZFK1HxVYbd81/aoj4B4uQMTyvlIcwSBXfZG3VzNAZeKOHn&#xA;v5dDy2O/dsd0N5Us7RLM3tqaRXYJMYjES8hLISwQM4A+IKNz8IG+Y/Y2DGMfiQ5T6Vwi+KXSz30N&#xA;zsBu29o5ZGfBLnHzvoOtDuv3kp5m4dc7FXYq8j/ODSl86atY+WNO1GC21Oxkb/RbtJAkk9xAbiFk&#xA;kSKb+7htpSeg3HU7YpD1WwgmgsbaCeT1Z4okSWX4jzdVAZviLNud9yTihJPzERZPJeqxsGKvEFIS&#xA;vKjOo+HiHNfkDikITT/PFxfT28kdkDZL6qaokLfWbm2crC9s3pQhndZBIwbgrcf2ivFhiqbXOt31&#xA;vaz30mmsljAFdmeaNJvS9MvLIUYhFEewo0gP2thQclCb4q7FXYq8V/NyKS28+JfQh2a4020hkXb0&#xA;6QXNyyn9k7eu3Khr0oPFVIrJLe9imu7rlB6RHBRz5cunE7t8JFdyDiqhZ3V3ZRNItpysI2Mo4fCT&#xA;SIMxqeJoC4Y/EN69OuKqlrdSat5g0O2u5DHBHqmnsHWnKSS0u4pEDGnA7ote5B9t1XpP5raFe3w0&#xA;2+i+syyWdwo0+Kwhv5ZVmkimWRpDZ3+ncVf92qSsyiP4uTcXPFVlXlC3ig8r6UkdsbStpAXt3ha3&#xA;dG9JaiSKSSd0cdGDSOR3ZuuKpDrnmS+utM89WM9ikdnollKiXkMzStM8tm05jMZii4OkboxAdvtj&#xA;fFKexa9ei3e4vNIuoIVWN1aIxXTEOQDRLd5HJWtTxU7bjwxQoy+bSl1JBHouqTIsQmS4S2CxyBkj&#xA;ZEX1HRg7NJw4uq8Src+KipVavdU8n3Du2ppCJ7WGOZkvoCkqxTkBCqzIGILMEPGvx/Cfi2yccko8&#xA;iQgwB5hUi1vyfb8IYrmzhRIfrnw8FjjidQ3quwASMMhqCxFRgMyeZURAah0oNaQ3Ggam0cDpW3PP&#xA;61atERWMIpYgKOxQ/Z28KWjMD9Qv7Cw4K5GkF5U806GND0+yu9Sji1CCP6rJBeSRxXLPbKFdmRnJ&#xA;aoAevga7dMqnHhJDOJsWmt/LELfU7t3Cx28I+M9B6SGblXw+MfdmBlHF4h7hXxA4v0uXjNcA7z9+&#xA;36Ejh+u6+kFw0f16ITJdW31iH6vZwcUbijxepJJPMhbc1KB9xRlpmyEABcj8OrhGRugm58tWMkYO&#xA;pzS37MKSevI3pGVwULpFXjGTyooXp23qTLxyPpqKPDHXdTNp5RvpYxbTWy3kJjt4JrWSMTxlYzKk&#xA;aMp5A+jyPH+SvbIxzyHWwk4x3IDVNJtbDzJ5bmhn9GCS7lSS2dizSzfUrrhL6jsXLUdlatS1V/lG&#xA;MsvFGjz/ABsohRsJhp/mmO+v0to7dlR3ZA7GjbB2B4FelIt99qr45otN2uM2QQESASRZ/wA7pX9H&#xA;fuuPfttM/Zxxw4ien6uvx276Pcr+YbO0ubZPXt/VZHUxy+h9Y9Piwc1QfGVfjRgvUZd2nghkgOKN&#xA;0RR4eOtweXOjVGuYa9FllCR4TW3Li4b6c+VjpapoMSQ6eIkRkRXkI5RGAHm5kPCIksqgtQBt8n2d&#xA;AQxcIBAs/wAPDzN7R5gb0Ad2GskZZLJ6DrxchW56n3Jjme4rsVdiryX81rPy5ZeYYNQ1Dy3a3rXd&#xA;uSNUudZTSgbiH4EiCySxcisbmrAVofnikPUtNZW061ZQqq0MZCpJ6yAFRssv7Y8G79cUJb5y/wCU&#xA;bvP+ef8AydTFId5W8s2Og2CwQW8MM5URzSQBwHRJJHj5F2dmYeqaknr4CgChOJYo5YnilUPHIpV0&#xA;O4KsKEHFUh8s699aS0sZmhkmNmkizwMSsjxRw/WKxlEaLi1xHxV6Ma/ZFN1WQYq7FXgH5v8Anqx0&#xA;D84oNL1N/TstQ0CGSCeSVUhhmimvqkiQhVMq0XkDWoUUNdlCD4ymc29qzFT6gKvSh3PxMAaUodx1&#xA;9+tVKtoESJqdsupEDSTx+skEqQhAYiQBuRDNUmlCfiG9N1UL+YnmbyTafmV5M0zypeI19e6xpcWo&#xA;w20jfBF9cikqxqx+NeI4mg4nau9FD03867eCfy/pyPZT6jIL8PBZW6Qzs7LbT1rbzWmpiX4a0AgN&#xA;GoxZVBYKWS+Wr7TrXyTpV7M8djYRafbyO8zQRRxR+kp+MxLBAoUfyIq+AA2xVD+Z9Z0K58va3ZW1&#xA;9az3kuk3F39WjljeVrd4SqzcFJYxtUAPSmKWSKqqoVQAoFABsABihvFXYq7FUsuNCQzXNzYXMunX&#xA;VzCIneARsnJG5JKY5EdOYqy1pupoei8VWNXF9pljo2o3F7rc1r6U0yX1pbrHE31sBWkESurzUkZx&#xA;IoL/AGHXfjk56qMaJiCfv+H470QwGV0aH3Kdteva/lvc20KLa3MAk023E3J0kYH0k9FiH9X93svU&#xA;chQmgJyOHBwyo9Tfz/Yyy5LFjoPu/am+kWdzq+lWTyTy2ulCERDT0DQysYWZUkadSs0dQqvxXiwO&#xA;xPUZRgNwF8xt8RsWzN9Z89/numD+VtAkdnns1uS8It5frLPOJIwCKSCUuHNDTk1TTatMualabQNF&#xA;mEQeyhHo+gIWRAjILV/UgVWWhCxtuqjbr4nFUpv9B0az1rQbm1s44rhtQmZ5lX42Z7C65M7dWPap&#xA;6DbFLJeK1rQV8fngpbS3zHJLHo8zxSek4aP4/UWKgMi8vjZou3+WtelRmB2pOUcEjE0duvD1F7kx&#xA;/wB0L5AhytDEHKARfPpfQ9KP3H3N+XnZ9IgZp2uW+KszsjlvjP7UbzLt0+2cPZkicESZGfPckHqe&#xA;6Uh/siutFZTtw+W/d5iP3Jjme4jsVdirxn/nI6/k06Py9fQTfVblWuoYrkSqh/e+jWLgaGj8eRev&#xA;FeO/2hRSHomt2Wtav5NSHSrxrPU54raSO4ScV2ZHcGeNTyDKCCyAcvkcVeV6x5M/NvTI7/UrvWZL&#xA;vTo5bidLU3s07MrBljj9ORFhPOZ42QcaRhNvtGqr0fT/AM1fJt+yi3uZTGzzR+qIXZAYQhq/AMUD&#xA;iX4CwAajDqMVpMJvP/kyGBpn1e3otS8atylULWpaFQZFAp3XFFKeu6PNaN+ldMuVsYrX1bq+tKrF&#xA;HcmsLEvKxpEAtvvSgNfiIHKqrI8VdirzH8zv+cffJn5ja/b63rd7qNvd29qlkiWUsCRmNJJJQSJY&#xA;Zm5cpj38NsUUg9O/ITyr5bskD+ataXTLcqqxX1zYtCnMLEiB5LUMi14hVVgK0xSrz/lJ5R8wxSWt&#xA;l5o1XjCvC5ks57RqhxxUeo1tJxK8DT0yKfdiqT6H/wA4m/l5o/mPT/MEGqa1Pf6deQ38X1ie2dXm&#xA;glEq+pS2VmDMvxfED74opkH5yan5XhXTIr2DQr7VYpi4t9Z+oSyQ2sscgaWO3vbzTQ4eWNF/vfeh&#xA;K4sgyOTQrDzX+XltpVwUhs7+ytiDZLCsScQkqekiSXcPphlFFWR147BmG+KGP3f5ZadoOl6tqsGo&#xA;Xc08GgTaXGsnoqDDFBxjZykatIyJGoHMkdT1OKbejopVFUsXKgAu1KkjuaADf2GKG8VdirsVdiqE&#xA;t40nmnuJFDqxaCMHcemho4p/lODXxFMx8Q4pGfwHuH7b+xuybREfifj+z9LzS70SmnajDczzODPR&#xA;r62WsMU0Aa1WaONvSK3krkK6hgpV9qqoObESHDxXvVfj4fc4hBuul3+Pi9Ntj6d1cQdiRMg7UcUN&#xA;P9mpJ+ea7FtOUfj8/wBoPzcvJvEH4fL9n3InMhpdiqTa4jHVvLrB2Crfygxjjxathc7mort7HFU5&#xA;xVLPMV1dWumNNbyLEVdBJKTuqFgDxHpz1J6fZPjmv7TzTx4eKBrcWfK+npnv0+nzczQ44zyVIXsd&#xA;vOv60fvb8usG0pH5+ozyTM7fEPiaVi1eSRGtevwLv2x7LN4AbuzLv58RvnGPx9I8gjXCspFVsPuH&#xA;mfvKZZsHEdirsVeN/wDOQ921lL5evI5WSWJb0FI2eKQxt9XDOJUpRVPEFeW/IGhpVVIet6XKJdMs&#xA;5Vf1BJBGwkqx5AoDWrgPv/lCvjihLPO8iReV76RzREEZY9dhKvhikNeTvJ+l+VtKWxs0RpSWM956&#xA;apLMPUd0EjCrN6Yk4rU9MUJ1cQQ3EElvOgkhmVo5Y26MrCjA/MYqwrRtV1DTzbeV/N8dpb2txaix&#xA;sLmS4VjevAIbeTkH4b3JuF9OMDlswP7JKllWhzPLpNsZXSS4iT0Lpo+XD14CYpgvL4qCRGG+KEdi&#xA;rsVUbyxsr2H0Ly3iuYeSv6UyLIvJTVW4sCKg7jFWrOwsbKIw2VvFbRFi5jhRY1LN1aigCp7nFVfF&#xA;WH/mbqerado9nNpepNp9w92EaOJDJNcoYZSYYgtlqr8gVEh427fCh3UVIVR/kUa0dAhn1XV49cN0&#xA;sVxaajGsaB4pLeNmP7qOBOPqlynw14ca71xVjl3onnGyP5gahqmofW9Jv7KQ6PaGV2EISCWqiPiE&#xA;iFCobiDyO+KXoaFyimQBXIHNVPIA9wCQtfuxQ3irsVad0RGdyFRQSzHYADck4JSAFnkkAk0EL6l5&#xA;cCkK/V4T/u5/7wj/ACYyDSv+V/wOY/FOf0jhj3nn8B+v5N3DCHP1Hu6fP9XzRMMSRRJEgoiAKo67&#xA;DL4QEQAOQapSMjZSKTTtXOtTRRRwxaVPcwX890tPUcxxcDDwPP4vUgibnt8BIFGHLJMU1vgY1W7X&#xA;7Vvu1O8Zp6g+4VHuBmPqNhxj+H7uv6/eA3Ydzw/zvv6fjzRQIIqOmZDS7FUm1wy/pby6FVTGb+Xm&#xA;xYhgfqFzSgoa1+YxVS03TNdhv0luLmtsGY+l60klFKsCp5ABuTsrA/shaDrml0uk1McolOXovlxE&#xA;7Udt+dkgg/wiNDm7LPqMMoERj6u+gO75bWPO/JF+ZGVNGnkYsBGY5OSMFI4SK3IkrJsKVPwnbtmV&#xA;2qQNPIm9qO23KQPdLbv9J26NOgF5QO+x9h8x94d5Zkjk0O1kjQxxuGZEIjXYuTWkaRLv1+yMHZMh&#xA;LTRIFA33d5/miI+wLrwRmkCbPx7vMk/amebFw3Yq7FXkX/OQFzdBdCtLeBLyScXrx2sphjVZUSNY&#xA;7oSzELzgMlVSvxV/ycUh6tp5mNhbGdzJOYkMrkIpZ+I5EhC6Cp/lYjwOKEp88TRQ+Vb+aVgkUao8&#xA;jtsFVZFJJPsMUhFW/mby7cXEttFqVs1zDKsEkHqqHEj/AGF4kg/H+z49sUJjHJHJGskbB43AZHUg&#xA;ggioII6g4qlvmHy9Y63p09tMqJcvDLFa33BWlt2kA/eRE7ghlVtjuVGKpb5R1t7pGW6jaCa7LXCw&#xA;rFxghmjYW97bCQbNIl4kjnlu3Oo5UairJsVdirsVdirsVYx5x8inzO0Hqa9qmlRWxEkKaY9tAySg&#xA;OhlSdoJLhGZJCjcZACu1NzVV2vNqPlTyA6eX41u7vSbWGCzFxG0ilYykZeSO0VCeKVZhGo6dBirE&#xA;pvO/mnVI9Wsb7SnttKby1Ldyym0uYZY730aTRyNK3pgBuaKic2qv2qYpepo4dFcVAYAgMCpod9wa&#xA;EfI4obxVRmu4ImCMxMh3EaAu9PHioJp75VPNGJo8+7mfkGyOKUtxyUn9e6ZI2haK3BDyFytXpuqg&#xA;KTtXc1+XfKpcWQgEER5m638ufzv3dWYqAJu5fd+P2ovMpodirsVcQCKHpiqDtZBbuLKU8abWrHoy&#xA;Dotf5lG1PDfxzFxS4D4Z/wA3zHd7x927fkjxjjHx9/6j+xGZlNCTa5Io1by7GQ3J7+UghWK/DYXP&#xA;VgKDr3xVOcVS3zE0a6U7O3ALJCVk5LGFb1k4szOsihQ1C3wnbNf2oQMBJNeqO9gUeIUbIkAAeex2&#xA;cvQgnKK7pef8JvYEfDdry/B6dl6guvrKTM7/AASRyxhmdmcpJHFDWrHeo26DB2Zj4cd8fGJEnYxk&#xA;Lsk0RGPM8+7kE62dzrh4aroQeQqwZSTPNi4bsVdiryP8/wDU9UtItFj062t7ueUXbCCSxj1CcmP0&#xA;QPTSSOYIg5/G1OvEVxSHopGrDyjSyHDV/wBH/wCjLxVaXPo/AODrEo+PsyqPYYoeZaRP+b0umasn&#xA;m3mtmLaP6rLcR2gBczQ+k5S14MHb96ZE5UX4ADWpKl6rpmh6dp0MccEYZ4i/CZwpkAkYsVDACiit&#xA;Ao2AAHQYoQ58q6GS0Zt1NgyFG0sgfUiWk9Uubenply29SMVWi3vdIkmNhbPe6fIGmNr637yJ1CII&#xA;rZJSEEbKCQnNVUjbZtlUmu9PE76hPpKQavYXk0c2raFIwiuIrgRJ+8gkqvoT0RG9OTj8fxB0NSVK&#xA;+2urm4VJJtF1vUCkrSo9y9lb8WZQOPo+vbKwSnwkod9wa74ql+oq+labeXqeXbzTLWC3cfWrS+jF&#xA;wiIxl9SeNZWRljcswPKUhSfh+JlxVmmm6pZ6hB6lu/xqF9e3YgSwuyh/TmQElHAO6nFCLxV2KuxV&#xA;2KsJ1nzjYaxpfnbRLOKaG/0WxnR3uVVI5S8EgDwgMzsisvFmKgV6VwFIU9Pg/OK5W1lvLrS7AgMl&#xA;3AEeY1XkFdabfFsQOQ267/DlfBL+d9jZxR7moNM/OSH0w+saVcqXIlMkTo6x/u2BUpGFZv7xaFQK&#xA;UNan4Uwl/O+xRKPcpRwfnTaXdt6Y0C4tZ7kreUW6DpAVJ9Znd6s3wBeIB3b+UbHHjEBt/b72M5mR&#xA;3V7y0/Om40+WOG/0GyvGmQRyxQXT0gG7NWVmXmaBePClCfiBAyxgryt+cY+siJPLrVYfU3Zr5aLX&#xA;f1FCtUlf5WGKoW9l/O5I54LeHQZpZLblb3iNcxLFcAKWR43MhdSeSoQR2LU6Yq4eavzTiS59fyWk&#xA;0rxJJp6W1/BxV24h4rh5CtGTlXkgIPQfzYpVYr/84bic00rRrGB7cMvr3E8rJOVAoxiHxDlU0AG2&#xA;3LuVV0cf5vzR231tfLrI7EX0BS8+FQ3wmNuThqrv8SimRlESFEWExkQbCEnh/OO3tiYbbRZp/VHF&#xA;Ibm9VRDQ1HGai1r3DfRlX5cDkZD4ls8YnmB8g3C/5jJ5r0dNdisH0prtzbS20j+ojGzuPhYMg5EL&#xA;XfYH9Uo4yDvIn5fqYymCOQHz/Wyu18w2lxeizEUsc3LgeYXiG4s6iqs32lif5UoaHbMPF2nCeTw6&#xA;kJXW9dxI69RGXuqjR2cjJopRhx2CP7B3eY+diwp+Zb21iszbSPGs8gEkIlk9EH0pEJKvzh+Ja1A5&#xA;j55X2tnhHHwEgSO4uXD9MhyPFHccx6h72egxSM+IA0NjQvmD0qW3wKv5elkl0iCSQqXblUpKZx9s&#xA;/wC7C8tf+CNMu7MmZYIk1e/KXF1P8Vy+89zXrYiOUgfdw9O6h9yY5nuI7FXYq8U/O3RdO1HXrS4s&#xA;nLX1nDP+lxBdxQXKIIfXhCJclk4+lDM7CNORAqfcJD1/Rnik0exeJmeJ7eJo3chmKlAQWKgAkjqQ&#xA;MKGO/mR5m0LSNHFnqN2ttcah/vKGVypEMsfqM7gFI1X1FHJyBUgdTikJsvnPygxdV1ywJQ8W/wBJ&#xA;h2NA383gcUUu/wAX+U/+r3Yf9JUP/NWK0t/xn5Q9T0/05Yc6cqfWYenT+bFaQ15rXkK9objVNOZw&#xA;ySLKt1EkivHXgyyI6upXkw2PQkdzilQXV/IcLQj/ABBFUTmaMNqsr1kK1KtynPJKJ9hvg9t8VQ11&#xA;J5Alsnih1qxF6I5Y7a/urqO9mi9ZSrDlcySM0Zr8UZbicVY3dTabYIn1XzBbfV7WSMWoN5bXSxQR&#xA;BgjGQzaderwV3+D6xLsxHxAkYqutPzA1pVg9XVNM5RzSrOtzeJymACkD/RbSRIkFdjzau/xNTFaZ&#xA;H5I843uvXEiT3GnTIsTSBbH616gPqcRzW4ii4Cm3ievTFWYYodirDfPun2eleVPMGoaVpEEt9qqx&#xA;Q6nxhkdpoZpFt5pJRbNHM/pQyu9FcHY7jriqP0XQILrRrC5vRqFreT28UlzbHUdQrFK6BnjPKevw&#xA;sSN8Uo3/AAvpv+/r/wD7iN//ANV8UW841ubzFYefEsLXSrqTTbi7srQ6gt1q8jvbuULgyrcKimIT&#xA;TSAkFQEI6tUKXo/+F9N/39f/APcRv/8Aqvii2Pef9Ph0fyjqF/ZG8nuo1VY4ZLrVLpH5uEKtFDcI&#xA;7cgafaAHUmmKUt/LdNQ1qHU01izvdOSwufq9kqXeqQKY1qAtJbg8+KhTzWinl02xUsz/AML6b/v6&#xA;/wD+4jf/APVfFFvK/PmqeZNG84pZaPpV5qNusSiO79TWpGjEqhjEZkuVQ/WJUSNSuyEVatKYEvVP&#xA;8L6b/v6//wC4jf8A/VfCi0Brmj22naPeX1rDqmoXNvEzwWUOo33qSuB8KCs/c4pYb+U1zq2r3hGs&#xA;aNc6ZFpVtZzWCSS6kqQzSwMkkfC6mkR/gY8eKjgp4mvXFS9Nt9K022ZXgto43WvFlUAjl1p88xsW&#xA;jxYzcYgV5d7bPUZJipSJRBijMolKj1FUqG78WIJH/CjL+AXfVq4jVdF2SQ7FXYq7FWE+Zvyl0DzB&#xA;rM+r3F9qFrc3CBJktJkjQgQvb9Gjc7wzOh36HFNsvsLOGxsbeygr6NrEkMXI1PGNQq1PyGKEBrHl&#xA;bRdX1LTNRv4WkutIdpLJg7oAWZHIZVIDjnDG9D3UYqwvS/K35jp58j1a4vnj0NL69leye/uJ42t5&#xA;owsdIaKpPLdENEi7KTil6Vih5f5+8n/mdqnmC6ufLmqtY6dLboiR/X7iKswHFHWNE4x+k1ZHAJ9Q&#xA;UU+GKXqGKGEfmd5e866zBYJ5WvWsJo/rAuplvJbT4ZYuK/DGj8268GP2GoaHspDIfKdlq9j5a02z&#xA;1iYXGp28CR3Uwkkm5MopUyS/G7U+0x6nfFCF8+6f5q1HyrfWXla8j0/WJ04Q3cpZeA/a4MgJRz0D&#xA;U269cVQf5e6L5v0u21NfMt99cluLx5rQes9wEiKqDxaQKUVmBIjA4r2xSWWYodirsVdirsVdirsV&#xA;eLeaPNnnjyxf3D2+vzamtvra6THa6jBZGF4pdJhvA8n1SC1l5LNOacXUUAFOtVIUdQ/OTz1p/CC4&#xA;i0ppZ3kVLr0zbwRehPfWxEpur2CL97JYqVYzLx5UpI1Kq0nvnP8AMjzJpDW09sLW1UafYXN1FPwn&#xA;hEmo3DRu3q+tbxMIFgIUm4jjJfdvs4qkFn+eXmi9uH4wafZWDyRRm8vlSJrOKV4Ql3dWwvmuPSkW&#xA;UndI1QlR6j1ritPQPIPmnUtautRivJYp0jt9PvIJYUkjjAvberxoJUil4CSJnT1F5cXFcVZjih2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KvJ/zL8z+bfLXmSKTT9XuXsZLdLqSzki0820IN7b2zF2kS2f0Qkz&#xA;E8rlN6fvFWuKUmP5xfmE1tc3Yh0eOK2huXMaq91zNnpq6g7LNb3bwlZQeK8WbhXctx3VpRf89PN/&#xA;pJ6K6TO8zOHlUCKG0kV7pEtbp7q+toxJOLZHVua0Un4H+HkrSO1T85fNFhZ2U0zafHfX93cJFpv1&#xA;V3420GoGxNblr6LnIvBnPpQt/qqvxYrSW6L+dvmdvL+jWUV1pt7rs8lrbSSTRys3pzQWNJpkSdSW&#xA;E11KjkEAshoBQjFaZF5f/NXzVeaH5pvb+0tFn0SxuLiKOExJJFcW7Sr6Vxbi7upwp4K3J0j7ih2J&#xA;VSbzL+bPnHRfMA09b2zkFhNLZ3NpLAizlEa1jS+ui81tEEkE7yoFeFKA1en2VU38jfmz5k13zRp2&#xA;lX/6LiF3JcRT2VsTLcKkFos6XKzR3E0Bindjw48gAKc2NSFaQ8fn7WRo2oal/ihW1+0tr29vvKrW&#xA;kTC1NjOG9DmiLLDyRfRrOzGTnVKGmKvY8UOxV2KuxV2KuxV2KuxVLJf0H/iS35cf079Um9Ljz5fV&#xA;PUj58+Pw8fU48efevH9rFUzxVLdK/Qv1/VvqFPrv1lf0rXnz9b0I+Fef7Po8OPH4fDeuKplirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVSjyl/h7/D9t/h7/AI5HKX6v/e9fWf1P774/7zl1+jbFU3xV&#xA;2KofUfqP6Puv0hw+oejJ9b9Wnp+jxPqc6/s8a1xVZpH1H9E2X1Dl9R9CL6pz58vR4D0+Xq/vK8af&#xA;b+Lx3xVIF/wf/jtfV+uf4k9OX6p9a/SH1bhwT1vqfr/6HXjx5+hv498VTfzJ+g/0RJ+nOP6M9SD1&#xA;ufPhy9dPS58P2fU48q/DT7Xw1xV//9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:b490dc84-bd14-4ef8-905f-0b3eb2bd900e"
    stRef:documentID="xmp.did:b490dc84-bd14-4ef8-905f-0b3eb2bd900e"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:b490dc84-bd14-4ef8-905f-0b3eb2bd900e"
      stEvt:when="2017-12-05T16:03:47-05:00"
      stEvt:softwareAgent="Adobe Illustrator CC 2017 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8ed3d85b-2ccb-4d2c-9279-60cf3039c2ba"
      stEvt:when="2017-12-05T16:03:55-05:00"
      stEvt:softwareAgent="Adobe Illustrator CC 2017 (Macintosh)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="595.280000"
    stDim:h="841.890000"
    stDim:unit="Points"/>
   <xmpTPg:Fonts>
    <rdf:Bag>
     <rdf:li
      stFnt:fontName="ArialMT"
      stFnt:fontFamily="Arial"
      stFnt:fontFace="Regular"
      stFnt:fontType="Open Type"
      stFnt:versionString="Version 5.01.2x"
      stFnt:composite="False"
      stFnt:fontFileName="Arial.ttf"/>
     <rdf:li
      stFnt:fontName="MyriadPro-Regular"
      stFnt:fontFamily="Myriad Pro"
      stFnt:fontFace="Regular"
      stFnt:fontType="Open Type"
      stFnt:versionString="Version 2.106;PS 2.000;hotconv 1.0.70;makeotf.lib2.5.58329"
      stFnt:composite="False"
      stFnt:fontFileName="MyriadPro-Regular.otf"/>
    </rdf:Bag>
   </xmpTPg:Fonts>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="100.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Red"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Yellow"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Green"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Cyan"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Blue"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Magenta"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=15 M=100 Y=90 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="15.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="90.000000"
         xmpG:black="10.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=90 Y=85 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="90.000000"
         xmpG:yellow="85.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=80 Y=95 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="80.000000"
         xmpG:yellow="95.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=50 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=35 Y=85 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="35.000000"
         xmpG:yellow="85.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=5 M=0 Y=90 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="5.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="90.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=20 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="20.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=10 Y=100 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="10.000000"
         xmpG:yellow="100.000000"
         xmpG:black="10.000000"/>
        <rdf:li
         xmpG:swatchName="C=90 M=30 Y=95 K=30"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="90.000000"
         xmpG:magenta="30.000000"
         xmpG:yellow="95.000000"
         xmpG:black="30.000000"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=75 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="75.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=80 M=10 Y=45 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="80.000000"
         xmpG:magenta="10.000000"
         xmpG:yellow="45.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=70 M=15 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="70.000000"
         xmpG:magenta="15.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=50 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=95 Y=5 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="95.000000"
         xmpG:yellow="5.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=100 Y=25 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="25.000000"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=75 M=100 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=100 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=35 M=100 Y=35 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="35.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="35.000000"
         xmpG:black="10.000000"/>
        <rdf:li
         xmpG:swatchName="C=10 M=100 Y=50 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="10.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="50.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=95 Y=20 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="95.000000"
         xmpG:yellow="20.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=25 M=25 Y=40 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="25.000000"
         xmpG:magenta="25.000000"
         xmpG:yellow="40.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=40 M=45 Y=50 K=5"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="40.000000"
         xmpG:magenta="45.000000"
         xmpG:yellow="50.000000"
         xmpG:black="5.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=50 Y=60 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="60.000000"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=55 M=60 Y=65 K=40"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="55.000000"
         xmpG:magenta="60.000000"
         xmpG:yellow="65.000000"
         xmpG:black="40.000000"/>
        <rdf:li
         xmpG:swatchName="C=25 M=40 Y=65 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="25.000000"
         xmpG:magenta="40.000000"
         xmpG:yellow="65.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=30 M=50 Y=75 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="30.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="75.000000"
         xmpG:black="10.000000"/>
        <rdf:li
         xmpG:swatchName="C=35 M=60 Y=80 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="35.000000"
         xmpG:magenta="60.000000"
         xmpG:yellow="80.000000"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=40 M=65 Y=90 K=35"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="40.000000"
         xmpG:magenta="65.000000"
         xmpG:yellow="90.000000"
         xmpG:black="35.000000"/>
        <rdf:li
         xmpG:swatchName="C=40 M=70 Y=100 K=50"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="40.000000"
         xmpG:magenta="70.000000"
         xmpG:yellow="100.000000"
         xmpG:black="50.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=70 Y=80 K=70"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="70.000000"
         xmpG:yellow="80.000000"
         xmpG:black="70.000000"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Grays"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=100"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="100.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=90"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="89.999400"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=80"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="79.998800"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=70"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="69.999700"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=60"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="59.999100"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=50"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="50.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=40"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="39.999400"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=30"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="29.998800"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=20"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="19.999700"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="9.999100"/>
        <rdf:li
         xmpG:swatchName="C=0 M=0 Y=0 K=5"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="4.998800"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Brights"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="C=0 M=100 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=75 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="75.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=10 Y=95 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="10.000000"
         xmpG:yellow="95.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=10 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="85.000000"
         xmpG:magenta="10.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=90 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="90.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=60 M=90 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="60.000000"
         xmpG:magenta="90.000000"
         xmpG:yellow="0.003100"
         xmpG:black="0.003100"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -150.671 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-05 0 mo
-1.52588e-05 150.671 li
423.993 150.671 li
423.993 0 li
cp
clp
.667 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
43.2545 116.718 mo
179.908 116.718 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.707 .648 .637 .691 cmyk
@
43.2545 116.718 mo
43.2545 115.351 li
@
75.3702 116.718 mo
75.3702 115.351 li
@
107.486 116.718 mo
107.486 115.351 li
@
139.602 116.718 mo
139.602 115.351 li
@
171.718 116.718 mo
171.718 115.351 li
@
%ADOBeginSubsetFont: FAAAAA+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /FAAAAA+ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c000006546670676d0000000000000780000005ee
676c7966e738fba20000878800002f2668656164d7c8e4bb00000d700000
0036686865610000000000000da800000024686d74780000000000000dcc
000034d46c6f6361026454f2000042a0000034d86d617870000000000000
7778000000206e616d653450c81800007798000004307072657000000000
00007bc800000bbe67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002affc00078430000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200004
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
4043555441403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b8ff
f060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b
1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012
435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c
5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120b000
5458212043b0005558b00325b00325b8ffc038b8ffc038591bb040545820
43b0005458b00225b8ffc038591b2043b0005458b00325b00325b8ffc038
b8ffc0381bb00325b8ffc03859595959212121212d2c462346608a8a4623
20468a608a61b8ff8062232010238ab902c202c28a70456020b0005058b0
0161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b140
0188535a58b910000020885458b202010243604259592d2cb0024354584b
53234b515a58381b2121591b21212121592d0000000100000005028f3187
1c225f0f3cf5081b080000000000a2e3272a00000000c3047090faaffd67
1000080c00000009000100010000000000010000073efe4e00431000faaf
fa7a1000000100000000000000000000000000000d350600010000000000
0239000002390000023900b002d7005e0473001504730049071d00770556
00580187005a02aa007c02aa007c031d004004ac0072023900aa02aa0041
023900ba0239000004730055047300df0473003c047300560473001a0473
00550473004d047300610473005304730055023900b9023900aa04ac0070
04ac007204ac00700473005a081f006f0556fffd0556009605c7006605c7
009e055600a204e300a80639006d05c700a4023900bf0400003705560096
0473009606aa009805c7009c063900630556009e0639005805c700a10556
005c04e3003005c700a105560009078d0019055600090556000604e30029
0239008b023900000239002703c100360473ffe102aa00590473004a0473
008604000050047300460473004b02390013047300420473008701c70088
01c7ffa20400008801c7008306aa00870473008704730044047300870473
004802aa00850400003f02390024047300830400001a05c700060400000f
040000210400002802ac0039021400bc02ac002f04ac00570556fffd0556
fffd05c70068055600a205c7009c0639006305c700a10473004a0473004a
0473004a0473004a0473004a0473004a040000500473004b0473004b0473
004b0473004b023900bd023900230239ffe5023900090473008704730044
047300440473004404730044047300440473008304730083047300830473
008304730049033300800473006b0473001b0473005102cd006d044c0001
04e3009905e5000305e50003080000e102aa00de02aa003d0464004e0800
00010639005305b4009a0464004e0464004d0464004d0473fffd049c00a0
03f4003805b4007a069600a1046400000231000002f6002f02ec002d0625
007f071d004404e3008104e3009e02aa00e804ac0072046400540473002e
0464003304e5001a047300860473008c080000ef0556fffd0556fffd0639
006308000081078d00520473fffc0800000002aa005302aa004701c70080
01c7006c0464004e03f4002f04000021055600060156fe390473ffe402aa
005c02aa005c040000170400001704730049023900b901c7006c02aa0047
080000250556fffd055600a20556fffd055600a2055600a20239008d0239
ffe0023900040239001506390063063900630639006305c700a105c700a1
05c700a1023900c602aa001902aa000602aa001d02aa002e02aa00e502aa
00a202aa006b02aa003a02aa004b02aa00280473000001c700030556005c
0400003f04e3002904000028021400bc05c7fffd04730049055600060400
00210556009e0473008704ac007204ac00a102aa006b02aa001902aa0021
06ac006b06ac006b06ac0021047300000639006d04730042023900b10556
005c0400003f05c700660400005005c700660400005004730046046bffe1
02aa00ee0556fffd0473004a0556fffd0473004a05c7009e04eb004705c7
fffd055600a20473004b055600a20473004b0473009601c7004204730096
025500880473009a02ac008305c7009c0473008705c7009c047300870639
00630473004405c700a102aa008505c700a102aa003c0556005c0400003f
04e300300239002404e300300300002305c700a10473008305c700a10473
008304e300290400002804e3002904000028046800a40639006006620055
04a00048047400480391006204f000440329002e05300048046bffe10400
00b002eb005208c000330800004f040000990800004f040000990800004f
040000980400009807d5016a05c0009e04ab007204d5009d04ac007104d5
022204d5010505abffe9050001c905ab027e05abffe905ab027e05abffe9
05ab027e05abffe905abffe905abffe905abffe905abffe905ab01c005ab
027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905ab02d605ab006605abffea05d5ffff04d500920800000007eb0130
07eb012007eb013007eb012004d500b204d5008004d5002a082b0198086b
01b807550010060000f40600006f0440003a0540003704c0003f04150040
040000250600005505e100bf038d008904d5ffd90180008002d500860715
00610296000f04d5009202d6008302d6008304d500b202d600700556fffd
0473004a05c700660400005005c7006604000050055600a20473004b0556
00a20473004b055600a20473004b0639006d047300420639006d04730042
0639006d0473004205c700a40473008705c7001f047300060239ffce0239
ffce0239ffe40239ffe40239fff60239fff50239004b01c7001904000037
01c7ffa20556009604000088040000860473009601c7fffa05c7009c0473
008705c900a50473008b0639006304730044063900630473004405c700a1
02aa006b0556005c0400003f04e300300239000c05c700a10473008305c7
00a10473008305c700a10473008305c700a104730083078d001905c70006
055600060400002101c700890556fffd0473004a08000001071d00440639
005304e30081023900b9078d001905c70006078d001905c70006078d0019
05c70006055600060400002101c7008a02aaffe10473001b04cd005a06ac
006b06ac002206ac002206ac004a02aa00e202aa006b02aa00de02aaffea
0557ffff0646ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7
ff780556fffd055600960558fffe055600a204e3002905c700a4023900bf
055600960558000b06aa009805c7009c0533006d0639006305c700a40556
009e04f2009404e30030055600060556000906af007f05fb006102390004
0556000604a00048039100620473008b01c7006b04600088049a008c0400
0019038700480473008b0473005c01c700890400008604000018049c00a0
0400001a0395005c04730044048d008303db0056046000880433001105b4
007a063f005701c7ffc9046000880473004804600088063f0057055700a2
06eb0032045500a105c000640556005c023900bf02390004040000370875
000d081500a406d5003104a900a10515000a05c000a00556fffd054000a7
05560096045500a1056b0000055600a20763000704d5004e05c000a105c0
00a104a900a10540001206aa009805c700a40639006305c000a00556009e
05c7006604e300300515000a061500520556000905eb009f055500570755
00a1078000a106550000071500a8054000a505c00055081500a405c7001a
0473004a0495005b0440008802eb008804ab00000473004b055afffb03ab
003204780087047800870380008604ab00180580008c046b008804730044
04550088047300870400005003aa0026040000210695004b0400000f0495
008a042b0045066b008d0695008d0500002805c0008b042b008404150030
060000890455001f0473004b0473000002eb00890415004b0400003f01c7
00880239000901c7ffa20740001306800083047300000380008604000021
046b008803e900a1034a008808000041089500a00585002d000001010000
001e0000003100000031000001010000007e0000007e0000008c0000008c
000001010000001000000101000001210310007d0000008c023300d20000
030b0000ff04023900b90481006904560032033100190411002d04d10096
01f9009b030f005f04ca009b04b8008c01f9009b0413002803b0005003b4
003c04ca009b04cf005001f9009b02d2003c0498005a043c00190488006e
045f007303b1001903d4000a0466009604130028058e00640524002803f2
009b03f2009b03f2009b01e3005a0356005a0686009b01f9ffac04130028
0413002803b4ff5703b4ff570448002d058e0064058e0064058e0064058e
006404810069048100690481006904560032033100190411002d04d10096
024b0000034a000004b8008c024b00000413002803b0005003b4003c04cf
005002d2003c0498005a0488006e045f007303d4000a0466009604130028
058e00640524002801f9009b0456003203b00050045f0073049b003c0000
ffdc0000ff250000ffdc0000fe51028d00ab028d00a002da0043034d0079
01a8ffba0000004600000046000000460000004600000048000000460000
0046000000460435017c0435012e043500b7043500810435012c043500be
043500af043500810435009a043500db04350085028d00c1043500b30600
01000600010002420036060001000435009e04350098043500cb06000100
060001000600010006000100060001000000004606000100060001000600
01000600010006000100060001000600010006000100051bffba06000100
060001000600010005b5003a05b5003a01f4ffba01f4ffba060001000600
010006000100060001000481003604350036043dffba043dffba03e9004a
03e9004a067f0014077600140327ffba041effba067f0014077600140327
ffba041effba051b003204b500240300fff7060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100000000300000004600000046
000000400000004606000100060001000000ffdc0000fe510000ff160000
ff160000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ffdc0000ff160000ffdc0000ff200000ffdc0473004a080000000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d007f028d005d0600
010004ee0015034d007901a8000e01d6ffdc01a8005601d6001003750032
0375003201a8002d01d60013051b003204b5002401f4ffba01f4ffba01a8
009301d6001305b5003a05b5003a01f4ffba01f4ffba024200000300fff7
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba0481003604350036043dffba043dffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3005f02b3005f02b3
005f02b3005f03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0692003e0692003e043fffba043fffba08c9003e08c9
003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba
04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba045a002a039a00360435ffba0327ffba
064f0027064f00270224ffba021affba04a7004604a700460224ffba021a
ffba04cf002d04cf002d0327ffba0327ffba040d0047040d004701a8ffba
01a8ffba02b4002302b400230327ffba0327ffba043500450435004501f4
ffba01f4ffba024200360300fff7039affba0327ffba0375003203750032
051b003204b50024051b003204b5002401f4ffba01f4ffba045a004004ce
0049045a002604ce0039045a005304ce004a045a005304ce004a06000100
060001000000004600000046060001000600010006000100000000460000
004606000100060001000000004800000046060001000600010006000100
000000460000004600000046000000460000004000000030060001000000
004600000046060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100028d00ca028d00c7028d00c6060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0100ffba0800ffba1000ffba06dc0063053f004406d500a1055b00830000
fddc0000fc2f0000fca60000fe540000fcd70000fd730000fe290000fe0d
0000fd110000fc670000fd9d0000fbf50000fc720000fed50000fed50000
ff02041b00a006ac006b06ac00190000feb60000fd730000fe080000fca6
0000fe530000fd110000fbc80000faf40000faaf0000fc720000fbaa0000
fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb980000fdea0000fe84
0000fdc20000fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000
fd580000fc900000fd150000fc2c0000fc130000fc120000fb960000fb96
01c700880556fffd0473004a0556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a055600a20473004b055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b0239006301c7001f023900ba01c7007c
063900630473004406390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406dc0063
053f004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004405c700a10473008305c700a10473008306d500a1055b0083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
00830556000604000021055600060400002105560006040000210556fffd
0473004a0239ffe201c7ffb0063900630473004405c700a10473008305c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
0000fefe0000fefe0000fefe0000fefe0455fffd02eb000c07630007055a
fffb04a900a10380008604a900a10380008605c700a4046b00880473fffd
040000140473fffd04000014055600090400000f05550057042b00450555
00a1047300870605006304730055063900600473004405b5003a01f4ffba
0224ffba021affba04a7004601f4009e01f4001001f4001b01f4001001f4
006b01f4fff90227ffce0000000f0000fff502aa00a402aa00a40000000e
00000056000000560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8
001d01d6fff501a8009301d6001303750032037500320375003203750032
051b003204b5002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba0481003604350036043dffba043dffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba0481003604350036043d
ffba043dffba02b3003202b3003202b3005f02b3005f02b3005f02b3005f
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3005f02b3
005f02b3003802b3003802b3004902b3004903e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0692003e0692003e043fffba043fffba0692003e0692
003e043fffba043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e
08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435
ffba0327ffba064f0027064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba064f0027064f00270224ffba021affba064f
0027064f00270224ffba021affba064f0027064f00270224ffba021affba
04a7004604a7004604a7004604a70046093e0032093e00320740ffba0740
ffba067f0014077600140327ffba041effba04cf002d04cf002d0327ffba
0327ffba04cf002d04cf002d0327ffba0327ffba04cf002d04cf002d0327
ffba0327ffba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba067f0014077600140327ffba041effba067f00140776
00140327ffba041effba067f0014077600140327ffba041effba040d0047
040d004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d
0047040d004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba
043500450435004501f4ffba01f4ffba0435004504350045043500450435
0045043500450435004501f4ffba01f4ffba043500450435004504810036
04350036043dffba043dffba024200360300fff7031a001a031a001a031a
001a03750032037500320375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
003203750032051bffba04b5ffba051b003204b5002401f4ffba01f4ffba
0375003203750032051b003204b5002401f4ffba01f4ffba051b003204b5
0024067f0045067f0045067f0045067f004501a800280000fe290000fea2
0000ff300000ff1d0000ff120000ff920000fe7e08fc003208ad00320000
ffb50000ffb60000feed0000ff640000fe7e0000ff9f018d000002f6fffd
0000fe820000ff1004cd00320000ff580000ff580000ff640692003e0692
003e043fffba043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a
039a00360435ffba0327ffba034d007902b400230242003601f4ffba0290
ffba01f4002f01f4003b01f4001201f400b101f4006d067f001407760014
01f9009b0000fed902bc000003f2009b045afff504cefff5045a005304ce
004a045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a04350071043500ad045a000f04ce000f0473
001406110014054000a7047300860540000a0473000a05c7005105c70066
0400005005c7fffd067a00140540004a04730046047400480556006e04d5
005304e3ffc40639006d04fe000f070c008701c700830239001f05560096
0400008801c7001504000018072000a405c7ffb80473008b0639006006f2
00630557004406090014047300860556009e0556006b0400004f04f20094
030b00440239002404e300140239002404e3003005fb006105c700a1062e
00140400002104e300290400002804e3002904e30031045c0044045c003f
0473003c0473005503ab003203e5002404730087021400bc034e00bc04ac
0072023900b00aaa009e09c7009e08640046087f009606aa0096039c0083
09c7009c078e009c062b0087047300550556fffd0473004a0000fefe0556
fffd0473004a08000001071d00440639006d0473001a0639006d04730042
05560096040000880639006304730044063900630473004404e30029045c
004c01c7ffa20aaa009e09c7009e086400460639006d04730042084600a4
04f2009e05c7009c047300870556fffd0473004a0556fffd0473004a0556
00a20473004b055600a20473004b0239ff8a0239ff64023900040239fff6
0639006304730044063900630473004405c700a102aaffcc05c700a102aa
006805c700a10473007605c700a1047300830556005c0400003f04e30030
02390024045c0051037e001305c700a40473008705a600a404d6005e0486
005e04e30029040000280556fffd0473004a055600a20473004b06390063
047300440000fefd06390063047300440639006304730044063900630473
004405560006040000210473005704730048047300860473008604000013
0400005004730046047300460473005505e9005503ab004903ab0032050d
0032040f00440239ffb90473004204730042047800500402001904ef0019
0473008b047300870473008701c7001901c7008901c70089029e0000026e
001401c700830493008306aa008406aa008406aa00870473ffa60473008b
046c00870473004406530044063f00570466004402aaffe402aaffe402aa
ffe402aa008502aa008502aa008502aaffe40455008a0455008a0400003f
01c7ffa20214ffb901c7ff7202cb00000239000f0239002404730019048c
0044046000880400001a05c7000604000018042800190400002804540028
045c004c045c007904000024040000500400002404000050063900630440
0088040f004904780050046b0088032e000004000008033b008804730048
040000240400005007b7004607400046080b004605b30024036f002405c0
0024061c0013054a0083050f008303e2001e043800630311006403110064
0146ffce01eb006401eb000001eb000002ea006403d90000029100000187
005a02d7005e01c7008001c7006c01c7008a02aa00fb02aa00fb02ca0032
02ca003204ac007004ac007004ac006504ac006502aa012102aa00de02aa
005902aa012102aa001d02aa005902aa00de023900b6023900b602aa00fb
02aa00fb02aa00a602aa00a602aa00a602aa001d02aaffe202aafffb0294
00000142006402b8003202a0000002ca0032031000960310009603100096
031000960310009602aa006202aa006202aa002802aa001d02aa00470457
009604570096045700960457009604570043045700430457004304570043
04570043031000430457002f0457002f0457002f0457002f0457002f0310
002f04570025045700250457002504570025045700250310002f0457001a
0457001a0457001a0457001a0457001a0310001a04570042045700420457
004204570042045700420310004204570096045700960457009604570096
0457004204570042045700420457004204570042031000420457002f0457
002f0457002f0457002f0457002f0310002f0457002f0457002f0457002f
0457002f0457002f0310002f045700260457002604570026045700260457
002603100026045700420457004204570042045700420457004203100042
045700960457009604570096045700960457004204570042045700420457
004204570042031000420457002604570026045700260457002604570026
031000260457002304570023045700230457002304570023031000230457
002f0457002f0457002f0457002f0457002f0310002f0457004b0457004b
0457004b0457004b0457004b0310004b0457009604570096045700960457
00960457004204570042045700420457004204570042031000420457001a
0457001a0457001a0457001a0457001a0310001a04570024045700240457
00240457002404570024031000240457002f0457002f0457002f0457002f
0457002f0310002f0457004e0457004e0457004e0457004e0457004e0310
004e045700960457009604570096045700960000fec10000fec60000fdac
0000fed80000ff920000fee90000ff4c0000fea00000fec40000ffce0000
ff660000fea00000fed80000fed80000ff970000ff980000ff990000fff4
0000ff420000ff420000ff440000ff5f0000fe870000ffec0000ffa60000
ff510000ff510000ff510000fec90000ff1c000000000000fee90000ff4c
0000ff930000ff2a0000ff560000ffce0000fe870000febb0000fec40000
fec40000fed80000fed80000feb30000fec90000fdad0000fdac0000feb3
0000fec90000fdad0000fe160000fee60000ffa60000fe870000ff440000
feba0000ff230000ff9a0000fdac0000fe88000000000000feb00000ff98
0000fe930000ffa60000fe870000fdac0000ff660000ff440000feb00000
feb00000feb00000ff030000ff520000fd1f0000ff530000ff530000ff53
0000feb50000feb50000ffc30000feae0000fedc0000fec70000fec80000
fedc0000fe1e0000ff420000ff510000feb70000feb002aa00de02aa0059
02aa00fa049a008c04600088062e001407aa0000062e0014047b004c063f
005704cf0044063900630473004405c700660400005004e300a8033b0088
04ff0000043c0032060d000a049d0042072000a406aa0084056500630473
008b056400a40400000a0556006b0556006b04e0000504c5001905e5005f
046e004403b600140347002804cf00440495005b0400005001c7ffa20639
00600389004d03890050055600a205c000a10473004b047800870ab4006d
04fe00100639001404e70014079900bf05b500880558000b0400001a072e
00bf0590008806a10078057b007a086d00bf06f0008804d5006603ab001f
065f0039058200480639006004730044066d0009050c001a066d0009050c
001a0b010063091c004406aa005c04e600440987006d06d000500000fe37
0ab4006d04fe001005c7006604000050040700140000fea60000febc0000
feaa0000fead0000fc2b0000fc4c05c000a10478008705400004042b0014
0556009e04730087055d00a40464008804d5004e03ab003204a900040380
000005ef002904490028070900a4052f0088091800a006f6008806060066
042b005005c700660400005004e3003003aa002607670031058700260555
0057042b004506e4000a0554000a06e4000a0554000a023900bf07630007
055afffb055700a1046800860540001204ab001805c700a4046b008805c7
00a4046b008805550057042b004506aa00980580008c02aa002e0556fffd
0473004a0556fffd0473004a08000001071d0044055600a20473004b0605
00630473005507630007055afffb04d5004e03ab003204d5004e045c004c
05c000a10478008705c000a1047800870639006304730044063900600473
004405c0004a0415002b0515000a040000210515000a040000210515000a
0400002105550057042b0045071500a805c0008b0540004a0473004607bf
004a0703004607a6006606860053054d00660413005307c3001207470018
084600a4070700880639006d0478005005f90030055300260000ff430000
fec90000ff770000ffb00000ff470000ff560000ff740000fed70000feac
000000000000ff520000ff56000000000000feac0000fd9a000000000000
ff6a0000ff7c0000ff690000ff560000feac0000ff7f0000ff560000fdef
0000ff430000ff690000ff7c000000000000fdae0000ff8c000001020000
fefe0000fefe0000fedf0000fedf0000ff580000ff200000fefe0556fffd
0473004a05560096047300860556009604730086055600960473008605c7
00660400005005c7009e0473004605c7009e0473004605c7009e04730046
05c7009e0473004605c7009e04730046055600a20473004b055600a20473
004b055600a20473004b055600a20473004b055600a20473004b04e300a8
023900130639006d0473004205c700a40473008705c700a40473008705c7
00a40473008705c700930473006805c700a4047300870239ffdf01c7ff92
023900200239000605560096040000880556009604000088055600960400
00880473009601c7007e0473009601c7ffb90473009601c7ffa504730096
01c7ffa306aa009806aa008706aa009806aa008706aa009806aa008705c7
009c0473008705c7009c0473008705c7009c0473008705c7009c04730087
063900630473004406390063047300440639006304730044063900630473
00440556009e047300870556009e0473008705c700a102aa008505c700a1
02aa008505c700a102aa005e05c700a102aa00260556005c0400003f0556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
04e300300239002404e300300239002404e300300239ffff04e300300239
000e05c700a10473008305c700a10473008305c700a10473008305c700a1
0473008305c700a104730083055600090400001a055600090400001a078d
001905c70006078d001905c70006055600090400000f055600090400000f
055600060400002104e300290400002804e300290400002804e300290400
0028047300870239000305c70006040000210473004a01c7008904a00048
04a0004804a0004804a0004804a0004804a0004804a0004804a000480556
fffd0556fffd068200130682001306820013068200130682005606820056
039100620391006203910062039100620391006203910062061e0000061e
0000076c0000076c0000076c0000076c00000473008b0473008b0473008b
0473008b0473008b0473008b0473008b0473008b068f0000068f0000081f
0000081f0000081f0000081f0000081ffff3081ffff301c7008101c70081
01c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7ffa2030100000301
0000049100000491000004910000049100000491fff30491fff304730044
0473004404730044047300440473004404730044069d0000069d0000082d
0000082d000007c9000007c9000004600088046000880460008804600088
046000880460008804600088046000880682000007ae00000812000007ae
0006063f0057063f0057063f0057063f0057063f0057063f0057063f0057
063f0057065f0000065f000007ef000007ef0000078b0000078b0000078b
ffff078bffff04a0004804a0004803910062039100620473008b0473008b
01c7ffe601c7006804730044047300440460008804600088063f0057063f
005704a0004804a0004804a0004804a0004804a0004804a0004804a00048
04a000480556fffd0556fffd068200130682001306820013068200130682
0056068200560473008b0473008b0473008b0473008b0473008b0473008b
0473008b0473008b068f0000068f0000081f0000081f0000081f0000081f
0000081ffff3081ffff3063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd0556fffd0556fffd0556
fffd02aa00e502aa00fd02aa00e502aa000602aa00060473008b0473008b
0473008b0473008b0473008b068200000682000006f3000006f3000005c7
00a402aa001302aa001302aa000601c7ffbb01c7ffab01c7ffca01c7ffca
01c7ff9301c7ff930239001a0239fff5036500000365000002aa001302aa
001302aa000604600088046000880460008804600088048d0083048d0083
0460008804600088055600060556000606e6000007180000061e000002aa
ffea02aaffea02aa0059063f0057063f0057063f0057063f0057063f0057
07650000069d000007270000065f000005fb006102aa00de02aa00e50473
000d05c7006605c7006606aa008705c70024095000a1078d00190556001f
04e30030080000290400003004c100660000ff530000ff530000ff530000
ff5301c7001901c7ffa2042b0005055600110574004602cbffa3057a0087
02f0ffc8057f000a057f000a02aa008402aa008402aa00c902aa00c902aa
00a002aa005902aaffaf02aa003a02aa0006023900b902aa00a902aa00a9
02aa00a902aa00a9032e001e032e001e02aa003a0000ff730000ffa50000
fed80000ff230000ff720000ff720000fee70000ffa50000ff530000ff53
0000ff530556009e0473008703f8001905fb0019071d0044044000190400
0050046900870469001903eb008703ab003201c700880361004104000088
033600100580008c04780087047300440400001304de004404de004404de
000d078d005003a800440473004404730044042b00840455001f0455001f
03aa00260460008804c6004405de004404c600440400001a05c700060400
002803ab0032036b003f04db001f02eb00880400001a04550088042b0084
05b4007a04ab001803a00000054f0000035100320351ffd1039800320348
00320348003203f80032036e0032015600690284002d0366003202d00032
0415003203710032036f003204180032030f003203590032039c00320376
0031036f003204fb000002fa003202fa00320304003204cc003203050064
0305003202f9003202f90032028c0032028c0032030400320142006402b6
006404950064030f00640305003202d50032030500320305003203060064
01c20032030f006403420032049500640292000003200000031500640292
0000030600320385003202bf00000142006401eb0064030f006402920000
0315006402920000030900320385003202bf000005ed00460a6600460613
00460689ffba0541ffba01e9003c045a00110000ff0d0000ff350000fece
0000feb70000fec90000ffcf0000ff4f0000ff9e0000feca02b3005f02b3
005f03e9004a03e9004a039affba0327ffba039affba0327ffba05ad0069
053d002d05fd009604dc005004e0003c05f6009b053f00280650002804ac
00720000fe3b0000fe660000fe660473fffc02aa005302d5ffce01a8ffba
01a8ffba01a8ffba01a8ffba0658001509c5004704000000080000000400
00000800000002ab000002000000015500000473000002390000019a0000
00ab00000000000005e5000305c7006606aa00980580008c074400830718
0046071800480556fffd05c70066040000140473000a04e300300400004f
0400002804a5001d000001020000ff420000febf0000ff3a0000ff53048d
000a05c7005105c7006605c70051045500a102eb00880000ff430000ff04
0000ffac02d200960000ff37021affba0250001e0000ff3a0000ff5b0000
ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a05b5003a01f4ff96
01f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba02b3003202b3003202b3005f02b3005f03e9
004a03e9004a0692003e0692003e043fffba043fffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba045a002a039a
00360435ffba0327ffba064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba067f0014077600140327ffba041effba067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
02b4002302b400230327ffba0327ffba02b4002302b400230327ffba0327
ffba043500450435004501f4ffba01f4ffba043500450435004501f4ffba
01f4ffba043500450435004501f4ffba01f4ffba040d0047040d004701a8
ffba01a8ffba03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0473ff93047300460239ffbf06aaffd50473ffb70473
ff9102aaffa402aaffa40400ffff0239ffb90400002804730089030b0064
047400480649002401c7001901c700190473001e0460001e048c000a0473
0086047300460239001305b400420400008801c7fffc06aa00870473008b
0473008702aafffb0400003f0318ffa20400001a0400000f040000280473
004a04730048047300460473004b03ab004903ab00320534005501c70088
0400001301c7ffa204730083045c004c0304006402d5003202c9003302fc
0032028c003201d5003201d5000003040032031100640142001901420064
0142006401420019022a0000014200640142000902330064049300640493
0064030fffc9030f0064030e0064030500320300003202b800320142ffca
01c20032030f001d031a00320306006402d400640292000002de003202de
003202de003202f4003202ea00320000febc0000febc0000ff730000fea9
023900b902fa003202f900320305003202a0000002f900320639006d0556
fffd0473000f05c7006602aa004104a0004804a0004804a0004804a00048
04a0004804a0004804a0004804a0004801c7ff9b01c7ffab01c7ff9b01c7
ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb046000880460008804600088
046000880460008804600088046000880460008801c7ffab01c7ffab01c7
ffbb01c7ffbb04600088046000880460008804600088045a005304ce004a
03a000130556001105c700290558000b055600a20473004b0400003301c7
ffa205e600630473004805c7000002aa000f055600060400002104000013
040000500400001301c700830455fffd02eb0001055600090400000f0556
00090400000f04d5005303ab00490540001204ab00180000fec60000fed4
0000fec60000fed40000fe5f0000fe5f0000ff720000ff730000fee7078b
000a03eb004c040000130473000a01c700150473fff40556001105c700a1
047300190239ff8b05c700a404730087055600960400008804e300290400
00280400003b049e00a403670088053000480000ff530000ffbc0000fefe
0000fefe0000fea40000fea401c70088000000000000002a0000002a0000
002a0000002a0000002a0000002a0000002a0000002a0000002a0000002a
0000002a000000aa00000150000001500000015000000150000001500000
018c0000018c00000348000004240000064e000008280000098800000b42
00000d1800000dc400001058000010580000105800001058000010580000
105800001058000010580000105800001058000010580000119200001192
000012560000130c0000130c0000130c0000130c0000130c0000130c0000
130c0000130c0000130c0000130c0000130c0000130c0000130c0000130c
000013ba000013ba000013ba000013ba000013ba000013ba000013ba0000
13ba000013ba000013ba000013ba000013ba000013ba0000168c0000168c
00001840000019f400001bb200001bb200001da200001f460000203a0000
203a0000203a0000203a0000226a00002430000025f2000027b6000027b6
000028bc00002c6400002d8800002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f2600002f2600002f2600002f2600002f26
00002f2600002f2600002f2600002f2600002f2600002f2600002f260000
2f2600002f2600002f2600002f26000100000d3500f2003c009d00070002
0010002f005600000468041d000500020000000e00ae0000000300000000
006a0000000000030000000700ba006a0001000000000000003501240001
000000000003000e01590001000000000004000e01670001000000000006
000e01750001000000000007005d01830003000104090000006a01e00003
000104090001001c024a0003000104090002000e02660003000104090003
001c02740003000104090004001c02900003000104090006001c02ac0003
00010409000700ba02c800a9002000320030003000360020005400680065
0020004d006f006e006f007400790070006500200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00410072
00690061006c00200069007300200061002000740072006100640065006d
00610072006b0020006f006600200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e00200069006e002000740068006500200055006e0069007400650064
002000530074006100740065007300200061006e0064002f006f00720020
006f007400680065007200200063006f0075006e00740072006900650073
002ea9203230303620546865204d6f6e6f7479706520436f72706f726174
696f6e2e20416c6c205269676874732052657365727665642e524948504a
592b417269616c4d54524948504a592b417269616c4d54524948504a592b
417269616c4d54417269616c20697320612074726164656d61726b206f66
20546865204d6f6e6f7479706520436f72706f726174696f6e20696e2074
686520556e697465642053746174657320616e642f6f72206f7468657220
636f756e74726965732e00a9002000320030003000360020005400680065
0020004d006f006e006f007400790070006500200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00520049
00480050004a0059002b0041007200690061006c004d0054005200650067
0075006c006100720052004900480050004a0059002b0041007200690061
006c004d00540052004900480050004a0059002b0041007200690061006c
004d00540052004900480050004a0059002b0041007200690061006c004d
00540041007200690061006c002000690073002000610020007400720061
00640065006d00610072006b0020006f006600200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200069006e002000740068006500200055006e0069
007400650064002000530074006100740065007300200061006e0064002f
006f00720020006f007400680065007200200063006f0075006e00740072
006900650073002e00>
<b900540328b326181fd0bc032900e0032900020329b22b1d1fb90327031d
b23b1f40b80323b31215320f412d03200001002f0320000100200320006f
032000af032000bf03200004005f031e00010010031e007f031e0080031e
00af031e00bf031e00d0031e00060000031e0010031e0020031e006f031e
009f031e00e0031e0006031d031cb2201f1041270319007f03190002000f
031700ef031700ff03170003001f0317002f0317004f0317005f0317008f
0317009f03170006000f0317005f0317006f0317007f031700bf031700f0
0317000600400317b2923340b80317b28b3340b80317b36a6c3240b80317
b2613340b80317b35c5d3240b80317b357593240b80317b34d513240b803
17b344493240b80317b23a3340b80317b331343240b80317b32e423240b8
0317b3272c3240b80317b312253280b80317b30a0d32c04116031600d003
16000200700316000102c4000f0101001f00a0031500b003150002030600
0f0101001f00400312b32426329fbf03040001030203010064001fffc003
01b20d1132410a02ff02ef0012001f02ee02ed0064001fffc002edb30e11
329f414a02e200af02e200bf02e2000302e202e202e102e1007f02e00001
001002e0003f02e0009f02e000bf02e000cf02e000ef02e0000602e002e0
02df02df02de02de000f02dd002f02dd003f02dd005f02dd009f02dd00bf
02dd00ef02dd000702dd02dd001002dc0001000002dc0001001002dc003f
02dc000202dc02dc001002db000102db02db000f02da000102da02daffc0
02d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b2
171b32b9ffc002d3b2121632b802d2b2f9291fb90326031cb23b1f40bb03
22003e00330322b225311fb80318b23c691fb802e3b3202b1fa0413002d4
00b002d40002000002d4001002d4002002d4005002d4006002d4007002d4
0006006002d6007002d6008002d6009002d600a002d600b002d600060000
02d6001002d6002002ca002002cc002002d6003002d6004002d6005002d6
000802d0b2202b1fb802cfb226421f411602ce02c70017001f02cd02c800
17001f02cc02c60017001f02cb02c50017001f02c902c5001e001f02ca02
c6b21e1f00410b02c6000002c7001002c6001002c7002f02c5000502c1b3
24121fff411102bf0001001f02bf002f02bf003f02bf004f02bf005f02bf
008f02bf000602bf0222b2641f12410b02bb00ca0800001f02b200e90800
001f02a600a20800406a1f4026434932402043493240263a3d3240203a3d
329f209f26024026969932402096993240268e923240208e92324026848c
324020848c3240267a813240207a813240266c763240206c76324026646a
324020646a3240265a5f3240205a5f3240264f543240204f5432b8029eb7
24271f374f6b0120410f0277003002770040027700500277000402770277
027700f90400001f029bb22a2a1fb8029a402b292a1f80ba0180bc018052
0180a201806501807e01808101803c01805e01802b01801c01801e018040
0180bb0138000100800140b40180400180bb013800010080013940180180
ca0180ad018073018026018025018024018020013740b80221b2493340b8
0221b2453340b80221b341423240b80221b33d3e320f410f0221003f0221
007f0221000300bf022100cf022100ff0221000300400221b320223240b8
0221b3191e3240b80222b32a3f3240b80221b32e3a326f414802c3007f02
c3008f02c300df02c30004002f02c3006002c300cf02c30003000f02c300
3f02c3005f02c300c002c300ef02c300ff02c3000600df02220001008f02
220001000f0222002f0222003f0222005f0222007f022200ef0222000600
bf022100ef02210002006f0221007f022100af02210003002f0221003f02
21004f0221000302c302c30222022202210221401d101c102b1048038f1c
010f1e014f1eff1e023700161600000012110811b8010db6f70df8f70d00
094109028e028f001d001f0290028f001d001f028fb2f91d1fb80198b226
bb1f41150197001e0401001f013900260125001f013800730401001f0135
001c0801001f0134001c02ab001f0132b21c561fb8010fb2262c1fba010e
001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd720b80401b21fd51c
b802abb61fd41c891fc92fb80801b21fbc26b80101b21fba20b80201b61f
b91c381fadcab80401b21f8126b8019ab21f7e26b8019ab61f7d1c471f6b
1cb80401b21f6526b8019ab21f5e73b80401400f1f52265a1f481c891f44
1c621f4073b80801b61f3f1c5e1f3c26b8019ab21f351cb80401b61f301c
bb1f2b1cb80401b61f2a1c561f291cb80101b21f231eb80401b21f5537b8
0168402c07960758074f07360732072c0721071f071d071b071408120810
080e080c080a080808060804080208000814b8ffe0402b00000100140610
000001000604000001000410000001001002000001000200000001000002
010802004a00b013034b024b5342014bb0c063004b6220b0f65323b8010a
515ab005234201b0124b004b5442b0382b4bb807ff52b0372b4bb007505b
58b101018e59b0382bb00288b801005458b801ffb101018e851bb0124358
b900010111858d1bb900010128858d5959001816763f183f123e11394644
3e113946443e113946443e113946443e11394660443e11394660442b2b2b
2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa
1d59b0324b5358b0ff1d594bb09353205c58b901f201f04544b901f101f0
45445958b9033e01f2455258b901f2033e4459594bb8015653205c58b900
2001f14544b9002601f145445958b9081e0020455258b90020081e445959
4bb8019a53205c58b9002501f24544b9002401f245445958b90909002545
5258b9002509094459594bb8040153205c58b173244544b1242445445958
b917200073455258b9007317204459594bb8040153205c58b1ca254544b1
252545445958b9168000ca455258b900ca16804459594bb03e53205c58b1
1c1c4544b11e1c45445958b9011a001c455258b9001c011a4459594bb056
53205c58b11c1c4544b12f1c45445958b90189001c455258b9001c018944
59594bb8030153205c58b11c1c4544b11c1c45445958b90de0001c455258
b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b01b33b59635c45
6523456023456560234560b08b766818b080622020b163594565234520b0
03266062636820b003266165b059236544b063234420b13b5c4565234520
b003266062636820b003266165b05c236544b03b2344b1005c455458b15c
406544b23b403b4523614459b347503437456523456023456560234560b0
89766818b080622020b134504565234520b003266062636820b003266165
b050236544b034234420b147374565234520b003266062636820b0032661
65b037236544b0472344b10037455458b137406544b24740474523614459
004b5342014b5058b108004259435c58b108004259b3020b0a124358601b
2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342
b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f23
42b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b
7475737500184569444569444569447373737374757374752b2b2b2b7475
2b2b2b2b2b73737373737373737373737373737373737373737373737373
2b2b2b45b0406144737400004bb02a534bb03f515a58b1070745b0406044
59004bb03a534bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03a
515a58b1030345b040604459004bb02e534bb03c515a58b1090945b8ffc0
6044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b2b2b43
5c58b9008002bbb301401e017400735903b01e4b5402b0124b545ab01243
5c5a58ba009f02220001007359002b7473012b01732b2b2b2b2b2b2b2b73
7373732b2b2b2b2b002b2b2b2b2b2b004569447345694473456944737475
456944734569444569444569447374456944456944732b2b2b2b2b732b00
2b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b737475732b737475737475
2b2b2b742b2b000000>
[12071 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> FAAAAA+ArialMT AddT42Char 
2 42 11 <0001007cfe51026005d30010003d400a270f0100101207081010b80133b3
009f0e08b801334011079f0e5e0003100320030303ac119d8c182b10f65d
fdf6ed10f6ed003f3c3f3c3130015d012602113437363733060706070615
100101df95ce4d5abc8179273d232b012bfe51bc01f8010eeedafdfbd059
8a96bbbdfe1ffe20>FAAAAA+ArialMT AddT42Char 
2 170 12 <0001007cfe51026005d300100065400c2802281002090a1001001209b801
33b30a9f0301b80133b4009f035e0eb8fff0b4101002550eb8fff8b40f0f
02550eb8ffe4b40d0d02550eb8ffec400f0a0a02550f0e1f0e020eac129d
8c182b10f65d2b2b2b2bfdf6ed10f6ed003f3c3f3c3130015d1323001134
272627262733161716151002fd81012b2b223d277a81bc5a4dcffe5101e0
01e1bcb9968a5ad2fbfddaeefef2fe08>FAAAAA+ArialMT AddT42Char 
2 396 19 <00020055ffe7041105c00010001d0155b10202435458400a1a1e0405141e
0d0d1709b8ffe8b40f0f025509b8ffe840190d0d02550911000c0f0f0255
00160c0c0255000c0d0d0255002f2b2b2bcd2f2b2bcd003fed3fed31301b
b10602435458400a1a1e0405141e0d0d1709b8fff4b40f0f065509b8ffe6
b40d0d065509b8ffee40190b0b0655091100100d0d065500100c0c065500
100b0b0655002f2b2b2bcd2f2b2b2bcd003fed3fed31301bb4062019101c
b8fff0b202200bbeffe00016ffe00012ffe0000fffe0406204068702880b
880fc90e0509070b180245134c154a19431b54135c155c19521b6b076b0b
63136c156b19601b79027706760b7a0f870698079610c918da02d606d60b
db0f1a1a1e0405141e0d0d17730940212334300901000910090209901f11
7300b8ffc0400e212334200040000200901ec78b182b10f65d2bed10f65d
712bed003fed3fed3130015d71005d003838383838013838385959131012
363332161612151002062322272613101633323611102623220706556bd3
a076b274426ad3a1d47991b9a97c7ca9a97e7c4a5d02d30104013dac5fb3
feffdafefefec3ad98b7019dfe97eff00168016aee698600>FAAAAA+ArialMT AddT42Char 
2 840 20 <000100df000002fb05c0000a00af402003400d11346b047f028f02990804
ac04010900060502030905010c0201ca0a00b8ffc0400a21233430000120
000100b8ffe0b41010025500b8ffea40110f0f0255001c0c0c0255000e0d
0d025500b8fff040190f0f065500100c0c065500100d0d0655001a0c0540
0d0f3405b8ffc0400e212334300501200540050205190bba013c01850018
2b4e10e45d712b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c003f3f173901
11393130015d005d2b212311060607353636373302fbb441d35497e22f74
047b3e7c1fae47ca5f00>FAAAAA+ArialMT AddT42Char 
2 1060 21 <0001003c0000040705c0001e01c7b10602435458400911100d1813130655
0db8fff4b4111106550db8ffee4009101006550d1e14051eb8ffe8401713
1306551e1e111106551e1c0e1006551e0c0d0d06551eb802bb400c020a17
17201f10110202201f1112392fd4cd1112392fcd002fed2b2b2b2b3fed2b
2b2bc43231301bb10202435458400911100d0c121202550db8fff440090f
1102550d1e14051eb8ffe0400b121302551e140f1102551eb802bbb2020a
17b8ffe8b40b0b025517b8ffec400e0d0d02551717201f10110202201f11
12392fd4cd1112392f2b2bcd002fed2b2b3fed2b2bc43231301b40363b05
3b06bb05bf06bb07c708c91c07490c590c540e6b0c640e7a127a138912bc
12e51ae51bf01a0cbf0bb713021b101c101d101e1006befff00007ffe000
08fff00009fff0401a1e0a10080606ca1c1a141c1c1a081c1a030102081a
1c030d1e10b802a4b34f110111b80118b50d1e1405001eb802bb400f0102
0c0a7317d30000014021233401bb0281002000100138400c11b53f025f02
6f027f020402ba0224001f018fb18b182b10f65df4ed10f62b3c10f4ed00
3f3cfd3c3fedfd5de4111217390111121739870e2e2b0e7d10c401111239
313000383838380138383838005d015d7259592515212637363637363635
34262322060727363633321615140606070606070407fc37021725a39aef
a8997b829c01b913f8d1d3f648a7c2a25c1eadad413c63c07ec4e5666b93
9c8a13cfd9eaad58aabca4886131>FAAAAA+ArialMT AddT42Char 
2 1614 22 <00010056ffe6041605c0002b0159b10202435458400b1918400d0d025518
1c0001b8ffc0402b0c0d02550129230a0d0f0c0f1e0a0a29151e1c041e29
1c05290d230d0c181901001220100c0c0255200726b8ffe8b40c0d025526
2f2bcd2f2bcd2fcd2fcd2f0012393f3f10ed10ed12392fedc610c6123910
c42b3210c42b3231301b4028050d160d450d860d0445115711761b035216
6c106a146416750d7914860d8a14891ba50d0a052003b8ffe0400b0b0c0d
0e040701230d0c01b802a4b340000100bb01180029000d0135b40c0c1504
18ba02a4001902684027151e1c05041e290d12735f206f200220180d0d06
55208007732640212334302601002610260226b8fff4b70d0d065526902d
18b80138b219d301ba01380000ffc0400b212334200040000200902cb801
92b18b182b10f65d2bedf4ed10f62b5d712bedf42b5ded003fed3fedfde4
1112392fed10fd5de411123901111217393130013838015d005d01715913
371616333236353426232207371633323635342623220607273636333216
1615140607161615140023222656b41f956b7fafa27d334c14120b73b886
6a698c14b421eaae78ca6b66648290fee8d6c1ff0183189987b0827ca114
9e02787d6382848420b5c767b2645f9c2e1ebd8ec0fef5e6>FAAAAA+ArialMT AddT42Char 
2 2088 23 <0002001a0000041005ba000a000d0126403612580c680c9a0ca90cc90c05
4c034c0d94040312010208000c060307050a0b0307000c0c0d0dca030414
030304030d00020c0d040703bb02bb0008000201a0400a000404000c0c00
ca0a04b80266b705050a401d1f340ab8ffe0b4101002550ab8ffe6b40d0d
02550ab8ffeeb40d0d06550ab80137400d07402223340780213507900f02
b8ffc0400b0d14340002100220020302b8ffe0b40d0d025502b8ffe4b60d
0d065502b50eb8018cb18b182b10ec2b2b5d2b10f62b2bf42b2b2b2b3c10
e610fd3c003f3f10f43cf63c1139390111123939872e2b047d10c40f0f0f
313001435c58b9000dffdeb212390db8ffd4400b333903222d3903041d1d
3c2b2b2b2b595d005d435c5840140c400b390c8050390c4026390c221c39
0c402d392b2b2b2b2b5921112135013311331523110311010296fd84029d
93c6c6b4fe35015fa503b6fc4aa5fea102040295fd6b>FAAAAA+ArialMT AddT42Char 
2 4876 55 <00010030000004ba05ba00070089400d05021e04030200080706050409b8
0273b320040104b80101b7062001022f030103b80101b5010120000100b8
ffe8400b1010025500080f0f025500b8fff2b40c0c025500b8ffe2b40d0d
025500b8fffcb40c0c065500b8fffeb40d0d065500b80273b308b699182b
10f62b2b2b2b2b2b5d3c10f45d3c10fde45de6103c103c003f3f3cfd3c31
3021112135211521110213fe1d048afe1b050dadadfaf300>FAAAAA+ArialMT AddT42Char 
2 5772 70 <00010050ffe803ed043e001a015ab1020243545840340e7f0f010f0b0140
0050007000030004121c0b07181c040b010e1507080e0e0255070c0d0d02
55070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10c45d
3210c45d3231301b4047090c011f1c4313431753135317601360179b029b
039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509b60a
b50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa407930004000
5000600070009000a000e000f00009000f0f0b000004121c0b07181c040b
1c0f010f240e080d0d06550e221b000100240b2b1f010100010101400b0b
065501401010065501480c0c0655011a0d0d065501491c1524cf07011f07
3f0702070e0b0b0655070a1010065507120c0c065507311b34c4182b10f6
2b2b2b5d71ed10f62b2b2b2b5d724b53234b515a58b90001ffc03859ed72
f42bed72003fed3fed12392f11392f105de4105de43130005d71015d7159
011706062322001134123633321617072626232206151416333236033cb1
1defaedafef772e989addc1faf197f5a88aaa4846a8e018517b7cf011d01
0aac010281afa11b6b6cc3d3d6c28200>FAAAAA+ArialMT AddT42Char 
2 6644 72 <0002004bffe8041e043e0015001d015340171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc04010101006551001010195131c040b17400db8ffdcb40d0d02550d
b8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d
1a1fb8ffc0b32526341fb8ffc040411e2334301f011f163310240740242a
341f073f074f070307200b0b025507180c0c0255071c0d0d0255070e0b0b
0655071c0c0c065507160d0d065507191e3437182b4e10f42b2b2b2b2b2b
5d2b4dfde44e10712b2bf6712b2b2b2b4ded003fedfd5d2b2be43fed1239
2f5d3cfd713c011112393912393130015d005d2b2b2b0171720117060623
22001110003332001114072116163332360121262726232206035eba2cee
b9e9feef0114dcd5010e01fce80ab285638cfdda02510c3856897ca90156
17a3b4011f0103010c0128fedefef91020afba680195864368a6>FAAAAA+ArialMT AddT42Char 
2 8006 76 <000200880000013c05ba0003000700cd405e09360b0b02554f099009a009
b009c009df09f0090700091f09700980099f09b009c009df09e009ff090a
1f09010001070402030906037e0100060506040a0607250500049f04a004
b004c004e00406c004f0040200042004d004e0040404b8fff8b410100255
04b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b065504b8
ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e0847
50182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed0111123939
111239393130015d72712b133533150311331188b4b4b404ebcfcffb1504
26fbda00>FAAAAA+ArialMT AddT42Char 
2 8250 80 <0001008700000626043e002301c7b9000dfff4b40d0d065508b8fff4b40d
0d065509b8ffd8404d0b0d342504e404e409e117e52005d505f620021708
202309181b20090303231e1c06151c0b0b06070106231a19100ad0250190
25a025022517171a0e2590110111041010025511180f0f025511b8ffec40
0b0e0e025511140c0c025511b8ffe840170b0b025511020b0b0655110c10
10065511060f0f065511b8fffab40c0c065511b8fff8b40d0d065511b801
5d400c1825901b011b180f0f02551bb8ffec400b0e0e02551b140c0c0255
1bb8ffee40110b0b02551b040b0b06551b0a101006551bb8fffe400b0d0d
06551b0c0f0f06551bb8fffcb40c0c06551bb8015d4016000233232501d0
00019000a000021f003f004f000300b8fffe401d0e0e025500100d0d0255
00100c0c0255000c0b0b025500160b0b065500b8fffcb41010065500b8ff
f440140f0f0655000a0c0c0655000e0d0d065500192425b80178b3214750
182b2b4ef42b2b2b2b2b2b2b2b2b5d71723c4dfde410f42b2b2b2b2b2b2b
2b2b5dedf42b2b2b2b2b2b2b2b2b2b5dfd4e456544e67172003f3c3c3c3f
3f3c4d10ed10ed11173901111239123931304379400e0c141326140c111b
01120d151b01002b012b2b81015d005d2b2b2b3311331536363332161736
3332161511231134262623220615112311342623220606151187a132a66a
76971f7eca9eaab3235c3e7094b458644c813a0426954e5f6258baafb6fd
27029d6c5f3a95a4fd9702b27878509a91fdd900>FAAAAA+ArialMT AddT42Char 
2 10428 86 <0001003fffe803b1043e00300317407b042214223a094a09442456226522
7c098e098424a613ab2cc2030d09171a1817304b2cd617051b0255020210
32010a185c085c095c0a5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426
b4270f27262427242936245a0a590b64266428742374248024930a9c0c92
28972c9530a40aa90ca327a428b326c5261628b8fff4b40d0d065522b8ff
f4b40d0d065523b8fff4b40d0d065524b8fff4b40d0d065528b8fff4b40c
0c065522b8fff4b40c0c065523b8fff4b40c0c065524b8fff4b40c0c0655
1db8ffde40121e395a0827250c0a041a202615040b2e1d1ab802aa402219
2c0b0b02551f193f194f195f19af19cf19060f191f196f19df19041f198f
190219bd02550015000002aa0001ffc040140b0b025510014001021001d0
0102000110010201b8ffc0b314163401b8ffc040100e113401012e5c1d6c
1d021d1c150704b8fff4b40b0b025504b8ffe6b41010065504b8ffe64013
0f0f0655041c2e0b1f1a011a24194013183432b8ffc0402f0f0f02551918
0f0f025519180d0d025519160c0c025519201010065519200f0f06551910
0c0c065519160d0d065519b8025bb207242ab8ffc0b51c39d02a012ab8ff
e6b40c0c02552ab8ffe8b40f0f02552ab8ffe8b40c0c06552ab8ffeab60d
0d06552a1a32b8ffc04021272a346032c032023f32803202321001010124
00180d0d025500100d0d06550020b8fff4b40d0d025520b8fff4b4101006
5520b8fff440190f0f065520240f100b0b02550f160c0c02550f200d0d02
550fb8fffa40200f0f02550f0e0c0c06550f0c0d0d06550f22df00013f00
4f00020019313437182b4e10f45d714df42b2b2b2b2b2bed2b2b2b102b2b
ed724e105d712bf62b2b2b2b712b4dedf42b2b2b2b2b2b2b2b2bed72003f
ed2b2b2b3fed7112392f2b2b5d71722be410fd5d71722be4111239111239
0111121739313043794040272d1e2305142c261110121013100306220d20
1b000928071b01052d071b011e14201b00210e231b0022230d0c08290a1b
012827090a062b041b001f101d1b01002b2b103c103c2b103c103c2b012b
2b2b2b2a2b818181002b2b2b2b2b2b2b2b2b5d71015d72715d1337161633
323635342726272e02353436373636333216161707262623220615141716
1716171e02151406062322263fb20f897b7c78352593c6994f41382a9153
7dbd5a11b00c73697c6a16162f1b84bf975669c67dcfd9013d1c6b726544
3d2318253249814e4779281f2b487b6718525c5237231c1d130a2433417c
5c5a9f57ac00>FAAAAA+ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>FAAAAA+ArialMT AddT42Char 
FAAAAA+ArialMT /CharStrings get begin
/space 3 def
/parenleft 11 def
/parenright 12 def
/zero 19 def
/one 20 def
/two 21 def
/three 22 def
/four 23 def
/T 55 def
/c 70 def
/e 72 def
/i 76 def
/m 80 def
/s 86 def
end
FAAAAA+ArialMT /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 84 /T put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 115 /s put
pop
end
%ADOEndSubsetFont
/WJCBWH+ArialMT /FAAAAA+ArialMT findfont ct_VMDictPut/WJCBWH+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /three /four 31{/.notdef}rp /T 14{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 140{/.notdef}rp]WJCBWH+ArialMT nfWJCBWH+ArialMT*1 [7.9961 0 0 -8 0 0 ]msf41.4185 126.458 mo(0)sh71.9316 126.402 mo(10)[4.44583 0 ]xsh104.044 126.402 mo(20)[4.44583 0 ]xsh136.156 126.458 mo(30)[4.44583 0 ]xsh168.269 126.386 mo(40)[4.44583 0 ]xshWJCBWH+ArialMT*1 [11.9941 0 0 -12 0 0 ]msf82.2369 139.8 mo(Time \(sec\))[6.88093 2.66269 9.991 6.66872 3.33435 3.99395 5.99705 6.66872 5.99706 0 ]xsh43.2545 116.718 mo
43.2545 19.4536 li
@
43.2545 116.718 mo
44.6205 116.718 li
@
43.2545 100.507 mo
44.6205 100.507 li
@
43.2545 84.2962 mo
44.6205 84.2962 li
@
43.2545 68.0853 mo
44.6205 68.0853 li
@
43.2545 51.8749 mo
44.6205 51.8749 li
@
43.2545 35.6639 mo
44.6205 35.6639 li
@
43.2545 19.4535 mo
44.6205 19.4535 li
@
%ADOBeginSubsetFont: FAAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WJCBWH+ArialMT gcheck setglobal} if
2 336 17 <000100ba0000018700cd000300254018023c000a023c5f006f007f00af00
04a0000100a004a198182b10f65d5ded003fed313033353315bacdcdcd00
>WJCBWH+ArialMT AddT42Char 
2 2440 24 <00010055ffe7042105a6001e0156b10202435458b90001ffc0400d0d0d02
55011c0e0a1e15151c12b802bb400b0f04041e1c0d0e01000718b8ffeab4
0f0f025518b8ffeab40d0d0255182f2b2bcd2fcd2f003fed3fed12392ffd
c410c42b31301b4029120c0d0d06550f0c0d0d06554b1a791d8a1d9613a7
13c30cd60cdb1b080913180e2a1a03093005300bbaffe00003ffe0401013
0a15121313ca0e0f140e13140e0f0db802a440130e0a1e15400ea00e020e
0e0f40150115151c12b802bbb70f0401d340000100b801184020041e1c0d
115f106f107f108f1004108007731840212334301801001810180218b8ff
f4b70d0d065518902012bc0135000f0195000d0138b20eb501ba01380000
ffc0400b212334200040000200901fb80192b18b182b10f65d2bedf4edf4
ed10f62b5d712bedf45d3c003fedfd5de43fed12392f5d11392f5d10ed10
e487082e2b057d10c4001112393130013838383801715d2b2b5913371616
33323635342623220607271321152103363332001514070623222655bd15
996c82b4ad8c578c28a98e02d9fdb74f8491c00108748df4c8fd0180108a
8bc4a29ab24f3f1602f1acfe765cfef6d1c791b2e000>WJCBWH+ArialMT AddT42Char 
2 2882 25 <0002004dffe7041505c0001d002a014fb10202435458401f0f011f015f01
03011b281e400d010d0d14051e1b05221e140d0a1e01002510b8fff44019
0d0d0255101e17100f0f025517100c0c0255170c0d0d0255172f2b2b2bcd
2f2bcdd4cd10c5003fed3fed12392f5ded10c45d31301b402d6b19014407
4015441944205a1254206b03640764086a1264207408751c8508861cd608
d4161107200d0d065527b8ffe0b40d0d065523b8ffe0400b0d0d06552120
0d0d065507b8ffe0b42720232021b8ffe04011281e400d500d020d0d141b
01d35f000100b802684009051e1b05221e140d01b80138401200b5257310
40212334301001001010100210b8fff0b70c0c065510902c0aba0138001e
013940163f175f176f177f170417160c0c065517160d0d065517b80224b3
2bc78b182b10f62b2b5deded10f62b5d712bedf4ed003fed3fedfd5de411
12392f5ded313001383838382b2b2b2b015d005d59010726272623220706
060736363332121514060623220011103736333216011416163332363534
2623220603fbb3182c496b564155620241bc67b4fd77d084e1fee49d89e8
adddfd374f8e4e72a4a27b7aaa04530e6a304d303eeedc6360fef7d28aed
7e014b017c01a9c1a8c2fcdd5daa59b89e98afaf>WJCBWH+ArialMT AddT42Char 
2 3352 26 <000100610000041605a7000d0070400ec40d01040d010402080409030d00
b802bb4030020104090c0d73030302402123344f025f026f0203021a0f08
7309eb004f015f015f02033f015f016f017f010401190eb80192b18b182b
4e10f45d713c4df4ed4e10f6712b3c4d10ed003f3f3cfd3c391139011112
39313001715d13352115060003060723361212376103b58cfeed4b360fb9
0382f38904faad8c95fe12fefbb8dbad01ea01c79c00>WJCBWH+ArialMT AddT42Char 
2 3524 27 <00030053ffe7041905c00017002300300200b10202435458b40c001b1e2e
b8ffc04017131302552e2e12211e0605281e120d1e090c0c0c025509b8ff
f4b60d0d0255092b0fb8fff0b40f0f02550fb8ffe8b40b0b02550fb8ffe8
b60d0d02550f1803b8fff0b41010025503b8fff0b40f0f025503b8fff440
190d0d02550324150c0b0b0255150c0c0c0255150c0d0d0255152f2b2b2b
cd2f2b2b2bcd2f2b2b2bcd2f2b2bcd003fed3fed12392f2bed393931301b
b10602435458b71e090c0c0c065509b8fff4b60d0d0655092b0fb8ffe4b4
0f0f06550fb8ffe4b60d0d06550f1803b8fff0b40f0f065503b8fffc4022
0d0d06550324150c0c0c0655150c0d0d0655150c001b1e2e2e12211e0605
281e120d003fed3fed12392fed3939012f2b2bcd2f2b2bcd2f2b2bcd2f2b
2bcd31301b4037351601291649164926e60ce930050930017d007d017c04
7408710b720c750d7a178b008a018c048608810b840c860d8d17cc11c613
1222b8ffe0b21c201ab8ffe0b220202fb8ffe0b22d2026b8ffe0401e2920
0c001e18000c1b1e2ea02e012e12211e0605281e120d1e73bf090109b802
6740102b730f40202334300f01000f100f020fb80191b6321873b0030103
b80267b2247315b8ffc0400e2123342015401502159031c78b182b10f65d
2bedf45ded10f45d712bedf45ded003fed3fed12395d2fed393901111239
393130013838383838383838015d72710071595901262635343633321615
140607161615140023220035343613141633323635342623220603141616
333236353426232206016a706ce6bfc0ea6b6d878dfef6d9d9fef6916286
6b6885896667883a49905381a8ad827fa7031b29986aa0dadfa06697292c
c488bcff000101c08fc101546884835f638784fcff4d904fa68082aaa800
>WJCBWH+ArialMT AddT42Char 
WJCBWH+ArialMT /CharStrings get begin
/period 17 def
/five 24 def
/six 25 def
/seven 26 def
/eight 27 def
end
WJCBWH+ArialMT /Encoding get
dup 46 /period put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/WJCBWH+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight 27{/.notdef}rp /T 14{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 140{/.notdef}rp]WJCBWH+ArialMT nfWJCBWH+ArialMT*1 [7.9961 0 0 -8 0 0 ]msf34.1388 117.06 mo(5)sh29.0933 100.852 mo(5.5)[4.44583 2.22292 0 ]xsh34.1388 84.6998 mo(6)sh29.0933 68.4838 mo(6.5)[4.44583 2.22292 0 ]xsh34.1388 52.1718 mo(7)sh29.0933 35.9638 mo(7.5)[4.44583 2.22292 0 ]xsh34.1388 19.8598 mo(8)sh43.3258 29.9481 mo
44.7088 29.2192 li
44.6378 29.0831 li
44.6188 29.2352 li
46.0158 29.4141 li
46.0478 29.4141 li
47.4578 29.2991 li
47.5198 29.2802 li
47.6938 29.1832 li
47.5438 28.9161 li
47.3698 29.0131 li
47.4458 29.1472 li
47.4328 28.9941 li
46.0228 29.1102 li
46.0358 29.2621 li
46.0548 29.1111 li
44.6578 28.9312 li
44.5668 28.9481 li
43.1828 29.6771 li
cp
178.219 38.3881 mo
179.481 33.9781 li
179.187 33.8931 li
177.925 38.3032 li
cp
175.383 34.7781 mo
177.074 39.0432 li
177.358 38.9302 li
175.667 34.6652 li
cp
169.28 36.4141 mo
170.83 35.9321 li
170.88 35.9072 li
173.139 34.1332 li
173.045 34.0121 li
173.032 34.1652 li
173.12 34.1722 li
173.146 33.8671 li
173.058 33.8602 li
172.951 33.8922 li
170.691 35.6661 li
170.785 35.7861 li
170.74 35.6401 li
169.189 36.1221 li
cp
163.624 34.4252 mo
163.984 34.7692 li
164.156 34.7961 li
166.374 33.7311 li
166.308 33.5931 li
166.187 33.6871 li
167.182 34.9761 li
167.424 34.7881 li
166.429 33.5001 li
166.242 33.4551 li
164.023 34.5201 li
164.089 34.6581 li
164.195 34.5482 li
163.835 34.2042 li
cp
159.25 31.5651 mo
159.829 30.1741 li
159.688 30.1152 li
159.575 30.2181 li
161.637 32.5042 li
161.864 32.2991 li
159.802 30.0121 li
159.548 30.0562 li
158.968 31.4471 li
cp
155.635 32.7642 mo
157.382 35.4252 li
157.651 35.4001 li
158.191 34.1041 li
157.909 33.9871 li
157.369 35.2822 li
157.51 35.3411 li
157.638 35.2571 li
155.89 32.5961 li
cp
150.783 36.5731 mo
150.975 36.6942 li
151.138 36.6942 li
153.278 35.3411 li
153.323 35.2982 li
154.351 33.7842 li
154.098 33.6121 li
153.07 35.1262 li
153.196 35.2122 li
153.115 35.0822 li
150.975 36.4352 li
151.056 36.5651 li
151.138 36.4352 li
150.946 36.3151 li
cp
145.742 39.0101 mo
146.918 37.0331 li
146.786 36.9551 li
146.882 37.0742 li
148.663 35.6401 li
148.472 35.4022 li
146.69 36.8361 li
146.655 36.8771 li
145.479 38.8531 li
cp
140.32 42.4952 mo
140.554 42.4711 li
140.654 42.4191 li
142.724 40.0372 li
142.609 39.9371 li
142.571 40.0851 li
143.727 40.3842 li
143.804 40.0881 li
142.647 39.7891 li
142.494 39.8372 li
140.423 42.2192 li
140.538 42.3192 li
140.523 42.1672 li
140.288 42.1912 li
cp
134.363 45.4122 mo
134.558 44.8541 li
134.414 44.8032 li
134.433 44.9551 li
136.461 44.7051 li
136.55 44.6622 li
137.936 43.2852 li
137.721 43.0682 li
136.334 44.4451 li
136.442 44.5532 li
136.423 44.4022 li
134.395 44.6522 li
134.27 44.7532 li
134.074 45.3102 li
cp
132.217 52.3892 mo
132.551 50.5682 li
132.401 50.5411 li
132.545 50.5911 li
133.451 48.0092 li
133.162 47.9081 li
132.257 50.4902 li
132.25 50.5131 li
131.916 52.3342 li
cp
130.891 59.6102 mo
131.72 55.0972 li
131.419 55.0422 li
130.59 59.5552 li
cp
128.598 66.5901 mo
130.233 62.3021 li
129.947 62.1932 li
128.313 66.4811 li
cp
124.1 65.2122 mo
124.332 66.1741 li
124.358 66.2281 li
126.317 68.8942 li
126.553 68.9072 li
126.748 68.6932 li
126.523 68.4871 li
126.327 68.7012 li
126.44 68.8041 li
126.563 68.7142 li
124.604 66.0471 li
124.481 66.1371 li
124.63 66.1022 li
124.398 65.1401 li
cp
122.386 58.0981 mo
123.455 62.5352 li
123.753 62.4642 li
122.683 58.0272 li
cp
119.487 51.4761 mo
120.483 52.7281 li
120.602 52.6332 li
120.458 52.6841 li
121.46 55.4982 li
121.747 55.3951 li
120.746 52.5822 li
120.722 52.5372 li
119.725 51.2861 li
cp
113.179 50.7411 mo
114.807 51.5911 li
114.937 51.5961 li
116.829 50.7991 li
116.77 50.6581 li
116.805 50.8071 li
117.483 50.6511 li
117.414 50.3531 li
116.736 50.5101 li
116.711 50.5172 li
114.818 51.3141 li
114.878 51.4551 li
114.949 51.3201 li
113.32 50.4702 li
cp
109.543 47.7302 mo
110.982 52.0861 li
111.272 51.9902 li
109.834 47.6342 li
cp
107.599 40.6422 mo
108.764 45.0812 li
109.06 45.0032 li
107.895 40.5651 li
cp
103.038 37.5281 mo
103.691 38.3312 li
103.89 38.3641 li
105.701 37.2291 li
105.62 37.1002 li
105.499 37.1932 li
106.367 38.3112 li
106.608 38.1241 li
105.741 37.0062 li
105.539 36.9702 li
103.728 38.1052 li
103.809 38.2352 li
103.928 38.1381 li
103.275 37.3351 li
cp
97.4648 36.7982 mo
98.4108 37.1111 li
98.5688 37.0721 li
100.34 35.2501 li
100.23 35.1442 li
100.162 35.2811 li
101.103 35.7452 li
101.238 35.4711 li
100.298 35.0071 li
100.12 35.0372 li
98.3488 36.8591 li
98.4588 36.9661 li
98.5068 36.8201 li
97.5608 36.5082 li
cp
93.0058 31.9312 mo
93.3128 31.6501 li
93.2088 31.5372 li
93.1088 31.6522 li
94.8388 33.1691 li
94.9388 33.0532 li
94.8038 33.1251 li
95.6788 34.7792 li
95.9488 34.6362 li
95.0748 32.9822 li
95.0398 32.9391 li
93.3098 31.4222 li
93.1058 31.4241 li
92.7998 31.7062 li
cp
86.5858 32.8411 mo
88.1578 32.1821 li
88.0978 32.0411 li
88.0148 32.1702 li
89.7058 33.2662 li
89.7918 33.2902 li
90.6568 33.2792 li
90.6528 32.9731 li
89.7878 32.9852 li
89.7898 33.1371 li
89.8728 33.0092 li
88.1808 31.9131 li
88.0388 31.9011 li
86.4678 32.5582 li
cp
79.5228 34.1761 mo
79.8298 34.2101 li
79.8418 34.2111 li
81.4648 34.2672 li
81.5038 34.2631 li
83.1398 33.8881 li
83.1058 33.7402 li
83.1018 33.8922 li
84.0758 33.9161 li
84.0838 33.6102 li
83.1098 33.5872 li
83.0718 33.5911 li
81.4358 33.9651 li
81.4698 34.1141 li
81.4748 33.9611 li
79.8518 33.9052 li
79.8468 34.0571 li
79.8638 33.9061 li
79.5558 33.8712 li
cp
73.1838 31.3221 mo
73.4348 31.3951 li
73.4778 31.2491 li
73.3608 31.3472 li
74.9408 33.2181 li
74.9978 33.2601 li
76.5808 33.9341 li
76.6328 33.9462 li
76.7898 33.9542 li
76.8058 33.6492 li
76.6498 33.6401 li
76.6408 33.7932 li
76.7008 33.6531 li
75.1178 32.9791 li
75.0578 33.1191 li
75.1748 33.0212 li
73.5948 31.1501 li
73.5208 31.1022 li
73.2708 31.0292 li
cp
66.9658 31.3881 mo
67.2008 31.7202 li
67.4288 31.7432 li
68.9458 30.3331 li
68.8418 30.2211 li
68.7538 30.3461 li
70.2838 31.4191 li
70.4188 31.4391 li
70.6468 31.3652 li
70.5528 31.0742 li
70.3238 31.1492 li
70.3708 31.2941 li
70.4588 31.1691 li
68.9298 30.0961 li
68.7378 30.1091 li
67.2208 31.5192 li
67.3248 31.6321 li
67.4498 31.5432 li
67.2148 31.2122 li
cp
62.6828 30.9802 mo
62.7218 31.0532 li
62.9918 31.0541 li
64.4568 28.3221 li
64.3218 28.2491 li
64.2238 28.3661 li
65.3008 29.2662 li
65.4968 29.0311 li
64.4198 28.1321 li
64.1878 28.1771 li
62.7218 30.9092 li
62.8568 30.9822 li
62.9918 30.9102 li
62.9528 30.8372 li
cp
57.4788 29.2341 mo
59.9808 29.4481 li
60.0878 29.4161 li
61.4838 28.3262 li
61.3888 28.2051 li
61.2548 28.2772 li
61.3968 28.5461 li
61.6668 28.4031 li
61.5248 28.1342 li
61.2958 28.0851 li
59.8998 29.1752 li
59.9938 29.2952 li
60.0068 29.1431 li
57.5048 28.9291 li
cp
50.1678 28.6111 mo
54.7378 29.0001 li
54.7628 28.6962 li
50.1938 28.3062 li
cp
.746 .676 .668 .898 cmyk
ef
0 lc
43.2545 36.617 mo
44.6375 35.384 li
46.0355 35.919 li
47.4455 35.4741 li
48.8705 34.821 li
59.9935 36.197 li
61.3895 34.7451 li
62.8565 37.696 li
64.3215 34.764 li
65.8115 36.246 li
67.3245 37.942 li
68.8415 36.4561 li
70.3715 37.684 li
71.9135 37.194 li
73.4775 37.583 li
75.0575 39.261 li
76.6415 40.083 li
78.2365 39.881 li
79.8465 40.082 li
81.4695 39.952 li
83.1065 39.788 li
84.7575 39.77 li
86.4215 39.095 li
88.0985 38.462 li
89.7895 39.181 li
91.4925 39.294 li
93.2095 38.262 li
94.9395 39.251 li
96.7005 42.162 li
98.4595 42.562 li
100.23 41.617 li
102.013 42.736 li
103.81 44.511 li
105.62 43.54 li
107.445 45.6411 li
109.283 51.563 li
111.134 56.903 li
113 55.643 li
114.878 56.481 li
116.77 55.863 li
118.68 54.287 li
120.603 57.932 li
122.535 63.8181 li
124.481 72.188 li
126.44 74.9611 li
128.414 72.754 li
130.401 67.715 li
132.401 56.0681 li
134.414 50.6411 li
136.442 49.666 li
138.482 47.869 li
140.539 47.78 li
142.609 45.153 li
144.692 45.748 li
146.787 43.0391 li
148.931 41.367 li
151.057 42.6931 li
153.196 41.556 li
155.347 38.688 li
157.51 41.632 li
159.689 36.825 li
161.88 38.962 li
164.089 41.054 li
166.308 39.7111 li
168.54 42.7501 li
170.786 42.101 li
173.046 40.5891 li
175.32 40.658 li
177.607 45.447 li
179.908 38.5471 li
.867 .52 0 0 cmyk
@
43.3946 50.3504 mo
44.7786 47.1434 li
44.6376 47.0825 li
44.5146 47.1735 li
45.1646 48.0534 li
45.4106 47.8724 li
44.7606 46.9924 li
44.4976 47.0214 li
43.1136 50.2294 li
cp
178.128 54.0814 mo
180.031 51.5374 li
179.786 51.3535 li
177.883 53.8984 li
cp
171.55 53.8304 mo
173.08 53.4754 li
175.347 53.0714 li
175.32 52.9214 li
175.232 53.0464 li
175.81 53.4514 li
175.985 53.2004 li
175.408 52.7954 li
175.293 52.7704 li
173.019 53.1765 li
171.481 53.5324 li
cp
166.352 50.9514 mo
166.419 50.8804 li
166.308 50.7744 li
166.179 50.8554 li
168.41 54.4084 li
168.571 54.4764 li
168.858 54.4154 li
168.795 54.1165 li
168.508 54.1774 li
168.54 54.3275 li
168.669 54.2454 li
166.437 50.6934 li
166.198 50.6685 li
166.13 50.7394 li
cp
160.696 50.7205 mo
161.818 51.2244 li
161.88 51.0854 li
161.777 51.1984 li
163.986 53.2134 li
164.2 53.2064 li
164.453 52.9414 li
164.232 52.7304 li
163.979 52.9954 li
164.089 53.1004 li
164.192 52.9884 li
161.983 50.9724 li
161.943 50.9454 li
160.821 50.4414 li
cp
155.579 52.0444 mo
157.418 53.4204 li
157.636 53.3845 li
158.926 51.4915 li
158.673 51.3184 li
157.384 53.2114 li
157.51 53.2974 li
157.602 53.1754 li
155.762 51.7994 li
cp
149.267 52.8854 mo
150.978 53.9214 li
151.083 53.9414 li
153.223 53.5634 li
153.292 53.5324 li
153.614 53.2725 li
153.422 53.0344 li
153.1 53.2935 li
153.196 53.4135 li
153.169 53.2625 li
151.03 53.6404 li
151.057 53.7904 li
151.136 53.6605 li
149.425 52.6234 li
cp
142.637 53.6995 mo
144.64 54.4185 li
144.712 54.4265 li
146.807 54.1394 li
146.874 54.1144 li
147.156 53.9185 li
146.981 53.6674 li
146.699 53.8624 li
146.787 53.9884 li
146.766 53.8364 li
144.671 54.1224 li
144.692 54.2744 li
144.743 54.1304 li
142.74 53.4114 li
cp
137.443 57.3654 mo
138.559 56.7125 li
138.482 56.5794 li
138.464 56.7314 li
140.52 56.9744 li
140.668 56.9034 li
141.318 55.8684 li
141.06 55.7054 li
140.409 56.7404 li
140.539 56.8224 li
140.556 56.6694 li
138.5 56.4284 li
138.405 56.4484 li
137.289 57.1004 li
cp
133.479 63.2574 mo
134.554 60.8535 li
134.414 60.7914 li
134.541 60.8764 li
135.631 59.2545 li
135.377 59.0834 li
134.287 60.7064 li
134.274 60.7294 li
133.2 63.1324 li
cp
131.843 70.3074 mo
132.489 65.7644 li
132.186 65.7214 li
131.54 70.2644 li
cp
130.809 77.5745 mo
131.455 73.0324 li
131.152 72.9894 li
130.506 77.5314 li
cp
128.107 84.3944 mo
128.532 83.8854 li
128.554 83.8494 li
130.16 80.2684 li
129.88 80.1434 li
128.275 83.7244 li
128.414 83.7874 li
128.297 83.6895 li
127.872 84.1984 li
cp
124.08 81.8544 mo
124.332 83.0574 li
124.352 83.1064 li
126.133 85.9534 li
126.393 85.7904 li
124.611 82.9445 li
124.481 83.0255 li
124.631 82.9944 li
124.379 81.7914 li
cp
122.577 74.6685 mo
123.517 79.1594 li
123.815 79.0974 li
122.876 74.6054 li
cp
120.725 67.5745 mo
121.916 72.0054 li
122.211 71.9265 li
121.02 67.4954 li
cp
118.668 60.5334 mo
119.97 64.9324 li
120.263 64.8455 li
118.962 60.4464 li
cp
114.478 64.4254 mo
114.84 64.5175 li
114.891 64.5214 li
116.783 64.3594 li
116.909 64.2704 li
117.872 62.1674 li
117.594 62.0404 li
116.631 64.1434 li
116.77 64.2075 li
116.757 64.0554 li
114.865 64.2164 li
114.878 64.3684 li
114.915 64.2205 li
114.552 64.1284 li
cp
109.573 60.8174 mo
110.992 64.4024 li
111.17 64.4954 li
111.88 64.3234 li
111.808 64.0255 li
111.098 64.1974 li
111.134 64.3464 li
111.276 64.2894 li
109.857 60.7044 li
cp
104.963 56.0464 mo
105.651 55.9064 li
105.62 55.7564 li
105.536 55.8834 li
107.361 57.0804 li
107.445 56.9534 li
107.318 57.0385 li
108.272 58.4474 li
108.525 58.2764 li
107.571 56.8674 li
107.529 56.8254 li
105.704 55.6284 li
105.59 55.6064 li
104.902 55.7465 li
cp
99.0036 52.8214 mo
100.117 54.0584 li
101.897 56.1204 li
102.004 56.1724 li
102.198 56.1834 li
102.216 55.8784 li
102.022 55.8674 li
102.013 56.0194 li
102.128 55.9194 li
100.346 53.8564 li
99.2306 52.6174 li
cp
92.9236 51.6064 mo
93.1296 51.7304 li
93.2866 51.7314 li
95.0166 50.7174 li
94.9386 50.5854 li
94.8386 50.7014 li
96.5976 52.2404 li
96.7986 52.0104 li
95.0396 50.4705 li
94.8616 50.4544 li
93.1316 51.4684 li
93.2086 51.6004 li
93.2886 51.4694 li
93.0816 51.3444 li
cp
86.1226 51.0374 mo
86.3716 51.1215 li
86.4546 51.1264 li
88.1316 50.7484 li
88.1496 50.7434 li
89.8406 50.1404 li
89.7896 49.9965 li
89.7416 50.1414 li
90.5076 50.3964 li
90.6036 50.1064 li
89.8376 49.8514 li
89.7386 49.8524 li
88.0466 50.4544 li
88.0986 50.5994 li
88.0646 50.4504 li
86.3876 50.8284 li
86.4206 50.9764 li
86.4706 50.8325 li
86.2216 50.7474 li
cp
79.1446 50.8684 mo
79.8206 50.9844 li
79.9086 50.9734 li
81.5326 50.2474 li
81.4696 50.1074 li
81.4246 50.2534 li
83.0606 50.7654 li
83.1246 50.7704 li
83.5296 50.7194 li
83.4916 50.4164 li
83.0866 50.4674 li
83.1056 50.6194 li
83.1516 50.4734 li
81.5156 49.9614 li
81.4076 49.9684 li
79.7846 50.6945 li
79.8466 50.8334 li
79.8726 50.6834 li
79.1966 50.5664 li
cp
73.0106 49.5175 mo
73.4646 49.5554 li
73.4776 49.4024 li
73.3956 49.5314 li
74.9756 50.5324 li
75.0576 50.4024 li
74.9586 50.5194 li
76.5426 51.8615 li
76.7326 51.8674 li
76.8806 51.7574 li
76.6976 51.5114 li
76.5496 51.6215 li
76.6416 51.7444 li
76.7396 51.6274 li
75.1566 50.2864 li
75.1396 50.2734 li
73.5596 49.2734 li
73.4906 49.2495 li
73.0366 49.2114 li
cp
67.4766 49.7354 mo
68.9576 48.0214 li
68.8416 47.9214 li
68.7256 48.0204 li
70.2326 49.7855 li
70.4656 49.5864 li
68.9576 47.8214 li
68.7266 47.8214 li
67.2456 49.5355 li
cp
63.4006 50.0234 mo
64.4646 47.3164 li
64.3216 47.2604 li
64.1916 47.3405 li
65.0656 48.7734 li
65.3266 48.6144 li
64.4526 47.1804 li
64.1796 47.2044 li
63.1166 49.9124 li
cp
60.5446 49.4824 mo
61.5276 47.4014 li
61.3896 47.3354 li
61.2476 47.3925 li
62.0996 49.5144 li
62.3826 49.3994 li
61.5316 47.2794 li
61.2506 47.2704 li
60.2686 49.3514 li
cp
53.8196 48.7134 mo
58.2336 49.9544 li
58.3166 49.6605 li
53.9026 48.4194 li
cp
47.1026 47.9254 mo
47.5626 47.3684 li
47.4456 47.2714 li
47.4566 47.4235 li
48.8816 47.3154 li
48.8706 47.1624 li
48.8286 47.3094 li
51.1716 47.9684 li
51.2546 47.6744 li
48.9116 47.0154 li
48.8586 47.0104 li
47.4336 47.1184 li
47.3276 47.1735 li
46.8676 47.7304 li
cp
.746 .676 .668 .898 cmyk
ef
43.2545 107.65 mo
44.6375 108.052 li
46.0355 109.393 li
47.4455 109.346 li
48.8705 108.202 li
59.9935 107.613 li
61.3895 108.23 li
62.8565 107.15 li
64.3215 108.353 li
65.8115 108.512 li
67.3245 108.113 li
68.8415 108.531 li
70.3715 108.499 li
71.9135 108.417 li
73.4775 108.213 li
75.0575 108.435 li
76.6415 107.231 li
78.2365 109.771 li
79.8465 108.51 li
81.4695 108.499 li
83.1065 108.441 li
84.7575 108.703 li
86.4215 108.406 li
88.0985 108.183 li
89.7895 108.382 li
91.4925 108.498 li
93.2095 107.331 li
94.9395 108.524 li
96.7005 108.64 li
98.4595 108.58 li
100.23 108.713 li
102.013 108.811 li
103.81 108.809 li
105.62 108.687 li
107.445 108.807 li
109.283 107.801 li
111.134 108.717 li
113 108.879 li
114.878 109.523 li
116.77 109.572 li
118.68 107.628 li
120.603 110.576 li
122.535 109.36 li
124.481 109.236 li
126.44 110.511 li
128.414 111.078 li
130.401 110.595 li
132.401 109.56 li
134.414 109.673 li
136.442 109.286 li
138.482 109.284 li
140.539 108.914 li
142.609 108.9 li
144.692 108.274 li
146.787 108.935 li
148.931 108.349 li
151.057 108.381 li
153.196 108.654 li
155.347 108.47 li
157.51 108.724 li
159.689 108.719 li
161.88 108.509 li
164.089 108.896 li
166.308 108.862 li
168.54 108.989 li
170.786 108.913 li
173.046 108.519 li
175.32 108.923 li
177.607 108.911 li
179.908 109.079 li
.75 .679 .671 .901 cmyk
@
43.2071 106.686 mo
44.5911 107.136 li
44.6381 106.991 li
44.5321 107.101 li
45.9291 108.456 li
46.0421 108.499 li
47.2251 108.448 li
47.2121 108.143 li
46.0291 108.193 li
46.0361 108.346 li
46.1421 108.236 li
44.7441 106.881 li
44.6851 106.846 li
43.3021 106.395 li
cp
172.689 107.627 mo
173.074 107.553 li
173.045 107.403 li
173.015 107.553 li
175.29 108.003 li
175.322 108.006 li
177.197 107.985 li
177.193 107.679 li
175.318 107.701 li
175.32 107.853 li
175.35 107.704 li
173.075 107.253 li
173.016 107.253 li
172.632 107.326 li
cp
165.364 107.956 mo
166.31 107.944 li
168.531 108.056 li
168.544 108.057 li
169.949 108.014 li
169.939 107.708 li
168.534 107.75 li
168.539 107.903 li
168.547 107.751 li
166.315 107.639 li
165.36 107.65 li
cp
158.082 107.768 mo
159.684 107.816 li
159.708 107.815 li
161.899 107.533 li
161.88 107.382 li
161.85 107.532 li
162.609 107.682 li
162.668 107.382 li
161.91 107.231 li
161.86 107.23 li
159.668 107.512 li
159.688 107.664 li
159.693 107.511 li
158.092 107.462 li
cp
150.782 107.384 mo
151.054 107.387 li
151.056 107.234 li
151.036 107.386 li
153.175 107.677 li
153.205 107.678 li
155.355 107.545 li
155.336 107.24 li
153.186 107.373 li
153.196 107.525 li
153.216 107.373 li
151.077 107.082 li
151.058 107.081 li
150.786 107.078 li
cp
143.724 107.682 mo
144.739 107.348 li
144.691 107.203 li
144.648 107.349 li
146.743 107.968 li
146.828 107.968 li
148.109 107.602 li
148.025 107.308 li
146.744 107.674 li
146.786 107.821 li
146.829 107.674 li
144.734 107.056 li
144.644 107.057 li
143.628 107.392 li
cp
136.443 108.47 mo
138.483 108.455 li
138.511 108.452 li
140.567 108.051 li
140.538 107.9 li
140.539 108.054 li
140.981 108.051 li
140.98 107.745 li
140.537 107.748 li
140.509 107.75 li
138.453 108.151 li
138.481 108.301 li
138.48 108.148 li
136.44 108.164 li
cp
129.473 110.108 mo
130.436 109.881 li
130.473 109.867 li
132.473 108.789 li
132.4 108.654 li
132.395 108.807 li
133.718 108.857 li
133.73 108.551 li
132.406 108.501 li
132.328 108.519 li
130.328 109.598 li
130.401 109.732 li
130.366 109.583 li
129.402 109.81 li
cp
122.657 108.668 mo
124.5 108.43 li
124.48 108.278 li
124.395 108.405 li
126.353 109.734 li
126.395 109.753 li
126.742 109.857 li
126.83 109.564 li
126.483 109.46 li
126.439 109.607 li
126.525 109.48 li
124.566 108.152 li
124.461 108.127 li
122.618 108.365 li
cp
117.848 107.804 mo
118.789 106.836 li
118.68 106.729 li
118.551 106.811 li
120.284 109.546 li
120.542 109.383 li
118.809 106.647 li
118.57 106.623 li
117.628 107.59 li
cp
110.889 107.866 mo
111.064 107.956 li
111.12 107.972 li
112.985 108.136 li
112.999 107.983 li
112.949 108.128 li
114.828 108.775 li
114.872 108.783 li
115.401 108.8 li
115.412 108.495 li
114.882 108.478 li
114.877 108.63 li
114.927 108.486 li
113.048 107.839 li
113.012 107.831 li
111.147 107.667 li
111.133 107.819 li
111.203 107.683 li
111.027 107.593 li
cp
104.082 107.931 mo
105.631 107.817 li
105.62 107.665 li
105.606 107.817 li
107.431 107.978 li
107.515 107.962 li
108.581 107.408 li
108.44 107.136 li
107.374 107.69 li
107.444 107.826 li
107.458 107.674 li
105.633 107.512 li
105.608 107.512 li
104.06 107.626 li
cp
96.7541 107.755 mo
98.4661 107.677 li
98.4591 107.524 li
98.4451 107.677 li
100.215 107.842 li
101.313 107.906 li
101.331 107.601 li
100.239 107.537 li
98.4731 107.372 li
98.4521 107.372 li
96.7401 107.449 li
cp
90.1011 107.467 mo
91.4821 107.562 li
91.5761 107.538 li
93.2921 106.422 li
93.2091 106.294 li
93.1231 106.42 li
94.0781 107.072 li
94.2501 106.819 li
93.2951 106.167 li
93.1261 106.165 li
91.4091 107.282 li
91.4921 107.41 li
91.5031 107.257 li
90.1221 107.162 li
cp
82.8661 107.539 mo
83.1101 107.533 li
83.1061 107.38 li
83.0791 107.53 li
84.7301 107.826 li
84.7881 107.825 li
86.4511 107.488 li
87.4001 107.353 li
87.3571 107.05 li
86.3991 107.187 li
84.7271 107.525 li
84.7571 107.675 li
84.7841 107.524 li
83.1331 107.229 li
83.1021 107.227 li
82.8581 107.233 li
cp
76.9031 106.847 mo
78.1071 108.788 li
78.3311 108.829 li
79.9401 107.578 li
79.8471 107.457 li
79.8501 107.61 li
80.1151 107.604 li
80.1081 107.298 li
79.8431 107.304 li
79.7531 107.336 li
78.1431 108.587 li
78.2371 108.707 li
78.3671 108.627 li
77.1631 106.686 li
cp
70.5011 107.634 mo
71.9241 107.531 li
71.9361 107.529 li
73.4991 107.302 li
73.4781 107.15 li
73.4581 107.302 li
75.0241 107.5 li
75.0621 107.197 li
73.4971 106.999 li
73.4561 106.999 li
71.8921 107.227 li
71.9141 107.378 li
71.9021 107.226 li
70.4791 107.329 li
cp
63.4511 106.785 mo
64.2251 107.422 li
64.3021 107.456 li
65.7911 107.655 li
65.8571 107.649 li
67.3701 107.175 li
67.3251 107.029 li
67.2771 107.174 li
67.7471 107.331 li
67.8431 107.04 li
67.3731 106.884 li
67.2791 106.883 li
65.7661 107.357 li
65.8111 107.503 li
65.8321 107.352 li
64.3421 107.153 li
64.3221 107.304 li
64.4191 107.186 li
63.6451 106.549 li
cp
56.9211 106.901 mo
60.0011 106.738 li
59.9941 106.586 li
59.9321 106.726 li
61.3071 107.327 li
61.4301 107.047 li
60.0551 106.446 li
59.9851 106.433 li
56.9051 106.596 li
cp
49.5941 107.29 mo
54.1731 107.047 li
54.1581 106.742 li
49.5781 106.984 li
cp
.746 .676 .668 .898 cmyk
ef
43.2174 109.002 mo
44.6004 109.348 li
44.6374 109.199 li
44.5324 109.311 li
45.9304 110.635 li
46.0384 110.677 li
47.2744 110.65 li
47.2674 110.344 li
46.0324 110.371 li
46.0354 110.523 li
46.1404 110.413 li
44.7434 109.088 li
44.6754 109.051 li
43.2914 108.705 li
cp
173.17 109.905 mo
175.296 110.231 li
175.319 110.232 li
177.606 110.238 li
177.606 110.085 li
177.594 110.237 li
177.742 110.248 li
177.765 109.943 li
177.617 109.932 li
177.606 109.932 li
175.32 109.927 li
175.32 110.08 li
175.342 109.929 li
173.217 109.603 li
cp
165.894 110.181 mo
166.31 110.173 li
166.307 110.02 li
166.298 110.173 li
168.529 110.318 li
168.545 110.318 li
170.477 110.245 li
170.465 109.939 li
168.533 110.012 li
168.539 110.165 li
168.549 110.013 li
166.317 109.868 li
166.305 109.867 li
165.888 109.875 li
cp
158.589 110.058 mo
159.694 110.013 li
161.888 109.888 li
161.88 109.735 li
161.857 109.887 li
163.128 110.074 li
163.173 109.772 li
161.902 109.584 li
161.871 109.583 li
159.679 109.708 li
158.576 109.752 li
cp
151.279 109.811 mo
153.177 110.033 li
153.213 110.033 li
155.363 109.789 li
155.346 109.637 li
155.324 109.788 li
155.828 109.861 li
155.871 109.558 li
155.368 109.485 li
155.328 109.485 li
153.178 109.729 li
153.196 109.881 li
153.213 109.729 li
151.314 109.507 li
cp
144.207 109.72 mo
144.73 109.58 li
144.691 109.432 li
144.642 109.577 li
146.737 110.289 li
146.824 110.292 li
148.597 109.835 li
148.521 109.539 li
146.748 109.996 li
146.786 110.144 li
146.835 109.999 li
144.74 109.288 li
144.652 109.285 li
144.128 109.425 li
cp
136.911 110.483 mo
138.48 110.492 li
138.506 110.49 li
140.562 110.157 li
140.538 110.006 li
140.539 110.159 li
141.471 110.152 li
141.469 109.846 li
140.536 109.854 li
140.513 109.856 li
138.457 110.189 li
138.481 110.339 li
138.482 110.187 li
136.913 110.177 li
cp
129.895 111.798 mo
130.438 111.661 li
130.468 111.65 li
132.467 110.666 li
132.4 110.528 li
132.388 110.681 li
134.18 110.819 li
134.203 110.514 li
132.412 110.376 li
132.333 110.391 li
130.333 111.376 li
130.401 111.513 li
130.363 111.364 li
129.82 111.502 li
cp
122.98 110.401 mo
124.479 110.417 li
124.48 110.264 li
124.4 110.394 li
126.359 111.607 li
126.399 111.625 li
127.155 111.831 li
127.235 111.535 li
126.479 111.329 li
126.439 111.477 li
126.519 111.347 li
124.561 110.134 li
124.482 110.111 li
122.983 110.095 li
cp
117.953 109.536 mo
118.788 108.695 li
118.679 108.587 li
118.553 108.673 li
120.456 111.494 li
120.709 111.323 li
118.806 108.502 li
118.571 108.48 li
117.737 109.32 li
cp
111.012 109.787 mo
111.068 109.814 li
111.12 109.828 li
112.986 109.988 li
112.999 109.836 li
112.949 109.981 li
114.828 110.621 li
114.874 110.629 li
115.541 110.641 li
115.547 110.335 li
114.88 110.323 li
114.877 110.476 li
114.926 110.331 li
113.048 109.691 li
113.011 109.684 li
111.146 109.523 li
111.133 109.675 li
111.198 109.537 li
111.143 109.51 li
cp
104.23 110.025 mo
105.629 109.941 li
105.619 109.788 li
105.613 109.941 li
107.438 110.013 li
107.521 109.993 li
108.696 109.313 li
108.543 109.048 li
107.367 109.728 li
107.444 109.86 li
107.45 109.708 li
105.625 109.635 li
105.611 109.636 li
104.211 109.72 li
cp
96.8934 109.907 mo
98.4624 109.873 li
98.4594 109.72 li
98.4504 109.873 li
100.221 109.97 li
101.463 110.033 li
101.478 109.727 li
100.237 109.664 li
98.4674 109.567 li
98.4554 109.567 li
96.8864 109.601 li
cp
90.3214 109.752 mo
91.4824 109.83 li
91.5814 109.802 li
93.2984 108.575 li
93.2094 108.45 li
93.1214 108.576 li
94.1974 109.326 li
94.3724 109.075 li
93.2964 108.325 li
93.1204 108.326 li
91.4034 109.553 li
91.4924 109.677 li
91.5034 109.525 li
90.3424 109.446 li
cp
83.0614 109.743 mo
83.1134 109.741 li
83.1064 109.588 li
83.0854 109.74 li
84.7374 109.963 li
84.7804 109.962 li
86.4434 109.714 li
87.6164 109.57 li
87.5794 109.267 li
86.4024 109.411 li
84.7354 109.66 li
84.7574 109.812 li
84.7784 109.66 li
83.1264 109.437 li
83.0994 109.436 li
83.0474 109.438 li
cp
76.9914 109.252 mo
78.1084 111.003 li
78.3314 111.041 li
79.9414 109.769 li
79.8464 109.649 li
79.8454 109.802 li
80.3034 109.806 li
80.3064 109.5 li
79.8484 109.496 li
79.7524 109.529 li
78.1424 110.801 li
78.2374 110.921 li
78.3654 110.839 li
77.2494 109.088 li
cp
70.6264 109.73 mo
71.9184 109.69 li
71.9304 109.689 li
73.4944 109.514 li
73.4774 109.362 li
73.4544 109.513 li
75.0334 109.76 li
75.1494 109.731 li
75.2454 109.659 li
75.0614 109.414 li
74.9654 109.486 li
75.0574 109.608 li
75.0814 109.458 li
73.5014 109.211 li
73.4604 109.21 li
71.8964 109.385 li
71.9134 109.537 li
71.9084 109.384 li
70.6164 109.424 li
cp
63.4744 108.99 mo
64.2254 109.603 li
64.3104 109.637 li
65.7994 109.751 li
65.8424 109.748 li
67.3554 109.438 li
67.3244 109.288 li
67.2934 109.438 li
67.8604 109.556 li
67.9224 109.257 li
67.3564 109.138 li
67.2944 109.138 li
65.7804 109.448 li
65.8114 109.598 li
65.8224 109.446 li
64.3334 109.332 li
64.3214 109.485 li
64.4184 109.366 li
63.6684 108.753 li
cp
56.9284 109.037 mo
60.0014 108.875 li
59.9934 108.722 li
59.9314 108.861 li
61.3084 109.476 li
61.4324 109.197 li
60.0554 108.582 li
59.9854 108.569 li
56.9124 108.731 li
cp
49.6014 109.424 mo
54.1804 109.182 li
54.1644 108.877 li
49.5854 109.119 li
cp
ef
2 lc
179.286 116.483 mo
179.286 19.6448 li
.707 .648 .637 .691 cmyk
@
177.726 100.201 mo
179.092 100.201 li
@
177.726 84.0604 mo
179.092 84.0604 li
@
177.726 67.9208 mo
179.092 67.9208 li
@
177.726 51.7811 mo
179.092 51.7811 li
@
177.726 35.6415 mo
179.092 35.6415 li
@
177.726 19.5018 mo
179.092 19.5018 li
@
0 .472 1 0 cmyk
WJCBWH+ArialMT*1 [8.5616 0 0 -8 0 0 ]msf183.08 116.656 mo(20)[4.76025 0 ]xsh183.08 84.4325 mo(30)[4.76025 0 ]xsh183.08 52.0885 mo(40)[4.76025 0 ]xsh183.08 19.8245 mo(50)[4.76025 0 ]xsh0 lc
42.8404 106.809 mo
44.2244 106.857 li
45.6214 106.857 li
47.0314 106.857 li
48.4564 106.857 li
59.5794 106.978 li
60.9754 106.894 li
62.4434 107.027 li
63.9084 107.083 li
65.3974 107.261 li
66.9104 107.261 li
68.4284 107.059 li
69.9574 105.849 li
71.4994 104.638 li
73.0634 103.226 li
74.6434 102.217 li
76.2274 101.411 li
77.8224 100.603 li
79.4324 99.9984 li
81.0564 99.5954 li
82.6924 99.1914 li
84.3434 98.7884 li
86.0074 98.3844 li
87.6844 98.1834 li
89.3754 97.3754 li
91.0784 94.5514 li
92.7954 91.5254 li
94.5254 88.2974 li
96.2874 86.8854 li
98.0454 85.4734 li
99.8164 85.0694 li
101.598 83.6574 li
103.395 83.6574 li
105.206 81.8414 li
107.03 81.0344 li
108.868 77.8064 li
110.719 72.3594 li
112.585 67.5174 li
114.463 64.4914 li
116.356 63.4824 li
118.266 61.6664 li
120.188 59.6494 li
122.12 58.2374 li
124.067 49.1584 li
126.025 40.0804 li
128 37.2554 li
129.986 34.4314 li
131.986 47.9484 li
134 59.4474 li
136.028 67.7194 li
138.068 74.5784 li
140.124 79.0174 li
142.195 82.2454 li
144.277 87.4904 li
146.372 92.3324 li
148.517 96.1654 li
150.642 98.9894 li
152.781 101.007 li
154.932 102.419 li
157.095 103.428 li
159.274 104.033 li
161.465 104.638 li
163.675 105.042 li
165.894 105.445 li
168.125 105.647 li
170.371 105.647 li
172.631 105.849 li
174.905 105.849 li
177.192 105.849 li
179.493 105.647 li
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: GAAAAA+MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /GAAAAA+MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 73 /I putdup 97 /a putdup 101 /e putdup 103 /g putdup 105 /i putdup 108 /l putdup 110 /n putdup 111 /o putdup 115 /s putdup 116 /t putdup 121 /y putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-12 -0 484 496 650 662 674 686 710 722] def/OtherBlues [-210 -198 -121 -109] def/BlueScale 0.0625 def/BlueFuzz 0 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings13 dict dup begin/space <1C60D8A8C9B896187A> |-/I <1C60D8A8C9B87DE005AD6F3C5D74814A181348838688F7DFF9F5475394DF85A0> |-/a <1C60D8A8C9B75946235635433B29C4699E5BB968A8BA3D0F55A80D871529080759C0CDF379D5184F9A3784D6112A1855FA838838A79A40DD8E07761F331C19B53C7606AF4EA6D9A7EAC88C9EB5B9FA25429E627C2F8212354B31EFF6364651E800F137946FD4AD5A8AE5B9B862128451BA473B4ED4014A7282C197B458EF6D0953A59D2ACEC98F551B66786C4D40133930952374B3C1A5A8C8798787EF5202E8F3ADE313D6302E5C519AA42A989B817E6D8192CF5EF2CD6CD4984E7982> |-/e <1C60D8A8C9B7A66F849A7DACE33AE03A5167970A4DE9C90504F4520F0891C1CEFDC5EC433B4601849E9654689D7448590A637F83BA4F01959F755A2F630819E1906BD0F4301719375E5DFA3A56016CFFB8EE2D259D14AD43BDDC106E233AD7F63594F85F5BF67F34F4> |-/g <1C60D8A8C9B7ECD94DE1A189191AD5F2D9264E9E45AEA34722A859C7504E8D97FB0852E8940544E35015B96B3C7AA54938A54723C0E4A71029E5594A50991BABBD94FDBC8D1E5DDED1F363991C7609EC867CCC25A521EF6A413502066DB09479E8F4B993E7F844D779A9AFB8AB9687200FE387E3551F1773DE5D9F10DA80D59E08BEE08403E910634E27946219DA1BBF443E80E9984193EB84E7D437F4095A5144CA76F8FF03D6A699455EF07F603D9FCA60043DFAA7AFC2989812BB08CB6F7DC24FB5126C6BA75AEB70AE20AF4CB666DA1ED7DC913A5745B8A3C5FC8F54> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A550BE990A2B15CF4B9FA0C60C03D9F761CF6CBFF51A513DE> |-/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/n <1C60D8A8C9B790A816BA887E1EEB5EA22251B57591287932F226429470C6F5104125FD46BD566113711AC75833C9FEE3F6D848EF41B3B29B720FE91D57099036ACB328FF5F27B548C47B09DAAAB22DF7203FD31E4DFCBB6F334EB2AEBC18B95062C1F81D8B> |-/o <1C60D8A8C9B7967683396363C51B2F1979461F3A00FDA36B3FB5488A82D64C89239EA1345F90503AC4C4937CA1D31AE0456BBFC2CD7E6DF92400B629A703DCCA1CE977B1CE09DA127A889A27E67B6982945251> |-/s <1C60D8A8C9B70FAD6EE207EDD4A39945302A2E564F23C4D27749C61E21753BE88CFF7A0956D53F7567F17B33997DFB279D2DA3FF33E69440E3AF5B718BD5672EE12CCB4611CEF40CED8D19E55F6899503A963AB3F9097F71464F7FF3D8B745212EC94C43D9C54742872717> |-/t <1C60D8A8C9B821B35FABC50DF2817A1BBC93B89A8B6DB7012C573A5B06A78E6721B35869D6CEA1BEC8F4D7ADE4AD26D55A0B6AD62D85D42D1321EDA432B8F1448E7C88822F3224E1F6F992B7D2C5602E3B1569A5778D> |-/y <1C60D8A8C9B744514052D02E803EBAB86C11F12291D8A713DC167F7D81E7D74F7394050608236E413AB257ED33F5C3FEE29CB9980BAC37B7AB24FFA5293C682D36A963909531D9EBB835B9C6EDB298E89C6523D9A1A67C8756B6593842E16B6D9D60259EF2BF7D78> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/WJCBWI+MyriadPro-Regular /GAAAAA+MyriadPro-Regular findfont ct_VMDictPut/WJCBWI+MyriadPro-Regular*1 [32{/.notdef}rp /space 40{/.notdef}rp /I 23{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o 3{/.notdef}rp /s /t 4{/.notdef}rp /y 134{/.notdef}rp]WJCBWI+MyriadPro-Regular nfWJCBWI+MyriadPro-Regular*1 [0 -12 -12 0 0 0 ]msf21.5289 96.6272 mo(log Intensity)[-2.83191 -6.58795 -6.70807 -2.54407 -2.98798 -6.61194 -3.8999 -6.01208 -6.65991 -4.75195 -2.80792 -4.0799 0 ]yshWJCBWI+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf6.59483 11.5364 mo(a)sh0 .472 1 0 cmyk
%ADOBeginSubsetFont: GAAAAA+MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWJCBWI+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B84E0A9BE0F5E7F6AA80EB6F9C55A29BCD0A78FDE2EC81535B0D09BBC78AC2BA9C07B9D73B61D64C4620A3AEABD78638094F1483737E> |-/parenright <1C60D8A8C9B84E0A9BE0F5DB50450E7143AED3F02065BA0D25AF71E0BCF32D4511B91D5597E045F9FD9A2805B5D6939BFA0E875F4D520B550E8B48> |-/C <1C60D8A8C9B7F7BFE3B180C56AF03E84FDFE1B891BF0BDDE2A383D526FA5F5DFDA781369FECA62B706458FA8E5D416C9F1A54D53D39B454D4B4A5AA674C37D8866FD97E642C991F09AC3F4EB6888A09F29DD6765382F269ACB77ACC8CCEE228E09F4DDA531160B9495579459312C02> |-/T <1C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6EB53E56E1831B0550D2FE4055F5> |-/d <1C60D8A8C9B7E7C1D822193538A56B13640F1C3EE80C415BBD7C96E2BF73396DB0D9C9230D7704B1D4903E1B0E823160B234020A503047A686661C34B5004CDCF7754772CF263A11D6B8FC7868BB12CD6A915ACD880C8B0638C394417FA37BE535ADC2EFE334704B66B55FC93ABE48255DC988A5DFABA294BF5BF2E02BE2314DCE6531FAA5DCB4D56DF6C62A6139D41B024DA04272B4B444C44FEBCD2F65888A63654699808BEDAA> |-/m <1C60D8A8C9B6B770778B71072D7C1E07589A410E5C64818087655066490C3ED2B909917C7BC0728B14D2333B4F2D4E6CDB7289552EC38E07C385447196A6FC80676BB9787067F8DE500C6FC7D1A575A85B3402140944D912F286F0EE619E6F139DB3EF4C05E3E0A0041D31E971FFC094FB694326327D937DFA882F7A9EEBB38D578A289643EC8BA4470A41469EE238EB0C3D041FDB99E682E3290582B0A809> |-/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FC9D79EBC145C31F687483AFB9425A746B3BD7EE9055225E02124098D25B9CF96FA1051D1E04801504B9A2644D4EDA37278A874E72EE68CB4BF43DAEF5F603031626DA7EA34D8AEBCA2BE067F349B81CB3CF23097AE4AA47ED040466C2627C304F1CEA4C41EB090E70EFAF813E729DF2CD046B5547886AEE74294DF2AF6781AD20571E13346A26CAD62FB20DB9FC6337027CFBBA> |-/r <1C60D8A8C9B825FA276057E42F8B6B56BE61CF56C49E848F1F8C0DBB4CC355A060580D0A93A5AC675863E967C6888348BB6A0307CAE2C7E5A0C04CCE8153CABABF82A896EFF75F39B554C74CA1E2126AA0E73BE8B772EBBEE30A71972C630D7D24526AEEFC04035142C31FA6B3B108962236> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD6E8467166462C4D4F8F41F04B52D63863D672C5433416D6DF2E3C32BCEEA94FF3BC9046373D2B57D2890F7578E8913662C9F65FD95A5790251E118509816817E1CD6A7C5BE0B48DC194> |-systemdict /gcheck known {setglobal} if end {end} ifendWJCBWI+MyriadPro-Regular /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 67 /C putdup 84 /T putdup 100 /d putdup 109 /m putdup 112 /p putdup 114 /r putdup 117 /u putpop%ADOEndSubsetFont
/WJCBWI+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 25{/.notdef}rp /C 5{/.notdef}rp /I 10{/.notdef}rp /T 12{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]WJCBWI+MyriadPro-Regular nfWJCBWI+MyriadPro-Regular*1 [0 -12 -12 0 0 0 ]msf212.54 117.711 mo(Temperature \(deg C\))[-5.11194 -6.01208 -10.008 -6.828 -6.01208 -3.86395 -5.7359 -3.97192 -6.61194 -3.80518 -6.01208 -2.54407 -3.40796 -6.76794 -6.01208 -6.70807 -2.54407 -7.164 0 ]ysh2 lc
295.027 114.599 mo
404.036 114.599 li
.707 .648 .637 .691 cmyk
@
300.25 114.599 mo
300.25 113.508 li
@
328.112 114.599 mo
328.112 113.508 li
@
355.975 114.599 mo
355.975 113.508 li
@
383.836 114.599 mo
383.836 113.508 li
@
WJCBWH+ArialMT*1 [7.9961 0 0 -8 0 0 ]msf297.495 122.951 mo(25)[4.44583 0 ]xsh325.362 122.991 mo(30)[4.44583 0 ]xsh353.228 122.991 mo(35)[4.44583 0 ]xsh381.094 122.943 mo(40)[4.44583 0 ]xsh295.027 114.599 mo
295.027 17.2855 li
@
295.027 114.599 mo
296.117 114.599 li
@
295.027 95.1361 mo
296.117 95.1361 li
@
295.027 75.6732 mo
296.117 75.6732 li
@
295.027 56.2108 mo
296.117 56.2108 li
@
295.027 36.7484 mo
296.117 36.7484 li
@
295.027 17.2855 mo
296.117 17.2855 li
@
WJCBWH+ArialMT*1 [7.9961 0 0 -8 0 0 ]msf290.131 117.914 mo(0)sh282.566 98.4103 mo(50)[4.44583 0 ]xsh279.999 59.5303 mo(150)[4.44583 4.44583 0 ]xsh279.999 20.6023 mo(250)[4.44583 4.44583 0 ]xsh294.906 27.3085 mo
295.64 30.9066 li
295.88 30.8575 li
295.146 27.2596 li
cp
402.891 107.586 mo
404.03 107.64 li
404.042 107.395 li
402.903 107.342 li
cp
397.025 107.309 mo
400.691 107.482 li
400.703 107.238 li
397.037 107.064 li
cp
391.159 107.03 mo
394.825 107.204 li
394.837 106.959 li
391.171 106.786 li
cp
385.469 105.75 mo
388.318 106.889 li
388.358 106.898 li
388.96 106.926 li
388.971 106.682 li
388.369 106.653 li
388.364 106.775 li
388.409 106.662 li
385.56 105.523 li
cp
380.016 103.57 mo
383.425 104.933 li
383.515 104.705 li
380.107 103.343 li
cp
374.564 101.39 mo
377.972 102.752 li
378.063 102.525 li
374.655 101.163 li
cp
371.562 96.8696 mo
372.537 100.41 li
372.773 100.345 li
371.799 96.8046 li
cp
369.779 91.8486 mo
370.272 91.7726 li
370.254 91.6516 li
370.135 91.6846 li
370.977 94.7446 li
371.214 94.6796 li
370.371 91.6196 li
370.235 91.5316 li
369.742 91.6066 li
cp
364.379 90.6316 mo
366.7 92.2845 li
366.789 92.3055 li
367.602 92.1816 li
367.565 91.9385 li
366.752 92.0626 li
366.77 92.1835 li
366.842 92.0845 li
364.521 90.4326 li
cp
359.28 91.3475 mo
361.886 91.5165 li
361.972 91.4896 li
362.787 90.8146 li
362.632 90.6255 li
361.816 91.3005 li
361.894 91.3945 li
361.903 91.2726 li
359.296 91.1025 li
cp
353.615 92.1666 mo
356.708 91.1705 li
356.671 91.0546 li
356.663 91.1766 li
357.083 91.2046 li
357.098 90.9595 li
356.678 90.9326 li
356.633 90.9376 li
353.54 91.9335 li
cp
347.974 93.6125 mo
348.231 93.8376 li
348.349 93.8616 li
351.518 92.8416 li
351.443 92.6086 li
348.274 93.6285 li
348.312 93.7455 li
348.392 93.6536 li
348.135 93.4286 li
cp
343.552 89.7436 mo
346.316 92.1616 li
346.476 91.9775 li
343.713 89.5585 li
cp
339.128 85.8735 mo
341.892 88.2925 li
342.053 88.1075 li
339.289 85.6896 li
cp
337.482 80.2296 mo
338.359 83.7955 li
338.596 83.7375 li
337.719 80.1716 li
cp
336.08 74.5236 mo
336.957 78.0895 li
337.194 78.0316 li
336.317 74.4656 li
cp
334.677 68.8176 mo
335.553 72.3835 li
335.792 72.3256 li
334.915 68.7596 li
cp
333.275 63.1116 mo
334.151 66.6786 li
334.389 66.6196 li
333.512 63.0536 li
cp
332.286 57.3116 mo
332.891 60.9335 li
333.134 60.8926 li
332.527 57.2706 li
cp
330.084 56.9556 mo
332.037 54.5966 li
331.943 54.5186 li
331.822 54.5386 li
331.923 55.1385 li
332.164 55.0986 li
332.063 54.4976 li
331.848 54.4406 li
329.895 56.7996 li
cp
328.686 57.9536 mo
328.93 57.9536 li
328.93 54.2816 li
328.686 54.2816 li
cp
328.686 54.2816 mo
328.363 48.6146 mo
328.715 49.0326 li
328.808 48.9546 li
328.686 48.9546 li
328.686 52.0786 li
328.93 52.0786 li
328.93 48.9546 li
328.902 48.8746 li
328.55 48.4565 li
cp
326.268 48.6935 mo
326.493 46.0685 li
326.371 46.0585 li
326.277 46.1376 li
326.945 46.9305 li
327.132 46.7726 li
326.465 45.9796 li
326.249 46.0486 li
326.025 48.6736 li
cp
325.366 54.1006 mo
325.589 54.3166 li
325.796 54.2396 li
326.082 50.8896 li
325.838 50.8686 li
325.552 54.2186 li
325.674 54.2286 li
325.76 54.1415 li
325.537 53.9246 li
cp
322.71 49.1216 mo
323.115 51.8806 li
323.151 51.9506 li
323.785 52.5666 li
323.956 52.3906 li
323.321 51.7745 li
323.236 51.8625 li
323.357 51.8445 li
322.952 49.0865 li
cp
321.856 43.3085 mo
322.389 46.9416 li
322.632 46.9066 li
322.098 43.2726 li
cp
321.003 37.4955 mo
321.536 41.1285 li
321.778 41.0936 li
321.245 37.4595 li
cp
317.268 34.3906 mo
320.764 35.3796 li
320.799 35.2615 li
320.677 35.2795 li
320.682 35.3156 li
320.925 35.2795 li
320.92 35.2446 li
320.832 35.1436 li
317.336 34.1545 li
cp
311.93 35.4066 mo
315.239 33.8146 li
315.133 33.5945 li
311.825 35.1855 li
cp
306.254 36.7856 mo
309.896 36.3345 li
309.867 36.0926 li
306.223 36.5416 li
cp
303.859 32.2176 mo
304.746 35.7816 li
304.983 35.7216 li
304.096 32.1586 li
cp
303.179 36.0345 mo
303.506 33.8915 li
303.7 32.3965 li
303.458 32.3655 li
303.263 33.8566 li
302.937 35.9966 li
cp
301.452 41.6306 mo
302.104 40.0746 li
302.8 38.5005 li
302.809 38.4695 li
302.848 38.2126 li
302.606 38.1755 li
302.567 38.4326 li
302.688 38.4515 li
302.576 38.4016 li
301.88 39.9775 li
301.226 41.5366 li
cp
299.855 36.1766 mo
300.379 39.8105 li
300.621 39.7756 li
300.097 36.1415 li
cp
299.365 36.1346 mo
299.676 33.2396 li
299.553 33.2256 li
299.432 33.2436 li
299.541 33.9955 li
299.783 33.9606 li
299.675 33.2086 li
299.431 33.2126 li
299.122 36.1075 li
cp
298.739 41.9756 mo
299.131 38.3246 li
298.886 38.2986 li
298.496 41.9496 li
cp
297.829 44.6725 mo
298.039 46.2446 li
298.282 46.2405 li
298.505 44.1666 li
298.26 44.1406 li
298.039 46.2145 li
298.16 46.2275 li
298.282 46.2115 li
298.071 44.6396 li
cp
297.05 38.8495 mo
297.536 42.4886 li
297.779 42.4556 li
297.292 38.8166 li
cp
296.08 33.0656 mo
296.647 35.8466 li
296.757 36.6656 li
297 36.6326 li
296.888 35.8055 li
296.32 33.0165 li
cp
.746 .676 .668 .898 cmyk
ef
0 lc
295.027 57.558 mo
296.768 62.8361 li
298.16 69.972 li
299.553 60.2321 li
300.599 65.5041 li
301.296 65.2161 li
301.992 64.8801 li
302.689 63.7341 li
303.384 62.3331 li
303.733 60.8801 li
305.126 62.925 li
310.003 62.951 li
315.225 63.4641 li
320.798 62.5591 li
323.237 71.9301 li
325.673 73.183 li
326.371 70.1201 li
328.809 73.0881 li
328.809 77.92 li
331.944 75.8351 li
333.337 80.7291 li
338.91 93.8561 li
348.313 99.433 li
356.672 97.8711 li
361.895 98.0381 li
363.637 97.2581 li
366.771 97.5781 li
370.255 98.5161 li
372.691 104.936 li
388.365 109.325 li
404.036 109.838 li
@
294.934 87.9125 mo
296.675 89.9316 li
296.768 89.8516 li
296.653 89.8926 li
296.994 90.8395 li
297.224 90.7566 li
296.883 89.8096 li
296.861 89.7715 li
295.12 87.7526 li
cp
402.995 112.264 mo
404.035 112.283 li
404.038 112.038 li
402.998 112.019 li
cp
397.122 112.157 mo
400.792 112.224 li
400.797 111.979 li
397.127 111.912 li
cp
391.251 112.05 mo
394.921 112.117 li
394.925 111.872 li
391.255 111.805 li
cp
385.4 111.524 mo
388.345 111.996 li
388.362 111.997 li
389.049 112.01 li
389.054 111.765 li
388.367 111.752 li
388.365 111.875 li
388.383 111.754 li
385.439 111.282 li
cp
379.602 110.595 mo
383.225 111.176 li
383.264 110.934 li
379.641 110.353 li
cp
373.804 109.667 mo
377.427 110.247 li
377.466 110.005 li
373.842 109.425 li
cp
370.137 105.448 mo
370.184 105.48 li
370.254 105.38 li
370.15 105.443 li
372.036 108.527 li
372.245 108.399 li
370.358 105.316 li
370.324 105.279 li
370.277 105.246 li
cp
365.313 103.85 mo
366.827 103.082 li
366.771 102.973 li
366.702 103.074 li
368.326 104.196 li
368.464 103.994 li
366.84 102.872 li
366.716 102.864 li
365.203 103.632 li
cp
359.586 104.806 mo
361.896 104.803 li
363.261 104.712 li
363.245 104.467 li
361.887 104.559 li
359.585 104.561 li
cp
353.723 104.962 mo
356.677 104.809 li
357.383 104.809 li
357.383 104.563 li
356.671 104.564 li
353.71 104.718 li
cp
347.836 105.1 mo
348.277 105.237 li
348.319 105.243 li
351.524 105.076 li
351.511 104.832 li
348.306 104.998 li
348.313 105.12 li
348.349 105.003 li
347.909 104.866 li
cp
342.227 103.355 mo
345.733 104.446 li
345.805 104.212 li
342.299 103.121 li
cp
336.858 101.02 mo
338.843 102.297 li
338.872 102.311 li
340.123 102.701 li
340.196 102.467 li
338.946 102.078 li
338.91 102.195 li
338.975 102.092 li
336.991 100.814 li
cp
332.139 97.5336 mo
333.248 98.6935 li
333.271 98.7115 li
335.006 99.8286 li
335.139 99.6226 li
333.403 98.5056 li
333.336 98.6086 li
333.425 98.5246 li
332.315 97.3646 li
cp
327.469 95.7455 mo
328.714 97.2986 li
328.809 97.2216 li
328.687 97.2216 li
328.687 97.5366 li
328.824 97.6576 li
330.179 97.4926 li
330.15 97.2486 li
328.794 97.4146 li
328.809 97.5366 li
328.931 97.5366 li
328.931 97.2216 li
328.905 97.1446 li
327.66 95.5916 li
cp
323.864 92.1566 mo
325.667 92.2585 li
325.674 92.1366 li
325.559 92.1755 li
326.161 93.9406 li
326.392 93.8616 li
325.79 92.0966 li
325.682 92.0146 li
323.877 91.9116 li
cp
319.161 90.9955 mo
320.863 89.9615 li
320.799 89.8566 li
320.718 89.9485 li
321.979 91.0566 li
322.14 90.8716 li
320.879 89.7656 li
320.736 89.7526 li
319.033 90.7866 li
cp
314.045 92.5906 mo
315.158 93.3445 li
315.29 93.3476 li
317.278 92.1396 li
317.151 91.9305 li
315.163 93.1385 li
315.226 93.2436 li
315.295 93.1415 li
314.182 92.3876 li
cp
309.086 89.7046 mo
309.986 89.8246 li
310.002 89.7036 li
309.934 89.8046 li
312.222 91.3546 li
312.359 91.1526 li
310.071 89.6016 li
310.019 89.5815 li
309.12 89.4615 li
cp
303.955 90.4976 mo
305.216 89.1316 li
305.126 89.0486 li
305.11 89.1696 li
306.904 89.4106 li
306.937 89.1675 li
305.143 88.9276 li
305.037 88.9656 li
303.775 90.3306 li
cp
300.995 89.8506 mo
301.41 88.7875 li
301.295 88.7436 li
301.196 88.8135 li
301.892 89.8036 li
302.08 89.8185 li
302.776 89.1025 li
302.689 89.0176 li
302.575 89.0626 li
302.692 89.3606 li
302.919 89.2715 li
302.802 88.9726 li
302.601 88.9326 li
301.905 89.6476 li
301.992 89.7325 li
302.092 89.6625 li
301.396 88.6725 li
301.181 88.6985 li
300.767 89.7616 li
cp
299.328 88.8755 mo
299.673 87.2646 li
299.554 87.2386 li
299.438 87.2756 li
300.05 89.2046 li
300.284 89.1306 li
299.67 87.2015 li
299.434 87.2126 li
299.088 88.8246 li
cp
297.742 92.9125 mo
298.046 93.7576 li
298.281 93.7426 li
298.864 91.0295 li
298.624 90.9786 li
298.041 93.6906 li
298.161 93.7166 li
298.276 93.6746 li
297.971 92.8296 li
cp
ef
.707 .648 .637 .691 cmyk
%ADOBeginSubsetFont: FAAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WJCBWH+ArialMT gcheck setglobal} if
2 4184 38 <00010066ffe7057605d3001d00d3b563026a1d0201b8ffe8b40b0b065500
b8ffe8405f0b0b06552000320d63007000741d8000841d90009a05ab03a5
0db903b40dc70dd000e41df31d110e121d111d1d032a0628112a1c201f47
0d56145715561968056b1d7b128b129a03990e9a1ca801a402a811d50e13
0014001a1014101a0402b8ffdeb2283901b8ffc0402d2839100f0001041b
131e0c031b1e040910260f4a0026200101011a1f1726200801080c0b0b06
5508191e635c182b4e10f42b5d4ded4e10f65d4dedf4ed003fed3fed1117
393130012b2b5d5d71005d2b2b0172011706042322240235341224333204
17072626232206021514121633323604b4c23dfec3e5edfed79baf0143c2
dc012c3bbf33c293a9e35c6de686a3e2020231effbc1016ed2e50155b1e0
cb2da092a2feef91bbfee98abc00>WJCBWH+ArialMT AddT42Char 
2 4498 40 <000100a2000004e805ba000b0095401506051e080807070003041e020102
0a091e0b000807b8ffc0401d1012340754034a200a200d020a1a0d040920
0120000100201010025500b8fff6b40f0f025500b8fff6b40d0d025500b8
fffab40c0c025500b8fffab40c0c065500b8fff0400a0d0d0655005d0c3b
5b182b4e10f42b2b2b2b2b2b5d3c4dfd3c4e10f65d4df4e42b003f3cfd3c
3f3cfd3c12392f3c10fd3c3130331121152111211521112115a20424fc9e
032bfcd5038405baadfe3facfe0dad00>WJCBWH+ArialMT AddT42Char 
2 4694 41 <000100a80000048505ba0009008d402b06051e08088f070107070003041e
0201020008079c2002200b02021a0b0409200120000100201010025500b8
fff6b40f0f025500b8fff6b40d0d025500b8fffa400b0c0c0255000c0b0b
065500b8fffeb40c0c065500b8fff0400a0d0d0655005d0a3b5c182b4e10
f42b2b2b2b2b2b2b5d3c4dfd3c4e10f65d4de4003f3f3cfd3c12392f5d3c
10fd3c313033112115211121152111a803ddfce502b0fd5005baadfe3aad
fd66>WJCBWH+ArialMT AddT42Char 
2 5050 68 <0002004affe8041c043e00280037022d402c090d092a190d1a2a290d2a2a
390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a169b1aa90d
1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419
cf28d215dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c
065535b8ffe040550c0c06551f171f182b2c2a343904392c4904482c5608
592b6608692b760c870cc90cf90df92b1137340e0104102f243417322114
185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030e0c0f0f
02550eb8ffeab4101002550eb8fff44015101006550e0c0d0d06550e060f
0f06550e0e1c0317b802aab61895141c1c0700b8fff4401a0c0c06550045
270a321c030b2961106100060d0d025500252124b8ffecb41010025524b8
ffec400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b
065524b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b802
5b400e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b6
0e0e0255263139b8ffc0400d1e23343039c03902a039013917b8fff44041
10100655172518222f24bf06cf06021f063f0602060e0f0f0255060c0d0d
025506180c0c0255060c0b0b0255060c0b0b0655060e0d0d065506100c0c
065506313810f62b2b2b2b2b2b2b5d71edf4ed2b105d712bf62b2b5dedf4
2b2b2b2b2b2b2b2b3cfd2be5e5003fed3fe42b3fedfde41112392f2b2b2b
2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d2b
2b0071250606232226353436363736373637363534272623220607273e02
333216161716151514161723260306070e02151416333236373635033c64
b96aafbc477348356bda67013345887f791db0186ed08988aa5010091722
bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d1a24250a6e
2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d2f48605b4f
3d77>WJCBWH+ArialMT AddT42Char 
2 6208 71 <00020046ffe803df05ba0011001d015540a40a02040d250d340d440d0535
14351c5702540a5214531c6702640565096314601cc01fd405d513dd19e5
13e514ef17eb19e51de01fff1f161f1f2b1a3c163c1a4b1a701f901f072e
02240d2e163a02350d4b02450d4614491c570a560d670de506e716fa01f4
0e100115030e0b100f001b1c0b0711000a151c030b1833010025110f2510
10d011011011401160118011041f400b0b02551f400d0d02551112101002
5511b8fff440110f0f025511060e0e025511180d0d025511b8fff2400b0b
0b0655110e1010065511b8ffeeb40c0c065511b8fff840420d0d06551174
1224bf07cf07df07ff07041f073f074f0703071e0b0b025507180c0c0255
071e0d0d0255070c0b0b0655070c0d0d0655071a0c0c065507191e345018
2b4e10f42b2b2b2b2b2b5d714dedfd2b2b2b2b2b2b2b2b2b2b5d713c10ed
10fd3ce4003fed3f3c3fed3f3c11391112393130005d01715d0071213506
232226263534123633321617113311011416333236353426232206033865
c47fd5756ad48360962fb3fd20ac7576a5a87b78a1869e8cfba39f01038a
5141020efa460212cccac1c6daccc400>WJCBWH+ArialMT AddT42Char 
2 7090 74 <00020042fe5103ea043e001e002a016f40600b0b05142c0b25144c0b4514
06091d191d2c0b26142c23390b36144a0b46145607580b680bfa0af5150e
2e232c273e233e274c27902ca02c07362136293f2c460b46214529542154
29690763216329602c802cda27e821ee23ef271117160615b802b1b4281c
130701b802aa401020003000600070008000c000d0000700b8027d403205
1c1c0f0a45221c0c0a16153325330a251818d01701101740176017801704
2c400b0c02552c400d0d025517121010025517b8fff440110f0f02551706
0e0e025517160d0d025517b8ffea400b0b0b065517121010065517b8ffee
b40c0c065517b8fffc404a0d0d065517740f012500221f24bf0fcf0fdf0f
ff0f041f0f3f0f4f0f030f200b0b02550f1a0c0c02550f220d0d02550f1c
0b0b06550f0c0d0d06550f1a0c0c06550f192b2c74213450182b2b4ef42b
2b2b2b2b2b5d714dedf4ed10fd2b2b2b2b2b2b2b2b2b2b5d713c10fde4f6
3c003fede43fedfd5de43fede43f3c3130015d71005d7117171617163332
363736270623220235341236333217353311140606232226131416333236
35342623220666af0b3243747d88180e0176b0dbf06ed18dbc7aa665dba0
beea99a67d7ca8ad7a78a8581a512532645a37b08b013cdd9801018c9880
fc6af8cf78ab032ad1c0bfccc3c6c300>WJCBWH+ArialMT AddT42Char 
2 7586 75 <00010087000003e805ba00140161b90016ffc0b315173403b8ffe0400e0d
0d0655250435034503ba0d0403b8ffe0403a1719341708110c1114030501
000f1c0507140b0a0c250940333634ff0901c0090116400b0b0255164010
10025509281010025509140e0e025509b8ffec40110d0d025509040c0c02
55091a0b0b025509b8fff6400b0b0b065509141010065509b8fff8400b0d
0d0655090a0f0f065509b8fff6b60c0c0655094e16b8ffc04017343634b0
16f016027016a016b016ff1604160214250100b8ffc04010333634f00001
00002000d000e0000400b8fffab41010025500b8fffa40170e0e02550004
0c0c025500080b0b025500040b0b065500b8fffa40160f0f065500020c0c
065500020d0d0655004e154750182b10f62b2b2b2b2b2b2b2b5d712b3cfd
3c105d712bf42b2b2b2b2b2b2b2b2b2b2b2b5d712bed003f3c3fed3f1139
113901123931304379400e060e07250e060c1b010d080f1b01002b012b2b
81002b5d2b012b33113311363332161615112311342623220606151187b4
7ec076ae4bb4756b508d3c05bafdf2925da49cfd5f02a1877b538e7dfdbb
>WJCBWH+ArialMT AddT42Char 
2 8810 81 <00010087000003e6043e0016017d40130503061302a810b810e303e713f0
03f6130604b8fff0403c0b0d347910019810d018e018ff18042008140e14
16121c05070106160d0a0d0e0c0e2418401010025518400b0b02550b2810
1002550b140e0e02550bb8ffec40110d0d02550b040c0c02550b220b0b02
550bb8fff4400b0b0b06550b14101006550bb8fff9400b0d0d06550b0a0f
0f06550bb8fff640120c0c06550b40333634ff0b01ff0b010b4e18b8ffc0
401a343634b018f018027018a018b018c01804180302331516250100b8ff
f6b41111025500b8fffab41010025500b8fffa40170e0e025500040c0c02
55000a0b0b025500040b0b065500b8fffa40110f0f065500020c0c065500
040d0d065500b8ffc04012333634f0000100002000d000e00004004e1710
f65d712b2b2b2b2b2b2b2b2b2b3cfd3cf43c105d712bf65d712b2b2b2b2b
2b2b2b2b2b2b2b2bed3c103c003f3c3f3fed113901123931304379401606
11090a080a070a0306102611060e1b010f0a121b01002b012b2b2a81015d
71002b5d71331133153633321616171615112311342626232206151187a2
75dd60a150100ab42a6b4873a7042697af45704d327dfd7302866e6d4192
ccfdbc00>WJCBWH+ArialMT AddT42Char 
2 9264 82 <00020044ffe80427043e000d0019016bb615180d0d065513b8ffe8b40d0d
06550fb8ffe840730d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14241b400d0d02551b400b0b
025507b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b
0b065507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c0655
07b8ffc04013242534300701000710072007030731df1b011bb8ffc04049
1e2334301b011b0e24000c0e0f025500120d0d0255000c0c0c0255001c0b
0b0255000e0b0b0655000e0d0d0655000c1010065500160c0c0655004024
25341f003f000200311a3437182b10f65d2b2b2b2b2b2b2b2b2bed10712b
5df65d5d2b2b2b2b2b2b2b2b2b2bed003fed3fed313001715d0071435c58
4009530553096205620904015d59002b2b2b2b1310373633320015140606
23220013141633323635342623220644a489c5db01167beb8bdffeedb9b2
8786b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca
>WJCBWH+ArialMT AddT42Char 
2 9714 83 <00020087fe690421043e0012001e0162408e0c102d103d104b10043f20b0
20021f20290c231d3215321d421d70209020083a173a1b4a174a1b59085b
0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad31ee414e41ee0
20ff201623042b102b1535043a1046044a105a10e50beb1dfe100b110e03
161c1c06070106161c0e0b000e1924d00a01100a400a600a800a0420400b
0b025520400d0d02550ab8ffe6400b0f0f02550a180d0d02550ab8fffab4
0c0c02550ab8ffeeb40b0b06550ab8fff4b40f0f06550ab8ffe840230c0c
06550a74011333023312250000c001019001a001b001f001041f013f014f
010301b8fffc401d0e0e025501100d0d025501100c0c025501100b0b0255
010c0b0b065501b8fff6b41010065501b8fffc40160f0f0655010c0c0c06
5501120d0d065501191f473718012b4e10f42b2b2b2b2b2b2b2b2b5d7172
3c4d10fdf4e410fd2b2b2b2b2b2b2b2b5d71ed003f3fed3f3fed11391239
3130005d015d717200711311331536363332161615140206232226271103
141633323635342623220687a43a926888d06a75df7b5a8f2e11a67678ab
a77473b1fe6905bd8a51518cff98a3fefb8b4c3afdfb03a4cdc4cbd5cbca
d700>WJCBWH+ArialMT AddT42Char 
2 10166 85 <00010085000002c6043e001100c9403b2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
900801082220130113022211250100b8ffc04010333634f0000100002000
d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c0255
00060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c06
5500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfde4
105df472e4003f3f3fed11393911393901111239390010c9870e7dc43130
005d72015d33113315363633321707262322060706151185a23e693f5b5e
3e42423b5e141e0426a171483aa727473f6072fdd400>WJCBWH+ArialMT AddT42Char 
2 11364 87 <00010024fff2022a0599001700d8b9000affc0b323263409b8ffc0404123
263480190100010c0d0a0103001610092b0f0a06161c030b0f1022002201
0d12250c01ff070845094560077007800790070400072007a007b007c007
d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e0e0255
07b8fff8b40d0d025507b8fff8b40c0c025507b8fffab41010065507b8ff
f0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00180136
b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd3c10e4f43c003f
ed3f3cfd3c1139123911333310c93130015d2b2b25170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>WJCBWH+ArialMT AddT42Char 
2 11656 88 <00010083ffe803e004260018014fb9001affc0400915173402201316340f
b8fff040331214342b1301240813160c0113160b06000a111c030b003316
251817403336341a401010025517281010025517120e0e025517b8ffec40
0b0d0d025517040c0c025517b8fff4400b0b0b065517141010065517b8ff
f8400b0d0d0655170c0f0f065517b8fff6400d0c0c0655ff1701c0170117
4e1ab8ffc04015343634b01af01a02701aa01ab01aff1a041a0c2509b8ff
c04010333634f0090100092009d009e0090409b8fff8b41010025509b8ff
f840110e0e025509040c0c0255090a0b0b065509b8fff640160f0f065509
020c0c065509020d0d0655094e194750182b10f62b2b2b2b2b2b2b5d712b
ed105d712bf65d712b2b2b2b2b2b2b2b2b2b2b3cfde4003fed3f3f3c3939
0111123931304379401a04100e0d0f0d0206070806080508030610040c1b
000d08111b00002b012b2a2a81005d012b2b2b2135062322262627263511
3311141716163332363635113311033f7cd55ea34f100bb40b116e51518e
3bb49cb4486d4f35730292fdb38d314751538f880239fbda>WJCBWH+ArialMT AddT42Char 
WJCBWH+ArialMT /CharStrings get begin
/C 38 def
/E 40 def
/F 41 def
/a 68 def
/d 71 def
/g 74 def
/h 75 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/t 87 def
/u 88 def
end
WJCBWH+ArialMT /Encoding get
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 97 /a put
dup 100 /d put
dup 103 /g put
dup 104 /h put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/WJCBWH+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight 10{/.notdef}rp /C /.notdef /E /F 13{/.notdef}rp /T 12{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /h /i 3{/.notdef}rp /m /n /o /p /.notdef /r /s /t /u 138{/.notdef}rp]WJCBWH+ArialMT nfWJCBWH+ArialMT*1 [11.9941 0 0 -12 0 0 ]msf299.196 140.1 mo(Temperature \(deg C\))[5.99695 6.66873 9.991 6.6687 6.66873 3.99393 6.66873 3.33435 6.66873 3.99393 6.66873 3.33435 3.99396 6.6687 6.66873 6.6687 3.33435 8.65976 0 ]xshWJCBWH+ArialMT*1 [0 -11.9941 -12 0 0 0 ]msf271.675 119.994 mo(Enhancement Factor)[-8.00018 -6.6687 -6.6687 -6.6687 -6.6687 -5.99707 -6.6687 -9.99103 -6.6687 -6.6687 -3.33441 -3.33435 -7.32831 -6.6687 -5.99701 -3.33441 -6.6687 0 ]ysh0 0 0 1 cmyk
%ADOBeginSubsetFont: GAAAAA+MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWJCBWI+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/b <1C60D8A8C9B7E2CE70CA6E765DDA192DA64FC714614EAF23EFFC73F2CF8FD4BBDD6A61C7FE92AF61D1BFC11D63548D1609F9F85A0D680385CBE8C84A668BFA6146323D9D2541EC558B240DCF187D91C1135ACA399AB1FAE34E71AB6B7E411A298572092FCAA6A83A1E8FFCA5A4BF27E564A90D232452C7B04D4AB6E60AB12852CDB4D1F8562087142C004A8A50BD905407E2D3718EDD0BE48734D3D4332C529D958B185D3DD09AF29F738FA257B40FB967F3AA407DC947E49A2DCEA8> |-systemdict /gcheck known {setglobal} if end {end} ifendWJCBWI+MyriadPro-Regular /Encoding getdup 98 /b putpop%ADOEndSubsetFont
/WJCBWI+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 25{/.notdef}rp /C 5{/.notdef}rp /I 10{/.notdef}rp /T 12{/.notdef}rp /a /b /.notdef /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]WJCBWI+MyriadPro-Regular nfWJCBWI+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf241.495 11.5373 mo(b)sh364.624 56.5514 mo
409.332 56.5514 li
409.332 15.3497 li
364.624 15.3497 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 4.22937 150.671 ]ct
[44.7082 0 0 41.2017 360.394 94.1194 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 153 
/H 141 
/M[153 0 0 -141 0 141 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 153 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
iP,B.keA?cGBS+G@"OuANdcD-G'.YFKS"f)LQRUVMKN<JKnOJM<E<,i^]2+F^Au(H^ZWB2XT5HaXT5Hd
XWq7`@:EA8CP[dkC1qBm@9I#VCi!j+H['dX@8C6JDI,k'77@!SpoXRtq5jXur2ft#kH2e*raQCH=ANag
LNdEFCL^gW@h3HlChds9GBS(;:LJ'X?V:;d`iB4(k2k\$joFN5joFNBjoOT)pZ;J;r9!q>!9O4Br<F8C
!"hI]+:S_j#6k88'+b]a(F:1F)[69G',(QJ!;tsZjne*BjlY^djSn9Ajo+<AjS\-FjQ>UdjlY^erT4+A
q;qkBk2tdek4ZOi_"PP7^Au(:^E[oRL511uKp\9\E-?_SF`Vh^LPCS;Jq8N*E)gFeE+DsK<`\+m!5Rs9
rkJ0/!3GCd!3GRi,@PD-EG/]tK7[rF@;94Z?Y44rE,fc3CM[fl6rR>q;as5F7J<h`XST%!XS8jqXT5I!
XT5HmXiIIe@r-+(BOGb0JSe\'C1C^\AoD[.EGfT.Chd6E;dE[-77Ka8rN")ApZ;M<jS%^9jnRs<jo4BB
jSn9AjmhIB#7qXe$j@>$1(j]p%L34C"UPkZ()IY_&-W1:!<WH*r;cQR!9F(?!p/S*r9"%@r8n(Bk2cC$
!9E\4pV-^DhnK0,r4`k>C4_+oLOOE%R@&tdM33pG?uZ*k%sEP[O,fHVDfTlAA5Q9*<rQ#';Gp+L<GuhP
/b$LT_#;"J_"k_F_!\r;_"Xr2XSApsXoGKuXT5I!XT5I%XT5I#XX-)1CMn-3Bjl"5K6V<WH[TL$>\.JY
@r-.0G^aF6?=%&=5XIq/r^$lV5rpbh>?j<8n>u\lrN-($q5jXuo<%qm!3FJH&jTN6DK0Z1@r['NG&MJK
H"9]Vral[NC2nHAI;<+s@:W;(6UaKD6O6"F4#060>sKY%X5U)\jlY\$joFK8joa]*k2lL&!9F"=!9F.A
!9F(?&c_tE',MGo#8]-O*Y]P>-4'YSrX'#<&/QH3.hDge"U>)&!!N?&!sAT(nE'`3rT4.Ajne*>jSn9A
jn%U8jlH!I!l2Rdi4fjuBRthlLOOE$R@'%fMNO$I@2!R*H@'dcL5h4XJoGaNG@XTM<E9#r#ZFVn5#lN?
9eQF[!5RX0!5S*=nu_nmkcOZ_,s>4DDK0`4@;pgMH#IhPH=]iUAS#I^CN+NCIV`7q?=Heu6:OHD5mTeC
3\a*.>Wj>2XT5H_XT5HlXmiCKX!Kr/Ci463C1D46JTu*TH?j*u>\I_]@V]q+GC=43?X[GC6:+.1r^$lX
69@"n>[9N=euSSHo&fr4rT4+ApuVS<r8n"@roO4Bq;r:i!>#n\(C^Tb1,:!e)^Qa:!!E3-$O..X*ZusE
!sJi5!VHHm"9/B#joOQ)roO4Bq<%2/"6AV,jn%Wr^Au(8^F3lDLP182GAi%sQ&L0EMi*+3F`r1^LP(//
JqA&O@q9F[:/Y(l>%(#/2)Rj(?tsCD/'Yj'XT5HlXT5HgXU\HEEGfT/@U!VsJ95OEFU3,+Amo1^C2n1k
CDL_n:Jank83T7+6qC'6.OmAG:KCLT+PNptXS&^KX7iSK=_MemC2@BbCOLSPBQ%p5Ch@-dC1qU*CMRa&
?r'[">"V"I77BgE4"Dg@78Hud2^?SJpuVV=jSn9Bk2l9u!p&J)rT4+ArT4+AqrRn?roP=)$5X?e&-i:K
.k;PJ'H7u&#mLVC%2T]i&.oHW!!**&oDnmmrrE&\!9NV1!9O(>!9O+?!9Eh8f"XJ4NK8g6@<6LFMN3C;
H#IDGOcb?DIY<B4O+MD*KTq7;G'7h59iY5%<_ZLn<a]Z.*#q7`@p3&!-;o;=H?O7<qS2sC!5RR.lE(&f
m]A'fG^+169j_1GFa.e9AmA>NH[TgDBl7j1G\^W'DLHM8@:<D84[__67Qj(,6kW9r1_pf_>Yms`0HEGn
AS#@V;t[6mXPp;4WtTf&GApnb?t"%sGA_#)>uYK`H#G6GBl7a/GACQ'DL?G8A7Jn@5".q:7Qs..7Sd)C
()So7;G'M:*^XRQBOb=He>r9)!9Nt;!9F+@!9O%=qrT+L*Zu4%!!NNB)^#e$#m15<,pj<5%20Bn+:n\i
'.Oe)#6tA)!!!*!!!*0&qu?m0$47"?!WD-\jo4BBjo4BBjS7j;jo+<Ajn@g:jo"97^\tnI^uiBsNffHh
Iq*\GKRRu`G'7e7H&mr?Jpr#lKTV%=L5(hDG'.qJCg^sjCK<Va7Rg9`;G'PX<FB?J1C#O?D/433C#cu!
^B(I>oW8+pk,f_MH[C9X:h!pPC0t=V@9lfBG^4:FBk:jnHZ<e>E-cF$@3&]W:/t7q756VX2aL5(4?>_q
:/On:"=$ZE=C5<4rN4_S!NW3PX$ClTH@0I*@q0Ci?smJT>uP<YF`D/1AnGq,EGBH3H#@/%@UN>5<`N9l
1c76P6;L!34$c;0<)Y7L,YqTH?sQe#X66Mak2ZI'!9O4B!9O.@!9EJ.!9O1A-m0f^.h2Rb#87OM"U>88
!=9kj(D%#_$54^%%2K^)'*e^G"TeZ*!<VlnrrN-""onW*!X/]-r9""?roO:Dk2lL&!9O1A!9O(>"6J\,
jnn0@jlY@5-,<\b<D@FjR@'b)Bm4`RD,4YbF_kZ9NfK!SIW'1VOcP9TMN397E-$)HG&VVJH;u^Y3&sH,
Bm+W,5uh];,6/BB>$>i`CfOM&;JP('!5SQJgoUsc845j/>]YLLO)\/a@Uj:Y4]#Qq=ArgWG]e.D>[2&k
GB%_IG\gVm?Y*_P@:Nk:-n6i&2aUMP@8A^J=BQUD%Q$^I>[1B!75I51hQ6dZrN5@cnuGAU7R]LHFFf"&
EE6RZDHK/%@q&S?Ap&<>FD+rcCO12EF*)VB?"%,Q@pNVTBLOC$/h]1O<b#T72+:YO)upL,8kNAp=[be=
6<DsCri>JL!9N_4!9F(Y.0LPE1J\eg#6tnD!!*</!W`WM+<)7/!s9)\*u>h7+:nY["UYJ;#6tV4!!33,
#6"T'!X&<"!WrN+r;Zg!p?)D:qrRn?r8n"@qrS"Bk2tb'k1dX4E+!'OEfQBKSVM-+G'e+7F+]-hCN=`H
IY*&mG'\anLPgqLIW'[aMLKMZBjb+B:f:4h<DlRe3%@'h%T4nk-U:j=Dd#e.9iGG:ftRNijK/E`qQ1oG
:JX8_H%(3rEEls]Am.u;D/Ncb?=meaCMI?hAnu:(FXVBVC0PCeF_P)]<DH(N5X@_%7R94%/fuf65pHdZ
1e:5D8io1!6;CY;XTGT+WSFNZ>u+6_?ZgdF6A0>a@Uj"S:LJ$W@p35OA8#an@q0+dDK0c?GA(5qC34/q
<E)[`6:!q*6UjC,5;"-86:)q++#QY_>tR4C5!r+NfrG,5mcOE/!9O4B!9F"=!!E3#-j:\C.leCJ#6tS<
!!NuK#6G&9#n7FU#6tSI',MT,*t8;]%3#`Z!WqZf!!E)u!!DrW"6JY,jn@j:jo4BDjlY_(joOQ*pqHgE
kJ'f0G(+=E>BZ!gOd(NCF)l/7CP%\3KQCpCBlJ6EJqA/_HA.-/MgfGsLS'??>$==%F)Yu5A6D&D-l`pG
2Dm?M4[<1RDb;EH6u$LU?sle.^[8c9_"PP<XT5HcXZBTnC0F_3@<m3HI;WM$?<UH6CjgYJ?Wg</>%;2\
Ch$UZDfK`;Bio@pLiH]k82a4M>Zk3-8MM2)'EJX]r@/:31eL>F3ZL%:<`iU%:-IgC!3Gmrh5_Z%@q](L
8RusiH@0U??t!2@>&&>/DI?XL<F'*JChdH^)eO#.E-5ktEH-bR>tR^J:L[U5>#S!J+<VI1*W7Ju1c7ir
>rs/g2cX!d:JX72X8(fWjS\-?jnIm;jo4BBjo"6F!s]8;!WWH9+!i3_'*e[E!s/N8-7'</rW3]7#7M1U
#6G5H(D[r!!Z)Y<(Bj[:"9nu2!s.rm!!N6#!WiE*rW)`U!9O4B!9Nq:!9F(?!9O4B!TiJ5^[Ai:ErL,4
Ec65VLPLnDIWKRFBkhsTO*YPVD/FKJI<p3_G&M)9F+&7RK8#G6>>e?n?uTZU;Ai1l.Ol\d((:Zq2F(#J
A9LB[1,;I*BiS/%jhLT*h5qH!?XR5J>\7hmEHlA9?X6]2<b?T$AQJe52e$Q9AS#:Y>?5*:Bjt@dDgQ%f
5s[\0>Z!^O5s?tF+;u(.#mqM!1d4i:@lP,K-9=[r7RfA>Xn&RoXR<4HWto&M@:EVMAo;U.GA_/'@96N1
Ap8H2=8lAD@r#akAn,=U=(#HN@ps:oH=f`869S%K<('&>4Ymlt+WVL7#mqV'2*Y#<@lP/O.6C.'7RfAm
X8M)[jnn0?jmM7DjlPXe"U,)7"To&D(De2-%0Zq7!Xf>X+:8/O!s8c>$jmFN#6t>4"U,>?"V_Xs$N'l)
!s.ol!W`<,qZ$TtrVur[r8n"@qW7nAk2tamk4-1d_!\r>F)l;B$?C*2KntJDK77i^rb4NANfJF!Ci!m1
Jq&#jG'7h=EcQYQF+f1.H<O-D:1/$O:f1+c4Xqp)+;P=n+>uJ\A7KdO)`'6A>%pu:7bkcXXT5I"XT5I%
XTGW,XR<2+?X@&E?<h)[E,^&?C0t7H;c[ISG\'kR=>aN'C1Lj`@9cf=?YX"TDJsl683fL*:L-j`5X@Rg
+<VU?&.&X[.Ps:e:gl3o-RLlF=%5S:orS4qor[nhh5_<!@:*GO?"RtoE-H56?t!);=(lf%Al\h51h:E;
B4k^a>ukBAC1C[iDgH"f5smk3?;j-W69d:M+WD@4#mqV'2*b)<@lG/P.6C.%77@29goCP=k2tb%joFK?
joFK1k55Ah!soVW(*F;#"U4l,":?7o$3C,-&I/jW#mghA!s/W0%L3.N'I=+a!!<?)!!)Tj!W`<,qZ$Tt
rW)lYs5j1@!9ED,ikH.2?t4.oH#meGG(YBqJqA`1Jo>W-?jLn4N,i'9EcQUhLOF2aH$s0f<E='ZG(5!s
Bgtin<FBK=4Zu(s3AWHD.L,qR#r>"RDJa\_$61$@8mkFh6#)0rEa%G:rN-($riH1%pT4LuXfV<""\MQe
>[1f<?W^cGDf'3(CN+0->[1'":189e?:e1(?>=In?XIDY:c(X2>[CiRC2m335!;;0<'i8n1Gpg4-QsT8
!!!6O2Fq"SAMFB)(+;4>4ZkQ%EEupBiN;gSmAgml:JtJ(ARJYN@rH-sCMRm,C0b-E:I8N4FC.U@@:*bh
BOG4YBMp]V7U9G4C2.`g3'TYs:K9b<1,_$D.OlYd"98E*.6'q&>%TMn(`"P^:I%-%=)hYV9(8nPX8_5b
jlGOck2c:!"68P)jn\$P!!!$%!so,4#6tqT%1j'd'+b6KrW!H5)]Jq\!X/`:(CUHN#n-k6!!WN/#7_4[
!W2ot!Up'j!s8o-!;um#!Z)"D!:AnKjn@j4^Au(8^BnF]BlJ$7E,Bc@rdk)urd#i1Ec#>qEeB!fA8Q:)
EdD\<CM7E_79*B)E,TZ6Cg'8%:Jt(kr_a1c+WMC=+!Uge!!b;P@K'dE1C5$@/iGjQ3AX;,?iXC-^ZWB-
XT5HnXT5I%XUM;5X\i"r>ZtQ@=^bb<CB8-arad?]?<L-#?>jaj;-@./?=mGA<E)se2FKr8>[1K<=@bD7
4[D;%r]p`A)\`r!(`WGS!<jha3_iUO;^Vb`'dG1_0/"\6:JX_Xr2ft#kH3aE#uji'?!UrG>%;%@CE@2'
AnYd`?WpE)?Z0jm<*ER5@:ieF=&i9i3(6;>>makB?!0cZ5!VG&7fG^Y0,kZ@'cA"j!#5Yd4&8dP;^qtf
(aLUe0/"e::JO\XiN)k<!p/S*q;q\=qrS+DjlY^dk2uXD"p4r4"9Sl5rXf)=rX&r8"Tnc*"V_XU!WE0*
"UY>4!W`B$!!!*"!s&N+klC\`nc/jUk2kafjQYe.jlXAF^Au(I^E$6N?u9duE,Tc9D09uNKnao!Ci=69
Fa@h,E.W[arGWotC1(4K<DH.U>$>]YBNeS891hoR;+a,PA7RG##6b8D*<#pS#;\td<`Ma=#oOU4-6j`\
,Ut]E8m6@pk.go1!3GOh!3H+#*C<%e=^"s5>@(Q;@:EtiE+NW`>?bQFAQME-Ci!PY>Tm9O:In)I4utVn
868qn84Ym*3^#Yl3\s'";^MVM!s8uHrW!B2-TY6s6ol@n&eZB/)ZCZ\+=]H687?YCoW8+pnu_#S*CE.h
>$5$7>[Lc?@Ua(jE+W]b>[1cJAm.f4ChdGX>pEKR:J+5K4ZbSp8m5Cu8kM?24$Gkr4#TE(;^hkQ!s8rI
!!!K/"=cK67R]B\"qqXp+<CG$"sGKY4%`t(j/W1@qrRn?puVS<rT41BjlQL(rW)p"(BagD!s8`4%MTZc
#m(22#6kM:!!EiE#5eQ'!r2fu!!36'p&P*noDejmmf3@m)tW1lj8S0@jo4BBjne-1^Au(B^C`n'A9rE;
E,TW;I=d'(L5gh>/Tu2PG'/7M<GR&4H$=4@BPM'oG'7P!?taS%JoF^f;GC%i<E<-m5u(Qd5q4#V)AO"m
!!!s(<G>W>:-LI!5uLHM5!1Vhr`'"tAod^^!5Rs9nuVnnrN5pu5ccq';J'EE>[(B?B5DC$E-Q;>@:*/I
@VJq4=(uA\@U)l3<`<+1@oPil<*rpH>XUkD4[DM)77K<o4@r.%+;k(k)\<,P!"q+V<D#hF0dee85s@=a
0IJeK6q0C>?MU]'XR`LjXlZTJ3&jiK@pNAF=^u2_C2S!6Df9,n>%;#U=[cM.BkCj\<E3+!=^trA78Hok
@;B.;6:*k&7R]d94#T>q8MqY1rY-4_"TSN<2+:P;8O,$\2)[cc4#A`B2b$5*6ig7qj/_b5!9Ek9#35aa
!=B&7rW=GO$kNs_(*4/(#6b27#7U_7!Y#SF#6Y&.!W`?-#6=f)!<iW<"76*b!!!)h!!**(q;q\<o]?/8
roO4BroWCY.Om283FmnnF`;80HB3r@LPh4OMM$(dG'/CR;JCE$Isl9>>%(rbMMlX^#'5HTMNr3Sr_5"K
Bjb=P:-hKI9i=nU1G^-e&.oI*<a]TE>"r%*D/F<:G%"cE@!ZEq8ki2U4[%rBkH,:;-nd5OEG&]b>>o-X
G'.eI+F80PDdcXS@;K%3<+]ZUBO")!:K(\EF^[mLDKU)N?9A-L/kAo9:.RQ+4?bnm68Ku:(_6u_$R/#8
<(KPB78I&h?X[A<:GkpZ<)Yh@5s-hUk,n-Rpo?+n.53DREGArg>Z56YEcc;CH$"+G@od)KCg9;,AnPjl
>tR^a;e0uj@nC'GFEDq>48qDr934nb8j>3q5<_J%2CU'o%grdR,=PC.84l*9:Kgq0@q/;12G[p`;`d00
4#8_^X8&aYk5>9#!>c.K!s8Q2*uc.8)^H@@'F+[E"qUk:!=9&B$j6J/$NUJO)[??H',ql@"oJ?#!pfme
!W2p#!s8]3#Q4W&$NC/(!;P[VjnIm;jo+<BjlYa@3\i]]5\l("CNFNAJVSu8L51G6Jq%`IDf9r<>B#1G
H>me<D.I$qLPBtdCN+`OMKW0'<E!=?>$=NkrD!Dm<^e/l4!k^J!!!m)<G5E68l&?"C3k&E<`M"eLM^m#
:0'.b'B[(%XT5NsXU?I/2)J<OAm&JJAo%Bc(iXJ4Chmcj:Kq(8=@ue5Ch6jV=BSQt?Z6Ws@oc`;Bkhd!
845p69iX_T3'$q$,XOpY0.n7V"98E72agV676<Xu<`Wd?>t.43;KGuD3^#kY%M/05!j&N*pT=(g!3,Xl
%4Ekf2-4^.>$t`KCN"2mEH#o8Ci!il:0_(<=\2q8Ch?sY=^"a"?uU'p='AmDBQRcW77BR><_?"I4?l%n
5=.gt0/4L["98E82ap_97QWk%<EEdB@7E[9;/f]@4$H+`&J+$)o]?/6"6JY,jo4BBjo+??!%\0c$3CA7
#nRjg(D[f#&.oBS!!<<1!WW?7&./LA!WrH'"VqjY!WiH5%3#QM!!!)e!!!&t!!E?)$3pb6!!<6<!s8?"
p#Z>;jl6L+jQ>UdqW@(X'HA)B2F'l-BnUP>H?tX-JV/T0JpRE=0Pa['BQ\0(G(t`m?u't/D-Cn1JpMBG
<Gui0G\phr;daB;;E.<L:.e,V<D>bF/faij%gb-hC/Rtr6q(WrIX-!1:(/U^Q#h"A;cXk<!$,,:^Au(=
^Zqpe'GMW=1cd^!DI$1QAU/61DJsN2AR](W<CBke@9HN;E,]/Z=CP`B86fqHAR&,$>[2/W=\_aZ:KTkJ
/icBb3][I07QiUc,8L1X*!RlV<^B&.2`=T2B4bL64s3[O?XGu`72>k''Lhl#!3Gdo!j&N+lDkU7(*P1c
4$6S^@8piNG]7G;DfKN(raHC>79<Ju>#]!ME*uIE@q&Ua8mQ4IAmJ8&?!V>\=A;RX:K]tM/j)Tf4$,i!
4uP8D(]FCS"tMo>6:*Rh3)`^iAmdkg+]<bs?p?tI(]XOP7d-oCjoFN?k5#&^!YY_<$47q'((_/o(D$oY
"pY20!W`K-!='>T"TST/#6Or/&.f0O!<<3('+"a=!!!)e!!!)u!!E<'%1*4;!!<6Q"U4]%rT4CIk2k[d
k2kaer8n4FjlY^ck2uTV!5SNIotO$;*%Ej68kWiMEb9TCO,&=?Knk8)F`qn@<GH5jCLhUDLN?j=G'.S(
Dh<RdE+DsfDhE@P?sll?DGj@m8l\SX8lJbc5s[+CrW!oF2bn'b;aEiAA7U.8F%oC[As@=V:/Y(3!!"!>
pV6:6"g+o.Xf\\oX[j-B+=]3/4&g-);e0HaF)5]3EGK,o@pr>+<`W[3;djZc?VXa4@9?')ChmQd;aaen
De3$G:-hZZ5s[.d7Q`^m6:F'p1a<_6!"9#]5$($:1H%0j;JKbR?p-Up;gr%Z5!_XP!!!d(kcO-N8/E'c
.lKIO<Gu5DB4c@,C2Rs0Ch7*d@T>iu=(5<2@rZKr9j2%9=\;q8ChI$P79s/:Am%o*6;CZM68(Gj5<Cqn
7R&gh,T$F[)[7lY<C0&23&ji8BP([:5Ts*T?XZ/c72>k'(][(iWs.YJjQ>UcnE0QI/HHOh!=9)U(D%2n
(D-rY#6k2/!WiT.!='DW"TST/"p+c,&.o3O!<<3('FFp?!!!,g!!*'$qu?j#!=]A?rW!$$.g6+P!:f1O
jn\'(^G@>h6!IAf;JCGuCOU_mLOjo&H@^g"IW'%9CMRs-BQ/-<F)5c<G@jTeKS4VdCN+62EbmRHBkhC(
H=UPS:/b%f;GKhZ;GfCu*#9;A:KCY-@:WA,>$>`V?qsHW@t\T276rpa*#q+OkeHJd)m$.`+#QYY5sJC^
?WUrUG]@M5BOtsuBk^jT<)-Ou?<L64@:NYH?"7>B4]uZ?A6Du>>[1T;<E3(#?Y*,62a0Po5X@Rp5!_Fd
)\`hp,!A@c:JXnW2bHVC<),V@02QOe<AlZe+;GYH;Z*WsXT#=%XRrUqY-$uiBHeWY8Oc$7=(YiDBk_d2
CM@HqCN+!%?!101>%(T7?"7AP=^>NI<'FK'DIm!T?<piF=]SR'<FBE;;`?p-6:4(&4$Q&!/fYZ>&L0P1
9285\75db1=]J0\4YK]N<E;(:0-_8K1/[A<"KSN&k2l$n!T`D>!%S*X"Tf,B+;YRu$jmO]%1NFA!<N<+
!s&K/#6b/3#6t80!tu=S!WiK,!sST(!sK#4!UB^c!W<!!!Wi6"!s'&:!rW,u!!!&tjoFKAjoFK=joXZ,
jo4BCj6#^C9J&"X2HkTI<E3RJF*<.eNJ<%.G&)\oJq7WTGB.bGDeWluBlJ3<F)tPPBSV@gBl\cCE+*-_
E,^,TLN%01;GL4q>"UbK?slDQ5ZAk+?u9:LD/Fl<7SQZZ:.n2P8ml[C>!Xqe4&o9mDaYirlbDeg1*S+r
.S+;V6q1*Z?"7YdG]7J-@9@;oCMQpS@U<>I>?+X%;d<a>?XHD]<,lng='o`J3a>EU:0_%8CN*N`6:!e)
84Yco4AS^1+>cMV:K^FY=]oQ?2a';m4ukYc4AK6S82DV1/k/6.>W*N?l`KNS(aUU_/P9b_77L3\@:O(h
G&V2,@p*VrChjqg?=R>N?sH`3<EEO:@pi\;2cXj;B2r>T?![G*2I0U#CN*Qb6:*h(8kM/t5>P'7+Z2\X
:KgO\>$>Z@2a0Jq4Zkeg4AT?U8iA+;0h"N1>rN`Cl`9pF!9O(>!9O.@!9X1Z((LEH!!*0*#7qFf((^]U
!YHpp&-;t>rWNu<!W`<'"9o)7"TSN'(DdAZ"V:b<rW!-*!t#ST!sA#m"p4i*!s9)8pAb0sq#CEr"9&;q
joFN?k54<?^Au(=^G%rPAn4e.77K^D?tO.jCiFE;G'.t]ObSX?H?+=WKQ:[>E,U&VH>me4<H!J@Eb'%d
Et!#%>@_8`F*2>9@:3OC?lrTOA9)`l3DO'rCMRm1F`ht?79Wl3>"M@Z78dMs>#kr-93,S6DKB5Z9C'@l
XT5HlXUm9T;c,h=2E*N[:K(4q=Bo53@4Q5DE,]N&?=dYb?;jg.>@h\a>[(#o>\e.^;-@73?!L<#;H$h-
@Tcf.:/1^_"\M*Z?=-,G00W32<EEF4@:EhH3(QSC8iesl3'g;1845a(78m,g?V`[Dl`KNS"ZA\H<'iVE
3$psf<*3=,?!q,O@Uj;$E,]N'@:j(g?W:*4>\7kc?!L8r?#+7`<"3#=@:<GC8Q/Pn?t*;BqbIVn6W7E&
75$l'<**7/raHaW;`IBA>"L_:4#fQ&91hZ?4@W7J>@:2g4R9'IjoOQ)o&^):!!!$#q>^j'!WrK+"U529
#88"&()@>d"UYPL"T\Z-!t#\K!s8Q(!tZ"I!<`<)#m15/!<E<,#6P&'!!30)#6"T/!<E6'!sSr7#m(#*
!!Din!s&E)"o\K%jmV=5jlY^t^Au(K^JDTl-94tFMMt:A+>P`=:K:Rp;GLV9G'8ImO,o<_JT-3mOa:2I
G'8P'JnSk6D0'uKDe<NnG'8IV<E`R6?t3ncChmj#@q04iH%^fd947a;+DlRiJV%fK8n;I^Bhq>o5t+CL
>&\G%EcZ;FG'.kHC0(&CpqQI'!3H.$(`j\N6!\VT4q/>W-SmnT83fI(:KV%6CNKK",^O62Ci"N286B;1
D16;#<`iL1An>1F;cI16CKs7u85;rW<*'!#$<0hu<`rsNDcf(sr`]t:C4'f4>>@:Z;ef8p3]T&W3X82H
>[1WB?XNe@"'o877I@5GWu)p"01')hF?L$O.4I/?7S5s55#5<k@r$&_G:e)U?#","AkH3:@r?^2<EE=*
@:j+V<)Ze,A8>I>8kMlT;cQn%>?Os(;HI%7"E&-\4APi[+)#n7CKsXt;c@F25W_(d3'0`'?!UiF?smMU
@UWYG7d[8UjoFN<jojc-jlY_(!!3<C)tX+5!XArA(]GNe,S1(i&1._a!XArC.hDa\!W`H2!=Ar.!<WQ3
&-Vn2rrN'"rW*6*!soVT!WW6!!t#J`&.epD!!**1!Vl`q"8rB-#6tG:"Te\kk3p%i1,;!g?upBmr]plV
;e'N\A7SkWEcVn8EeK[8Mh6A'JV&Q'F)Yu3Ci4=nG"$OlBk_C#Bk_d7LOX8aEcZ;@BPCsqH>mP4CiFQL
JS@_aDfBZ6I>WK&F(A$VAoh?Q9hn_sAn,@^@ps1sG&qV5>$>?Fq7cpFp:p4$!3Z='E[W7h4\f?k82N.Z
1dY#;>Z+Kk<*ij9?Z(=8FDGQ$CMRg$?!LN8=B]'?@preM<E3.(;cR:8EGA`d?<poB<)ZUuAmA;9=Bo9N
CK<Jk?!LW=BQRs&?W''c<*rE_4[);1;c$@j:eb&#@:*8:84ZKSq5jXup9!qe!3,su3@QC45Ykis8i8Ia
2+(8C>uOZo<F90C?uCC5G&1i(CM[m%@9m&?=]o'A@q/tQ<`E4*=&`[>EGAeY@1cmR<EE((AmJA9=^>NP
CKESnr`p"=BQIm%?rK9g;d`B`5!KWJ:K14j;c6Co@q/nP<(]bY;sgUek2k_#joa`-k2ZI'qu?a%"oA9(
!<NB)!<<0!"VDCu)]TFu$4md_$j?b9!WiH-rW`H."9&?-!s/N/#8[jQ#6"c3"9AQ)":>53!Ykb=#7qFJ
!!!-)!s8rM%1NIA!!**(qZ-Np"on]0#6b52rVup!q;q\<roO4BqW@=_/n7U=4[D_9;c7=XBMM93G'\UX
EbTH7E,]QDRY-62Fb5*lH@CNg@:2hjA;#Vi+bXc4;J'rbA9rQ^MM?e:KS"YjD-Cn2H>[S=E-?PR@nKr(
E$KCLK6hfaAlW5HBi[N"<buo-D/30N:1SNkE+i045#lQ9>$Cm>!5SHG!5SQJnZ<L%4Y\ZI4$Gts<bGAq
5#>[!BjY1H4'Q,u>ZPZpDf&`fChdZqC2R<P:-:1,DJjB2>XC_T?<L0;AU&?:DJsE/Bj+Y1>]"%U=^#'=
AnFk%8H)jB?=dtbAmJ>):JOnY1e'o9@VJtJ77'+8@:<D?681/a>ZFBeXf\\,XST%!XSo9pX8K"p;Ecik
2EX2j6<@o%5<VnTAnbX[<a9*>>utcnDf&chC2.HpBPq6S:I$R4DJjB/>s^kW@9QTAAp8?9DJsE/Bj4b5
?#=1V>$YEDAnFq'9)`*B?Y4.gAmnY-:/=n[2ap2=@VK"L7RB@=A7JnF68LDe>ujNfX/kflpuVS<qrRkZ
q#DE:$ip>.!=&r@"U+r0"p>#0&3(@:!sT;H%13OX"oSE?!>?+\'*A47!<iN*$47mp()%Aq&.J^D!!<i@
r<!Q8$46e6!!<<+"UYkL#mCA/!!*-$rW!'&#7Ub:rW!'%#6t>3r;[*+!WW5_k2YUbrT44DjlYY&k52mn
_"bYIA5bre7/fUU7T04r/RrU9G(4RRC2Ip2Ed!%nKS4f"H@LBqK8OqkCM76qF`r4eG%bT.F`:l3F+T,E
KG&]SBP:CeO+_h(G&V_[K5tRBH2`+&G&VJCF(nZ_?tj@mChmj*F)>dn?it1cF(tta:-h-?>$G!,nA"k&
!3Gst"&hNF2uPX+2aLA@;,UM$@qo@W<`r[7?X[bmDJj3$ASPpqDfoYp=&`(#@:O%i@8p94@9c`;?YjXu
Df0H+?W9um?[6O$A78_TDJri[>A!kG$Xm7G?!gW$:/=hi=oMM:>[LW::/4Se?X6]'4u>)[84l9<orS4q
rN5Uj"B.WH3&gdq0g\f;<)He(@qoC[<E`[9?t="oDJj3$Anl$rDffSn>#eL)@q07k@oZT9@U2o@?tsTp
DJX3.BOFhA7:::VAnPUZA8Z<m<*]B6$Y3RN@:3/+:JOnk>5hY,?!pi>r_Er*?t!,/4Z>5_91_Q@n>lQN
"Qee-jQ6@&!9O4B!!2ipr;dN4":#D?"Tec."U,,B)\Wko#mqO[%1j3m#m(//!<WQ3%2/sI!WrW/!<iW<
'`A[X$j?Y5!!OJY$4-q>#nn!V!<WZ-$3:A7rWN9'rW!!#!X&E'!s8]/"9&9&!X/`/p]1<U!9O%=!9F+@
n\59?;aa)E77@;I7T*jtA5[5_Fae@OBPh[/F*3(lKS+c#H@C<pK8OtjChmWuGBSCfF_PT0G&Uu4F+T+!
KnP,.F)#GiEfYj!H$4.OKnOJWE-ZeVH$4+HF)ktp@:3b_C]8,PE,oi4ra6.PEcPnu:.%<B>?Y$,otLOC
^])"<XT;?er\mM/3&ii_<)ZXk=Bo9K?=-Z6>[:WDCijQ5C1V!kBkqX/AQMu6;d!R<BPq6X<a9'<;I3^G
Df'E1DeWKX<^pD?D.R<f>\%bj?W13?ralLG?!^lE<(9VX<)``t#@(S==ADXe=pnYD<_,A11HnE%6q$^M
s/c4%nZ)^j69"d$84$9S<)d"+@VK1W<Erg<@:F%oDJs9%AnbspDf]Mo=]\R+@q01i@T?K8@pN#A?u'[u
Df0B*@9$Au?[$@!An,+ZDf/r]?"a.K$=d@K?t!&):JXtlrE05.?WgP2:CLH9?r]f_2E!ck8ju2<Wr_AE
oB$#Rp]16n(]jdD%0Zn9!s8]1"qV[d'FkHW%1Nj_)@HHF%06M8#7M7M!<N?.!s&QH"V;@\'GD,h"Te`*
"X"Eb#mUP='GCWN!so;A#mUV4"TST&!!!&t!WrQ/!s8H%!s8]1!r)cgjojc+jlY^s^E5mCA5uE"8jkg#
2*FB9H?sXKF*_nJBkh7$Ee/gjK7cjTIW9jcLQ%7EG'8=fF_YW5JpqidH@Bg@D/=?@Jq8N)GAU_r9m)\[
LPC;!IYir8IXZm#KS48DBk_X&<afBOHB3AuBk_BtBPD7#rbqjFrCR8_78$NWF,oh+p8nV%XfXQL;a`c3
AiM\'.Om,3:1\!B=C5WH?WL3,?X@MaBPq[0C0kXfEHHG@@:<kg@9-<8Ch[<eASGCF=]f*DCMRa&@TcK$
4^rqdEH#Z!Bm"Q9B5)0uDf/cI<E3C+786NWApJ!"<E3.$<)m%+r`fh+3]]Aa2E!W_6=5$5Xo#6lX(jU]
;air84?##G.l0.ZAnYUU?tNeS='&@/?YaCiE,B]1?YX=qFE_M2A8,jh='&jGBjtRaBjFM<=^kuYCM[fs
>#%jW@XN?=E,&`oFEDD8BkhC!DHoV2<a\rt:JY&(G\1Pe<`rC';ug)">mjFi4$5Sa3BTVp@!2%@p>uP>
k2lXD!VQLG$46q<"UYD:!WiB+"V;4R'G;>o"V(qW)^#[s#7V=N!WiQ;%0d%E%0HS4!X9#1&-3"<rW!91
.ioKB%L!:\)\WSg%1j'a'*A49!X/Z)!!E?1+USSQ!riE'"8;cr"X![)!9O"<p:hfe^V<38A5u5o:JaJ?
3CQbTF)ku!E.2bEAnc41H@gg&Jq<oI'7tghJq&&dEcuqUEcZ;FG&q_CBa\m'Jq8]1JV8Z1IWGF,21CI:
JV%oUCiaW9D0(/TJqS/PF)uqSAmf%TG)CQkBQ%p)BOPFcE-chLAktBG:1.RFBmP[2^Au(J^\4cOXKAT`
5uL064?Yqf/MB%J;dWj38mH(8>uOa.AS,aq-#[R7AS#IiCN"!'AmSePC11IT?X[AM?X-T9@r#k"DJO-.
E+rYX>W$5<DJO&p<*3L7>ZkEJBl%Zn:L@IF>uXQo:LeNXAQ2o@<)cXj<a93I>Z3d</j<$,<*!UQpT4Fs
rN5[l!]EAD*(E"O5X@@^0/c*p?t!,.?"mSM<)d.8Ao)@'Chs#^+)G_/ChdQj?Xmh]?t!GQA7/eN<aB3N
CN46-DJsK.?iF=IBl\*,CgU1F?sm8D?tj=iDIH=K?u07Mr_FGBFD#2c?"$`5:/k;#AnG=J5V=ZR:Jt1o
AomjMpo=DVpZ;Y?k2lXD!VZR,!<iW.!!<Z5"9AQ,$47=W'G1oU$47=U'+k]\"U,,@#Q=l=#6tD9!s/T1
&.fWk&/,`n%0c_5(C_;s&.f!G!X/`0!sK,C&/,3I"U,G@!WE''#9*sV!<WK3!<E0$!Wrc:!s/<""9AN)
$6&[$!9F+@rP&EL^VK]\9gqrj<CK>S@o>QX9jh[SE*>kOKQ(m6CO(DYJqf51G\MAQJV&GrDfBZ6Df^)N
IWK@FDfB)]F,Q0CR>ZZPL5LP*JqAo7IX-*[C0"@e<E34+C3OfKK6CsSHB*DjA7f"dKm%WQF*_M6;d*RL
JqA;l;Ca@tG'/"PJqs0:!5SKHrN-.&XfVB$1H%Nt6o[(j:dHop5#,*_>Y7%\Dd6O<=_;D_CiFK-A6*/T
CM[cp?!LW=?!h)UBjY"I>=Vjl5[SY]H\-BUEH-)9@r,t(DeWfl?rTQ`6psR:<aoKNDIHOWAU%rm;,^"m
De!3T?Y*2:6:ajXChmTl5p@O>@prhTCNK<R!3H("o;``g6;p<43'pM02)RNm<aB!&4'?B*>t\@5C(+fk
E-,])=(?#]C27>Y>u=j4?t3nb@Tm&B>tm[oEd2n]Ebo`8F),9%CiXH.A7K(N7Rfg88kN/p@VB^j<b>rf
B3J868mlRIA63/N<)u=V9j_XNBOa@R,XQ!M@q0=onuM`O!p&M)qW7hZ!!3#u!!2ut'ES@>!!!*7!s8N)
#n@CU()mSe!XJZ8$3p\9"9Sc1#7V+Hr<!f8!!O;f,r-DO(Ddu$#7qFc'Fb?R"p4Z%(BOgG$krpJ#mqd`
!s&E&"V_1H!X/o3!r`0&"V;4P#Q4W+#6kD<&JtH/r8n"?qr[Lb9h%E72D$O>4#o;\78doPJn./B>$t`J
F+/F\Ecl\IE+*[6F)l&:G&(MpF+f6uJpr#kH?sL?G)(X#ItE?/LQ$e2IXQfsH?*qBE,97f?kZ^ZH?sp\
GB8=eMLK>VD/F?;EcMq6DfU#EIWK1=DfBH$9/A>(F`h_FFaEVnpoR>pXfSY,2`3HB+sSQi0/"q95?M]:
;`$[/:JXeoBkCs`@V8qN:0VF>?<LTC=ADUsDJj6*BkCsgAm82BF),T,Ci464FDGK'BPV<n?<^V8>Zb&+
:F\n<AS#I^@UEneF_OoZ=BT!>?=$i??=@>X?W:-3>ZOZ_-7D;k@UEGNAb)tuWrT-tX"ZIj2Cg"!.kr\1
/iZ7%CMQj+5>"^I;IF3NAm]"Y?!U62Bjb:O?Xm57:LS-YCM[]WAnG^g>Z5-OCM[a#DK0Z<CM%6nCh[Kg
>[1Q;=&)Oe8m5n?An#7XCMIs*>$5*6@UrnS>[1]I@qf=N=^566;EQEX7:K_6?XdX<X8V/\jo+<Ej6#Fb
k4AWU!Y>nDqu?]t2?aNs#mCP@"9SW+%0Zn:"U>)/!!O#L&.o?Y#mq"A!='DP&Io?c(De#%$4RCU%137@
!sAZ,r;Zg!rX'SK#6bYM)[uiM!s8`4"U+u1"U>8A"T\Z,!s/N%!!NQ3"U,,<pZ;J;rT4*qpV1uc;H#t=
+<2:;)&abP/j;mHOcaHC2D\*'Dg$_RF(o<)?sluLG%kVfD1ZP";g4UhK7nu7L4k2*Ed<4VF's'BL5(S<
IX6<`GB.Y>D/t)GBkV$cDh<OaD0(,ZK84blG'8=TBPhU,Df:DcSqLrk>$=p)6od;3FoHC^CM<fW>4fQ0
XS8i-<'`i0-5[I2&J>`r+sA^&>^^s$0IeG65$MH3?XHf4=\hg]<aep+5?Vc'5XAk3G].J=EH#f6AR8ta
?<p<5DK'Q;DeWco@q&bL=]o'F?<'s':KqUM@Td&QDf9W->[_&T?5ljH=^G<:E,^VN=]7j^7RB$e/P'>W
?=-c6:.Y#Zp8`766:*U[)]0;(',2E2,;VDeH$WUL/L`nK>\%YY?rg92:JO>[@olYu=DV/,6Xt[kDf0N6
E,KT-@:j:`@8C9KE,]o;BkV0i@p`MF>%),P<)ljl>\e+b>$tu]DfKApA7K=\<E`R7>[25eLMg9o8kMP]
6T6YP8n)4;?s6T*9(].ajS.d:!V-3m"=>Drqu?s(#7q%B!W`E&!%%aP!W`9&&HVq4#;[J:',DB"',1cW
#nR7D!!O#O()mqs$47"C"o\T3"UtV:!<E0&&.f'K('P*\'Gh)Y#6t\A!<WE-!s9;S5SF5#q#CC"rWW<'
rrD]Rp:igO:/,4s5sRk-2'sq72E!<_C2$jH76+@JF)Z&5D/3ZcA7TCsKm7i\Ectqf9lGo@F)l_bLPgtI
MMdIHJT#QoH?speHZO=QFa/L`EcZ)*D/sZ2@;pL<G&qS@H?k9sIsZKaEcZ2=DfBZHJWY1]?t<eG78mAn
C3=5o>%D>M:@u<pXU?aF4]"I$1c@9B*[L_7(+;4E<D#G501836>[(94=Aqaf;c@.C%qK3T?XZbp4^3&F
?X@GdEVsrLH#%2"?=d\[BkC^\@prqbAmShI:K_"1;bgS0ARSkL>\.MeCMIHm@:!;G>$G6:CM\?/8kr;`
5rM&#860/!84lf\8Nj2Wp9"%h$SFY-;F<?"3&W9/,r7,).k*P[=@te;01A<<?!LQ:=]7pl;cdFGB4kIW
@o>HR>]a^g?YOM"FEDPFFEVG8>[dVD4_\M9@UikYC1^g\>#/=/@9661AnGO]?!V&SEGK<$An#+T?!U]@
?#+8&AP#Zr;aNH18kN)m<_>t_<_5LLX8].#k2lR(!9O1ArVup!oDnmmqZ%T>"9S]-!W`9%!<NK>#mg\;
#6=f)!uhdT"Uu7ar#5b]&.epIrX'kZ$3^V="pkhI"U+u.!sJi0!!<N7#6b23$4.L[%LNOI"U,&.!sSl>
&1%V_!<3)t!"&c3!WW3$!WW5_j7_X1^K>#,(I^cAEbK6/E`G+_5s[(B.Q]^eA5YNn>'4R^An,Xb:1RmY
KT:qJLOO/L:JGVVF'rF"LP_%OR%U%>NfSd9CN+66E,9K3F+T='IXP`m@![-;@r66;Ecu_E?upCBLPgP0
Dg$JJF)Z&9H?t3Z:0MFL;E\0/H$+.97R^?m<CLG.JbQqSXZfZ:&3)R_?;t$5?UQP$1c6Km+>,91;F*!-
87>Oh;c6^m5#Y<gDg6AHEG8]S4[)q`?VX@)EHQMNJW#;;Gq+)U@TZo@?X-]<>[M;iDJ<f`2,@gq>YnR0
?=@AH:1%@GEHZ)3>@V8O?iF:IAS#d^5"JgY5qklAA7An@2`=*(6oItAC\Ot+X!CUs&i_ja?W:0:?pu_)
2)Z]s+Yb]7;aN958n(jm<)Hdo5>tNL@r-@1EcGf!:I%'HCg]t5@rZU7GCta,K6;ET@p*,D?sQo@?!qDf
DJ<f`2GRjr>uFj5@:NkO:LIRJEH5`->[qAS@/aFKAnGsa5>#*^68M2FB4>7E3&jB/76"4CC\On.josl/
k2k_+r;[!1"T\Z."nhor!W<!1"p+c*!<N6$!<EE=+;u18%0ZY13<B`q!!!6?)^$7Z7QrdR+V4k["9Sf1
!WrN.&/u8l%06G/$46k9!sJi5#m()1"VV[k%1NCE$3^V4!s]/?'ES77!Wr?$!t#>>"oSE)!WW3$!>,4l
qr[[gBkBCA77DZGBl%g1<]E9/5qO'+3]TuG;E\2eGA(/jA8GXJA7Tk;Nf&^LI;iUh:2GN'?sn/4MN*X`
TUqX5NIc7iE,Tc8DJsH7Jr551IUbZOH?aC>CiaZ@H>Hu1F+]7,IXQ0YH?+'*Dut?4K,&9!>&A(S4^*,V
F`LkZ6rdu%6tBhZpV6L*<E(R^2E#;V<ENU87P6DO2'N_V/h]@a5qto&@T5lr;cldX;c7%AG]e.KC0XOt
4BQB+:JYD<FEi%^Mhm+4G\^_j>[(N>>$G3<CisW0Bi$W^AS#*[;cmC4@qJh=?XI_kFD5Go@qAtRr`g:O
AoCj:86K%]0h>ng@9u\f2ag\72cEXjr2ft%rN5jq4&dpH3&kSY<`rg<7P6GS2Bs"^0eYdi68V;+@oZ0#
;cugY;c@1DGB@qHB3e7r5Zql1:JYJ>F*;bYM(OL9GBRb3=C#0??!1E;?u0q&Bk^I&:M=<F;d!R<@qJk>
?smnmFD5Gp@qK.Wr`p@QAoCg:8m5@a1.l.j@UW%l2ape:2cEXjr2TgsrN#nZ!9O1A!!3#u"UtV:!X/c$
!!!&u!!WZ/!!**%!"&],!='8\)]KS%"9&98!Y>M8!!a8X*[!4-5WKr.&-i7>!sSW**sE2p'+GBO!!!?4
"9AQ."U>A9!!NN?(E3em":#8;"o\T/$47IL!!!*&rW!$,#mLS3!!NE(!!**3r8n">rT<mi#@KtV6U4CM
BbPZAJn[hP;Goe92E<crCh?jY?t91M%;9E_<a]<GD0C2LH?!m&E)qRNH"gu2H$t9rJV&Z7K7n\sCiXT>
ItW6!EdidmG'7b2H'+5@E-$8MG&V,&E,^8KF(Al`>@:uPBkq[(CMd*@:/Fbj?uUOCF(AHQ;J:Al<FB3J
^\GS=XXm4*-T!YD86')6CfWS[5s[:T.P35==Aqgf:/Y+m<E)pm78?WU=^biOAR8U?>WchIA6)]8AnPpr
CM\'7D/X,s=C5EEBPqR!?>4Cn@:NJ:A:&Z>>[M#Q@9cc,>[2#P>u=Nh8l&;_<ENKC=BScq2EjAk85EK(
BjXb/6:"R_=[Z"[<;3NiX"7%+.Q0.K8lfG;C0*J\6:*RZ.kWG@=]@sg:Jk1o<`E'p7ScfZ=CYuVAm\gB
>p=*/AQMo<Anl-sCM[s3D/<os=^YWHBl7Qt?YOFm@q/_=AMSRXCgCF]BOb=J:L.7>@UW587S-BT;c[%,
=^"uu3'T\p8l&`+Bjak36:+[a>").]<VNQkjoXZ,k5#&\!XB8J!quZq!Wi9#!!3'#rrN&u'*/.>#mgqB
!s8Z/&0M8\!Wr`;&H34h(E3u#%0lq<"U>JM$k3@L((CKR!rrWR,nL.^#mpn>!<<3)%0ct:!WE'(!<E6'
"9JW,q>^X$$k3@@rW!!#$3L2,!!2iVpqIkR<Dkh;,=QBsO,nQoA8#[\91D'.<Guo!A7e\LG&V&3A7T(J
<_cRnA7KClE.3\%Odgu?Chmm+EcYnsE.*4aIW]UPFao:9LPBr#K6_6KEd!M<UQ'DFKS4MaA79=jG%jrG
6omFr;H$t<Cg(";76s4&4_0.rJV%Z<>$t`\M19AG>#+h,poOZi6pWIZIN17KC3Oo7:K(4m838ab1.5>Q
?Vs`e;e''<;c6@Y7Qs.,;c6b$>\\A&H\QHA=BSd3?=-Z'>\IkcBjk1S@;9q:EH,E$DJ!$R?=A)=O*G)I
DJil_;bgIt@9#cU2D$U>5se=I=@btH2D[0E0N)_'CM[*A85;riF_FoK!D#EMXT>N*poA+$77&X\*&q,:
GB[Xp;cQjk4?,/R79j8/<)c4`@pNA=;bohO5=.e;;-I(-C3+HBKPt$s>$>3=?r]d(BPM3p@pNPQC35#H
EFNX$Am/>GA9WulG%,0'DIZaH:Kgn3<^o&-0JbRQ6Q8g&=\;:N3&WWN1K/%)CMI!A8l&2kFD4oL8jE'N
qrRtAk2uL?#QbGW+:/#K!<W,u$NgP9!<E0$#6Y/1!W)jE!<E6'":Z7f,rlYA!WiH+"U+o,!t5YJ%0lt?
"qDS-(Dd8b'F=gB&HrC^9huf7%20B[!W`9'!XAf%!<3,r!!!&u&-)e1!!<HF%0QS0q;q_=k4l\->#eKq
:/526HA@8l8kr5^:J4G];-I[Irb39\C2Id&CN+H9DeWlqD/F<7EclMJK91Ce?uR3:H?OFH@!7N_K6hTQ
H[:R3P_"F%G(F[EAo2R8KS4gQFr"q!A8Q+!CMe#j<]ifG:/+JkCg^XL9)_'f6"GRqF`h4h<b,`[H?*e)
>#+h,poPK+6pa%#5#5?nE,eu@5!VFt3B]\o86&Vi;cQ^p<`rO+='T0=>ZFa%=]o'<?=@8MDgZ.m:0_LE
@:<;7@sDm0Am\SNAT`?JCMR$\CL:"==C5ZXDJEZi@q/Y6;d!1(=BSls75?ba5!;))=ADUX3rUrJ1Jqq#
@:E.u78d&hAR8A/83ZdMpo=Ef74LYg5<hqJAoM`m4$Q)!5Wh4t6V:BZ='&F"='Aa1>$YWD>ujs(>$>9@
@K'_$Dg5ki9jMIF@q&V;@s2a.Ame\PAor?HCM[-aCLC(?>[V/]DJ3Nj@q/\8;d*@0>?Y<$75?hd5<_;-
=\hg[48q)G2H4I,@U`8"7T35kBEVaF8k;2@X8(iR!!EB2()I&H!!*-%rW3-%!X&E'#QtA7!s/K(!sAN+
rWXY_,ROMO":Y\C"p+c0*YT4p"Tf#<)^QsF&HW1K"T\W+"UYnV%K-M;!rr?(!WrK+"8r5t!!!)r!"Ar?
$jHq;!!!$#":>;6rVur[roO4Br8n!pr4i5='j=U5C2/'9D0CAV=uJN05t4RLA7T-J>$PfVF)GB!C3"cY
K7ec!E-?DMG^47=A9N`I;H%UuK6_`]A:gD1MKNlJJV'AVOa)1aE.2Y->AA+j>$>cdDea#p:h4`dD.%C:
A7S&&>"VCM<H)J\<_c%O8kNe0Jp)!J>"2M&A8#XjAm/A9BR'?f!3H+#(f!k%84GaC<b5Q>@:s:F.PW_9
2a'T.;c!B`6<7)n>#&$t?YOItDeicd@:<bZAmA21@<#O<6=,(YA7SqCCl!7W@9cWECkdFdAS+kGC0=)"
<a8Tp86KG-<)ud[.oTkZ=\`:A;c,A683B!h7U/hj76ELe4?->W@p)r*2agPB<)cjr84Z$GAGNA)X8Ym0
8k)'G=(YlE@qo^M.l9.A2a0]0;bm<a-rj;U=\i%!?tjRuDeilh@q0+^AmJA8A8tmA6Xb7YAS#.GCkm%Q
@U2E#CM\ZQH=^\f?YEV88QT1t8k<,q?!(*&5uV;t>#/LD;cGY?8j#3k79rhk76idk4?QSZ@p2u,3(6bE
<E3(!8k;9KBDJS.jS\0;!!`Q,$3^M:%1W+5rrN&u%KZ\8!rr?'"Uu4]'G(KOrs/N02Zj']#8[LC!!O\`
#mg\7&3q0R"p4l;&329f#mp\9%0HS1!X&N(!!<H.!Wi?%!=&]/!!O&;!Vuct!s&H"!!E?7#6P&,!;up!
!Wi9#!<EN&k52n)<a&X0>$5NQG&hVBD/E<:;@6rE?rg9.<E<"#@/a\PBkVF'Fa]$jH"h>JH?jdcKme2l
H@BpLC3YVaE,]lAKTV"EJobITKqOZfH$X:GG&M,0Dg#M\8l8c&CMR<XA8c:"@rHKt?pR_*<E2LS3'fi"
1F,"^<Fg&bDJN`c?tNnL9jhmRBk(mrr4`<J^VK`K.Rcm"8kMZS<FK3?>Zk/t0gAT5:IRZ>7Rf[8:K(+h
<`E@/@;0^nAlW,NranZ8DJE]nASPLO<b-;c>[1WEDL6>ACgU+ZDi9'dA7\kJ@9Zc4?"$Mi3^?57='/3e
;d3@+:g7C(:,G:;6prsj/i5@C-Q=WO77:$Y=B\g)85<,\7QjLO;ccjt>l(Q&XS]%57S66E8k2l^A78nP
>$OKO6rQuZ7Rd;G&OK&a;cH[s<F&j=BlR`s<+0M?Ah@b8B4kggBOOtDB6.`l?!q/[H>mh>?rLu^M1'GV
Am&DL>ZXs3A5>9K6V(-Z/m1t>;d<I.;I![,:GkI>77B-m/i>OG.3($178mJp>?b#u9iP"[5#5Hc<Dch'
q5XPYjo+?=!!E<(#6b;1"9&<#!VcZo!?qRG"9Si;(C:BL"UteF#n@UW#mq"K"Te`3)@Q]M"U>\e((qAo
"T];O7OoA`$3C>8!s/N,#Q+Q0!<N<&!!*0'!W`B.r;Zg!oDf0u!s/Q+!<<*#!WE'&!s/N)!X&;]!9F$l
'iA"4>%(oXCN=QCC/n8/6tq:+F_"MO8e+KoAm/>9@rlg9I=d)gCb8A#MLpG'KoM+RNe)>!I=?m*G%>32
MMHe=LQ$OoLPDXiKmJ#_E,BQ8F*;k5r])\r<Guhe>%DJdD/*`u<E;FhEa`BN/J'-O3ueMXA7SkE?ta:l
E+iWe8i'InG'.hCA,3n:XURNa77^3P=]f!>AlM/d7m8k4Df9&^6om@g4%<1?8O?6\@:EndDcp1+>]adu
@rHX;GBdn3AS>gsEFDdEAT`!/E,fu3<cN,BIVr_/?!LN;?XI5R8H(7u0go;P;b0bg=BS[(<^oM68R>.d
4X(7P)_Mg-,#_E278Hl`=^4p$:HU!oB4G@W>#MK)!j/T-riQ'u01/2u928Df=^PWM=@GYA2cjp9@T,]W
4$5Vp<(]YJ;IF$EBP_Tj=Zp&3C2.6sFoHS/CLUmhC2\*%;cI@NEGBH4FCnToEKGTdAnG=S=C#<B@qJ:2
0*sC&?!UB$<*EF.r`9Lt7Q3nG:JX/#$QU3A(D[-";c?:X:KLV">uaZr4=Wd2@q&hK;>mNqWW&sqk552`
!<N<+#71J1!!E?;'F"U8!!!'!!&Xc\#6tYK'E\C:!u_^^#8A7&+!;+!$4I@X(C'sA$6'cm()Ins!Z)YT
.h`6r"9S]-"U,,<r;[-(!!EB)!!*0'"9&B#!!!2r!<3*!!<*$#!s/<""UYJ="Tnf(joFH@k52n,Cg(%8
>&%bdCiFH9F)kbkBR4r?rE:4LC1CX[?sm\hG'8.[Jo#7%Ck7"_H@h'5M2Hn+HN&L"IWK"2DKZ&,If=pg
H?OmlNe`(,G&M&(>#nX-?r&pL8l]85BOk7XD.mZl;ajV_>#nR&<a%sK2E!]J)D4HI9288\;.+?XA7JeD
Aoi-=H?3lt^\b,I=@c%F86/_k=Bo-<?!^Ds<+TZD9)_?i:0(1d:/=Va?=@8SBaJTX=@-,*BPD$orcM=d
CgUaiCMRWk:fCP-Anl-tCh7$lCNsi5@:<A>;G'AG8l%T)0g%j!<E)jf;d!(#:-gd)5tXO377Kg,-RpT#
+;5tZ2E<ra5sS4N<`;gc7T3Z(@qK(Mq5sOp$<]tm4%`RR='8g;#[_"K;+=PtAm,()!`)lqrD.0.?XmSX
Bl$pT6Wn2<BkD+#Ecc><?ta:jCM@6U<*<^CBPM?uAn5[mGB%>,@pE#28k)6@:I$`l4@N%H<DuIg>#\R!
6TIJ"8k)-:7S5Wh.k<G"'dPau4?Yqr6Vguh;c64W<+'3GAmbUAq5X_]k2tdfjoYJ]r;ls$r<3?*!!*E5
!rN$!!Wi6"%flh=#71hN!Wi?'&.B!T&H*OL&-WF?&/G]Z!<E9-$4ROY&./XS&0Mbu#6t>3!VQKu!W`<%
!<W?(oDnI_$j-P3!<<*#"U>8>"TnM^qnEe^>$=R&Bkh<uE-$&@F(A9bH$O9*=or)GA,TdGBl\?=H%(?\
DGk;&IsuZore_qZJoZ0gJqADk@qKS$G^Y-pJU)BiJW>M7F`q_=Am/27>$t)^4ZuD<@;'=d>%DGaC11%0
:fCOu;H?e$7PZhZ4t7F&77KmD9iFqtE+rip>#f*SF`htND#(jCXV4l/839@C<`E4,?X@)H;aaVtAm,+(
(J7J%:esk^:K:_1@Us1h=B\!nCMIQqC]8G_FDG2oCM[d"?;OBq=^biSCM[cu@Vfh)EG8lj>ZOco6psRA
4u"cO7SQi];b0hh<`Vs^2F'T"76s@182hqH.PW%Y,;qJA4Zu+t:0^k!;b0;S?XdJV?!-p)ql:B58kM3<
='&C*?!q#I?rKKpAnG6G8d\-b=&Mgh:JOkt@LQ^YBkgdR6<J#<BkD/ZFB<6dAnu3uBOOe<>%;2YCMIWs
@Vfh(EG8lm>usut77BgD5;Y,X7T!/c<(^(l='&0a3'fo(7RBR58iS7M/M\I`,WIbF5!D;"9jLat<(]SX
?t*SW@9NE,qrRk\r;Zm#!Wi<'r<3?*!!3H5"8i-"!Wi6"%fun>#71hN!WrE(&.T-U&H*OL&-WF?&-iUI
!<E9-#n6eE$OI%L&0Mbu#6tA5!VQNm!<E0$rW;3^#Qt20!<<*#"U>,7#mCD,joFN?^MJL4Aj'%+@q9(`
Dh!e.H"q27E*uFEBPMR:Dd$[^CiF<9G'\C^Ci!*dGC"L`JqSo:MLKSpLPLA&DeNfl>&JJ-G^4akIXZE_
H?4.DA5u&U2EaDn5XAChBk1a^>%;AZA5tc>:/5h.2G-OGA7/S8:-CTnr[ngD5s[[s<GQ8]C2\9:Cj'uT
H#WSoqlN,#;Go58<_u[j;d4!]G@jlY>[1#f8lShtBjF8-;cm:/@:<bZBinJ*<aoZOC2@d-F`hG*BlJ'*
@9cc2:InYtraZLRDJElo@:`eQ=AqUI.OkEQr\QDe6sNbi;GKbZ=Ar-d0c`GA?9p&%3`/XC4?bJQ-QsWX
0/PO@1.58E<*!43?W^fJDJ!/LXo#.YCK"4g6<@&`;HI+<GB[Y#>$YE04\AdW?YNe:;c?h)>[q;VASG:M
79*i0B527#EHH;9?YOJ!Bi/AE<E)ab=^l#VASQ*rBjtRa?sm,975ueJ1,_!I2FUnQ<)ZRb;HZps75Q,O
5@Ho24#p898j>Ns0.A+j,VM#51,;:%<E3+*A7/PM@r>maq5aMW#j(42&HMn4!!<-##m(2=+<Lmk!s8]*
!!iW-"UtS7!<E6F"9Sl6$4..C!WW9,$4.1R',MT,%0[1V(C^TO!<E0#!s\`2$4RXX%0d%E"U+r.pAbL%
!W`<%!!*-%!W2ot"oSE$!V$.#!W`<'!s\u2#6tnK"6Sb-r9!mk"G1T2>%n%]DJfA`1iI\bF)5W+BOFhS
G'8"SC/SSQE,TQ3E-$J]G'7D:Jpr2rI=@$<Q%O.&KS=kqG'SCQ@rhO"#)%b\IWfm[rcU/,8jPHu2DREf
8l&2cAn5RhBPh9i<D#PW<GuAI?smbhE_]@[1-%BR2D[-I4ZlVW?r^37Ad2pbG'8:\GPT#NX_DQU>tA")
>$4a%;d3gE?W^H1<)5n_?t!JT<^BY^>[:H:>[M2_@:<)@Ch[WrB5)L<IrA\)DJj/q?t<kS;I4-TCM[m.
Bk_!aAmo1Z:HC?d/h/8(4?Pbi85iGd<E*+":e!K%7RgTY+@].&<Erio4Wl()/h/=u-Rpi)5up`K7Scu_
=CYcQAn(S<ql9s;?!U'(A6E+8;a4N#AR\eG<E2g`=(5]LAlh;t;dE[3?!UiPDI[0T?YX:iAnl%%IXZ3C
B5VU$?t*b\>u>$GChmj)EG9,s@qP^M.Si,a0/4t+1-@W`5"ejR<E<+';c6%G2F^/@;FXGX=']6!4sMI/
0e4b(&Lf:g1I>/=77C!O<*<^@BP(cMX8D#a&-N+9!XAf0rW+hX$4-n<!W`<%!!3?0"ptD3!<E<+!WrN.
%2/sO!<j#D%LNUR)_<NS"UPhU%0ZqB$3UA5r=B/H(C^fY#7:A7oDnjk!!36'!s&H#!!*0&rW!!$"9nAs
!!<*!#6=i,#6tYE#PmN\^Hm=#Jp;Q^I>;ui@p2`;BPD:%D.I6e>&].IH#d:c?sn+qBl%R%I>ri0Ediao
JpMQ_O.i5(F*`FiH?4[tNdbhore^`7MF`VVJTZ-]H?amH4Zteb/g32Q;aE02BkV=$Df&li<E`R:Anc1,
E,]W<MG?k].RcWc4>%j14ZlMN;FX)J;daE_F*W"VH@'u;^B)-brN.VcCi!Zn?Y=Fg@SfT\:/k4q>Zk!(
:In`.De<?O4&/R[>ub!/=_N(rCL1ap'PqPr@UjY@MfiB<CMRKeCj:2==_[bU7r)mL@:j(]C/-K<0.nCe
/jVcZ-9P:-=^>67:JXAL85W>d>[q#E=CcP<4V/_n2)$d1)Bpmk4]=X*2EO6$=C5EIA7]=aAcAe4XKDH%
&o)6!AS5CcE+EHV8jcBS<`r^3/lP_E8mQ=QAme=q:JYG*<`rX/BQ\*+?YFCpCM%$cGDM)t?tO1iAmoFt
GA15prcCVMFED;6@Uj"^B4t'r1+t7+)_OKF2CUah<ENO3=AM^]8kN&^<aB3@?<Lo_5<]]'2`<HI,TS*d
1-ec)3&j#f:K_(5AnV'Ss/Z."rT4Fr&J,6T"Ul1P#6Ff(%06M3"9SZ*!!!*7'F=sA!!*9,r;moH*tSte
%2KKd$3peY77J4"$4maU"V;^t%0I(:)[?oc#6tPB#n?M,"Te]+"9S`'!!rZ,!WrZ1"9JlKqZ-El!!2rs
"9J`1#mpP;roO7Bk5E&#Jq&8gE+X0CH?jRG<FBEKE-ZJBDf'!(JqA;iAkd,YJV&>pF_uScH@'@:>&J/"
Ec?_tQ%X4&H?sXOIYW]1ItE>sG%brKH$XXSF)Z)8:+eFf4>e`T:/+ViC3)+NE,09(<E;OP2aK`)C3jT-
:J+&62^^X_;c6F\2+:\P;GLA,A78YL@rQC9H$+7QHMkPVX[?o>BNn_??#4(_?WKQi;c$_2?<^]<;I40U
ARJG#=]fHTBjtOSC3=*"<DuFl=CGN@Dh*:R?XdSX?X.;bEGK<)DIH1J<*sHRAmo"Q>[1Do,:YE%.O-Z3
4[D\@?XI&@=B.aX3&)p>2*P&P;cGn@2C^3u/jM`h5W1)M84l038Q/P^85<&f>\ReY@UWmHXo5:LC2.Hf
>uY6KAnPLQ78Hl\?"RMM?!'s2C2.?h<'=DfCMRWo@TmGcAnGUT;bC1qA78b^I!om?@qK=\?"n:uCMIX&
@q/MHC1_'f@:3AH>!O>`1c$X/1-[rh8QT;-?!:B177K6l/N,LO<G5H65W^qU/KZ]56:*st.l^-n69Rn>
;bp"];-dIAAn#4ZB)J_.jpr"5%0H_6"V;"I"TeZ(!<GCf#mCD6!W`H9&./UB!!<96&.JjL!t?1V$3C5.
!s/]2!u*79&d8LI$3^PA(DdVm&/,9R!<j#@$3p_<"9Sc!!!<9+"U+f+q#CKu$3C7r!<3*!!!`N,!t>P@
#6t;;k2lU)rP(gSIW]@=<Gd25IY)NH@:WniJpqukEc68UJpMKM;fcu?NfJR;E-R(WE`taY9hf\HBmP\p
Jp)3RE,TZ=JV&T7KRR?;3`c3"%rZ5nAm%8=1I4;i3C-&%AGprlEbf2n8kLrc(+(@h@!u3^1E6]D+>t-1
A85st>"W1FG#^P1I=6-N?r_/aJU26XG(';'rN./ZBjt+A7TjG=B5CgJ:K(1tCh[Kn?X./YCh@'Q6=!ps
Gp@$<>@_YY?:Zjp4[!.U;eC/pCgg[T>[(EACM[p2DJ;g@/O]SE&78XE;H$.A(FM't0eY@A3)_YJC2%Eh
=Ar!X3[u*\*?He.BLkZA'a>Kl.QC:+=]e3V:17X#02?1o?WKrj>[2&U>@D#Tr2opu5]CFH='%goBkV0r
>tn'm;djKVAnGFVAo)9q@9#['?ZpR7BkUdbDdQjD2Bb7J?s?]EEcc,.?sHuB>[qPcDfe`lBhqMY7U]_4
?sHl4<(Sh`.5j(>0/Y[J;e]oZC117D:-:Tg*"jA90Mc@S8gtP\)]L@j<**7+8iogX@mr%HBP:dT:ISPp
CM$g]@qbe@rT5F@%0lq9!!<Z=$kNL@!!**(&.JpQ"To)C&./UB!!NNK+!1q$!so#C"U4f(#R(;3$6'oq
#6k&."pY\N'H7\pr;cd"!s8T*!VQKn!W<H/"Te`!!!!H&!!<6'!s8H%!<rf.!"TJH"TeZ("9T2B!s]&>
k2lU)rkAoXM1TnnG'A+PI=6loBRXf7CiX]<BP;R@Eb&]qE*uR_E.rmpIsuZfH"gtm9hJDdBi[]2G'7nE
F*;_GBl%a-HA6lhBkUOcKQVER@9$iJF&Otd<`MaP786KeF*;kTG&h;#;c,q<+=\ir:MX?G>=pkI8m54h
>%D,H;-IL@>#T9iJp(gGEdiImKEQpZJptN6^](?UXEA;e@UikU@;0Co@8pB3=C5QC<)d@C?;a[%>Y[Ri
>]4FpC2%9jA5lSt4ZYu"<CJiA@:NVJ?X[>I<ENL2AT2?i<`DLlDIHsU:IJ)W>s^#"77K<k2*F*$?X[MX
@9uo(69mIX(a'qL4]P9Q8ieRH3]]f"4\/LJ83f^D;+a/WCM[EY>[M2XEGf]1Ch]uPriQ.""*A?i@fBk6
@VKLp@oZ]8=^Y`F<E3OF?W0m'>u*dm?#=CoC2%9mAQ;f#5!)2&<(/c@@q/kN@UrqR<`r^6AoDBl=&h^p
DIR'X:.8)Z@7)P(7R]Bl2`Eoa;da-JA7T%I84#[&.2sER.6ps09h@E!4$-&'5"\aO8jc3L<(TD]CMI?Z
>@;/[EGf]1Ch`gJroO:C)\MuQ*<lr]('ajB!WiN1!s&E-&Hr19!WrE&!s95K&.T0K#lt&.qu?]urW!91
#6b26#6k83!Ws#;$5F!R!W`9''*\XB!!!$#"nr!%!<i]8#mUV7pAb0pp&P*nrW!W5!<<*%&.f'I!sK,C
(D@Jo&.R^]roX0o,F!q+K8#G>E.37nIrKFOG&hJ2<`XC+E'Z`hBN\)FC3ar@H9HS,H#R/!:0M==?s5fF
6!@H&DKg\aF(8T]>&]+:BlJ$7KU%%8?rBF-BSL=q>&7tP3D*LZ?tjS'G'SLOr`'#'5qW'c,X"k9Bmk/G
H?jpH3D*IY>?b**;djKgK7nD`IZBDKO-,ZbMLtc@rN-BTE+<a&Htuu%Bmt2>>[CiI?<U8r7:COJ1GhR#
8Np0UAmnqUASl$a:JX/F<)-4[1a"VG85`W#ChmBS:.Ro\DdcXN>[_N"BP:1-3)`dq=?8uT=?eH"8k;`V
?"7AVB37Pk6qT9[+<M^\4]PKq@:*SVBMU9B84Z?F6pX.7=CuJh@9%#dGQrA9H[p6]C](=5X(Qj"@r6+.
CgC^gFD>)gA7T+O;as5eH<iEd79)oB=''!C?"dheAmJ2-5>"pO:J*Jf2+gJ>=^u2^?rBcm8mQ@E<aB!A
DLQ;5:I7$B<H))&8m,:b00;`t:KLk4@qKIY77K^<2'`)D"#<&@<Zl'c?ta+b:+n\"8kDTC6:+INAoDQs
=(ul%GB\@\Ecc*pWuL3`jlS'/#8.[r&H`IO)\)uS#6tD7!<<*),m4,H$ip>.!WiZ4!t#AJ#m:,+!!2lq
"p"f2&.f!GrW!9-'F"U@":#Sk%1N49#6FoA!WW3%!rDs%!X&`5#n-n/!!`Q,$jQqC#n6M-%g!(P'*eRJ
+<DUH,qBoR&H(\h^H.X8G(bO2Jo?*eMgfVcG'.hBA6)]RO`3QO<bPW2Bk_j9DgH_`H>d2!:0M=>?s>oH
6!@H&D0:G^F$4,D>$>luF_Yi6GD2<2IUH)BC2&H@8m6%H;*.ES>%),`F`r([CfXP9>!O\i.k3\WBP;j;
F*W(]@6$t`r`Tt8;c$k;H%^fmBn)/'O,oEgN/N;c^\t8WIrSn7DL62(Bk_^(>[CiJ?<L/p7U^UJ1c.X#
8Np'OAo;$_An>jk>Ye*X8lSM\8i%VI84ZZ^@;B[d;bfkS>]+"O>[1`VIq`Ul68_eDEEYIq=B@a@3Cl\8
<a9'AAnkF:7Rfp*,9S*N0g8Q9C11I]ASOsn3Cuh684Gp3:KV.EDdl^]G^+LYH[^'ZC](=5Ws4#mA8Z:2
C0FkVBl[on@:NbR=Aq[X@sM?;2+:M:5?CouA6ieZDJ!0M:HhBN:JXP?+uMtb;d*XGCg^4<84m0*@TQiB
@rHg1Bhq)U<E=*B4A&a[6SLVp8l&Mo@Uj"b=oLl58i7k;,9em+<E3^A?tO(e:G4h%8P2TE6UFROB5VWs
<XEMbGBe=XI<9LGr2]eY(G$@-',)Z'!t>\Y%0Hb=#6b/0!!!6L"TAB0!<<*$!XT)7$47FR"8r3"!Vl^"
!<WN;&-W+6!"&fA#6Fu1#8A]u%K6>4!Wj/?!!!'%qZ$g%!sSu;%0H8(#QOl+%0ctB$4cb0&-<.N'F+[L
+<VgM,qBoR&`ruRrP*Z-JqJr<Ob\C7I=??YH%CQkE-6SXJqS;\Bl7s*@;g+2H[9jYF*2eJDe*R$AnG%@
8l/YpBQJHJI<osQDfBlKG&i%\LPLb5H=UDaDJaZ/9j2:G?r^3-<E<%,DJXKJH>c_[1He/f3\!F!Bkh[-
D/=$(A6W5G?t9sb@qK7gE.3\%JpMT`JV&oEQ&:HPr4i34?tjFqF`i(OBk_3o@9dD[CgpXXBPD:#@8p30
?W0^(>\.MY@:<MPAR&G<<EiC$6pWk!8P2rfAnbpi?X$c?@qT4WC2.a.F_55`:.8>hA5YQ]<`Vs`6q0R5
6;C]d@r)]f>XC_(0K:[;+>cVh<*ig4r`C(:8k;]P;cHRl;d!@>FEMD2@:<qfG^Fp^F`.,ZrMrD%C2\39
G]@G3C2%3aAnu-k?".J]C2RN]<EW^2:L%1;AnY[a?t*_R>Z4[/<)c:Q4$cG0<FKKRBP(XW?!UrR@pitb
EH*IMAnFt;7Tii+;*IWQ=&27R7n#m7:K^h1Ch?s?67F]M0ejh/8lSl#?!@51)H04":JXnh;H-Ru?"nA%
C1_!dCM\3@IWKUKr2]hZ+QX%D'H7u;(C^f^%0ltA&.f'L"q1qP'*eO=!sJ`+!sAN0#mU\=#7:S9!<NB'
!W)j=!<ic=$jm.?!sAi;#6bPG(De"t$3:,,!s/c0!!!'%q#CR#!XB8D"8;cu!WiN-"9&?%!W<#r!>#>9
%2p/s$3peI&0N8M)B0@fjqb^(<E3OTNf]BfOc"R9E,]`EMMch&LE`1VLN\-"KS"MjE-?AQJqS/c?ugmK
I<'IRBkgRSD.H[ID>nrcIt<3'IXZQcH@Cd0R#6K<G%ti2Chmlq;d*R:CNXAl<D#DM@:4//KSN/l&2n#e
74L`@Ci!s'A7/hFBQe3"?tsV$F`qhHKTqa^LN6RAFcVQFNK/pSMuLISXZAj<:h=m!H[^<aBPC^V>A82$
BO>b5KQ1F7DJj9%?<glHC27Zm>u"^EC1pp^@oZPr:K^R`6s45:BPRN^3b`>@@:a1rFb+[O@UW;>>$+p1
:I7TJ:KV(,6ps'i4\eaZDf0PW3X[E62E2g=<`iI,<`;di79!\t),F%->@1fI?X@SuIs>s?87Q(RG^F[\
F`hg*X^S7l77C*dGBeF^H?<h7?!U]LF)u#&EJ'!c@qfguC1q$]@Ua"dDIHsL?Z0Uk@:E_I=$f\b;as2Z
Bkh<rCM[d#C1^sfC3"EKFD>8q='8a1>$=]g8l&5c@TPue4#9,t1JM7qDK.d#$S,+73$C7_=]np0;bp.W
<F]0-:KUk0@UieQDLHtXEF;CK@X**CG'.hIG5eNBk5G?J!=Bqp,qC8\$k3=B!t?.e$j@G,3>Vo0',(oa
"U##6%1j-U"TS]?%1ECE#6Fr,!!30$!!<Z=$k<g\&.K'T#7:nZ$QCl@&-iFA!WrK*"8i-#!XAf'!!<B=
',UTI!!3#urW3-'!Wi9#*!$9G!!!'&"U528"VN=:+;Y1]#6l=o,p"-I)]\k>*kuZ=H&.62MMdIQMLL%k
Df^JiO+MP1Q'@#HH@:3brc8HiFaA=YH?aU^KS>(\JphrdEbo]8@o?-,?tO+dBk2($F),9)FaegnK7S&`
?tNqcCiaB+A7K.bDej3,>"Vh0C3G8]I8a#h7VlL@:0(P/A8Z*h>$=pCH?3q?F*_tOGB7YRrK.)5rH8Bo
L5(J<Mi.MK'<PMMAoMa0FEMeMF_>Gk>@2/jH#[Y/EIN@V@:j4e@pNGK@UWh[An>O`C2Rs-ChRBc?W^Q>
;F*Q?:K(7m<`<.-?Wg31@VTXqDeiZd:K(1o=C#$/;c$=l>?G$28ifCA<b$#_BgP-*2crgM4@Vk?;-Hmn
84Z-OARASC?Y3_T@U3/Qrd+]oDI`ZS");doE<:*%FoJKFX'K@Mrc&fsFE_bIC2-mV?u't0C1D73I;rb/
BkV!b@/aV7An5FaARfImD/O0'Amo(M?"$Ss5tOjO<`N4">$kZ@;I*aHC2Rs*?XQZ/;d!73=]SI!<**=-
>$=N[7TWT"DJNrR6QA'g:JX5F8lJ\n=&2F\71<@3?s6`AAn#4Z@9ICFH45%9@q9(ZBQ.p1E,p("WrqJe
#mpSI0,bcO)]K4r!WrT;+<V4#(Fq!P#7:nK#6b88#6kMA#mptD%20Eh&.AmL"Tec0!W<!:!<N9'!<WK/
!W`B.%1X$c&-W4;!<E6'"Tec)!<iN,!WrN)#64`*!XBAM%K-8,!rN$#!<E9(r;[6.$3^M6"UYG<#6b2@
r?VFWr<EN9()@]%)]Se=+MWi%R%odnJqAZ2ML'S_Dg@"rNeMe4NfJg>G&q\CE,tr#+EqjFIX[-/KSkVH
L44W#Jpr#V:/+/=78cuT5Z;9*>#%e"DfTo>H%L!R<a/aDD1-\QDeNm$Bl\ZNBMr>\F*W=_G#_R'>'>%3
F^n0S?u0Lb>$G!EI=HTiIY)ukG&M)?NK'0oP_sX,>&8J8Jc:H(^FH@.JqB&1C2@^(EHPi)<Es-RG^+.<
DKpDEARSqP>[1TD@UW_Q?"n%rEBe>`Fa.n?C1qEuAQ(cU2D7$U5Wgki;c?:O:0_+4?Y!tV>Xh=V=BT?M
@9cc4<E!4<BN.8o?=.;[ARS%s01u4P,[sY6:JP"k:.e,H>%hY_ASGpm@:NPDApAQLLk'VV@7XL2Chs#i
riH@)Ee/e$HN%XaDK0c3Al`2L%rQT8De<m2GAUr%?t!>H?iFLj@piVWC34H5FED_HBkh<rBP(1+4ub5U
6:3jm6<$lU5#5Hk?smV^?!Tok8m,>3An,%Fr`:pbBkUL5;I<gDCM%'F7P@AD@UikE5Yk0Y<DQ4[79aG?
AnYmpC1CaZ<G$DtI><2l@q&&5!bZ=brc.q<2Wbr61/B2+&.fKk)[ZoR!soV`+;>.r+<V@*#6b85!sJl6
"pY;7%1O6m',ql5(C^i_&.JsIpAk3orVup#rWNB1&-E%6!!WK,%1*7A!WE-."Utk@!!*6,#nRFKr;Zs*
"pYA6rW!!$!<E*!)$:9W$474S$jR">!XTnh.mPU(#6k/0#nR[I(]NOs^\s$WL4Y)4KS+r#F_GfDKT;%F
H@CHsIXZT`EcuVOH?OFLChn'4IX6$`IY;ucD/3j"ChR?i@9QK"8l&/W:/+JZ>%hturdkH&H>dV9H$Y@$
IK"ZsG&VF]F`qV0Bl@pAO*tkB;DhBlE,T](:0Un9CM[Bd9kep"G'8=cIWopQBR,AgOd_Z"Jq7ugJVT#<
OI6$^!3Q3B")r'nDuOW3@:<,BBl80?DImNtCMIQp?X@5MA7]1Y>Zb!4?YO(XBkhNt>Zk0-<EN4!;bfkK
3]]Dd4ZsHA5!;G9?XIVcCLq']=BK0HFDkpnBb=`Y?=@>H:/b>#CNsMq5X?kdrEL[D5"\@I=BJ?o4]Z-*
@q04gBjtLU<+KugI>*<#ChmBiCN4<8H@c't!3?'?,&h@9Df0N3@U`>FBl8-<DJ!TuCM7Eo?t!PSB4b[`
?!16;/RW:)?YO1kA6i;?=&rI(;c?Ia5s%.n5<qCr5<qb>?sm_cCh@?c=]o9IF)5LgBb=i]?XdMK:KLh,
CNjGq6UE:irEUaG4\87G=]nNp5$)E0@q04gBk(UX<Fp/iH%UZoChmEjCN4<7H%Z*s!9X5!#Smsa'GD/o
"pQ7P"Uu+f*YSki&.f9[$3^S<"pkVA#6P#/"U,>B"UtnS#m:),rW2Wk%flh;&.fE\$3L>2#mqRa%/p\F
#6Y27#6Or-!s9)W$j6G.r<)uurW<'!'*8LJ#6t\L%0m(>!=9PY-9*e-&I8pO#nRmg)C.-<ju0u0H?aCT
LP(82Jpq`\A9*9VMMct-G&q\KJTu3VH@g`tEcYo)A8,aoBOPjuH>R%i<_cOrC&W8eH=0029iXeG3CQhG
>&n\AL&QZLKRS6)MOKQYMNO$TF`MG?CM@X&CP8:1A4fHM:M=HVBNe/2<[)'iG$n]H@!6R3EdE=dG'7h>
FbGF/S!fY(NJ3.CMi*LaW;aOiX`7o`>\.nnDJO'&?=$N9CiFK=CLL^Y?=[h_?<q,YCMI0_<)Z^q<`i<q
>[(cB:IIZ95tY,U@if5X2E*ce3\N-E5t4CO?$("$Chmp&AT`-LG]%VMHNnCs?<g`;<W6,VD2;t+3]e]P
<**(!83TL3;cdC&:,l!W?=.#NCh[<d>ZP<ODKgheK6_][E,g#BG_MF^XZ!5"An>7]EGo`1C2%*`;djK]
F*)2,@pr_WCLpj]Anl*p?XQl4;cZt&<DQn*BNS&!7R'43<W6J2AktBF4pse@0/#:O77pusF)V%o&T2;r
FEE.ZDKC,MDdm'Z?!15-=u'uNCK!;V.R7!6<`MaV77L3Z@o#l[:LmmA@:j=iA7JnH@W$(-KRn\sG&M>>
EcZDWOT):+jVJ71!t#hY'+b]a"U+o1&/H0'&-`@C"UP_H"U,5E&.JdH!WN3"!X/T)"9Su4qZ$TsrW`E1
o`-';"WA'd&.oQb$6'pD+;5Y>,npOe!s8T+!s8T;5S*tp!!<6'!Wi6"!W`?-r;Zg&rWO)F&.JjL!s/]@
'-B4i1ERYP()Io.*]RL*jpJkSLPLqFJq8K+IMd?OF)?)PIWfmUDfpMXF`;DCEcubUG&VF"A.**cCMI6m
CjKeq;Gd?f"[P%(>'b#`<?G+;;daH_G(P:"LPCD3I=?X"L67LRO,]3UJob[@CNKJu-A7M,AlVi*:/b1o
@9Q]8>%DDlDf9?1IW&V%E.W[jIYEQ1JqAc:$]g='L4P,@KS+T+OoE*NX_VorGAqA6CMmiu?XHrEChdHg
?X.&SBjk7P?X@/PAn,(N;c6Oo<EE3r='0$66pX*;4q]Y$.S+,Q7RTX65sdn6=^GNQC]8;uChm^!BlJ$<
G]e:VG]7J+<`<..@preaHY-2E6p3_#6q'g@,t1?q;cmO7>?5'E>Ye.#CM[a"DfBT1CiOQAG]@\<F*VY@
ATN4tXWsl^EH-2AC27U&BkCa\=Cc/]@q8tQ@VKOc?"%,JA7fF`?![G.'i\.9=&3"&Al_>e5sIRs2Cg:M
Am%V&70l4I6;Lcl@qofYEAD?GBPM7#E-c_MG'8(KC1(+E>$tiN@r-I%<(05>5=.h/:J+)L8lJl&?!LH>
BjFJ/>o%3lBPDC(DJX-/FE_qKE,0E9DK'9.HN'rKjq&=F*u=he&JGT["U+r4&.JjL"Tnu=%0cq6"U,,<
$3pY9rW2s!"98K)$3Kr%!=Ao(!!EB-#7qIG(Cq&g$k3X](*t(B+<DX@&-`%7!!W?,!>?a[#m']!+oq`M
!s8T.%0HS1!tZ"Q%29Qk&.fWs+<VI9&/QH&'FGX&roPH?Jqo,BL4Y#.KR\;hEbfiMI<KdTE-6SWG&MGB
F*;hTG&VF"A0Yf(ChR3lCjKeq;c$1`9gCTq>'b$c<E<-u;H$t=EclqbLPAEVJqAE#ItrfANf/mWNeW.,
BPMC*G'A+_Oa:P<<_Z=e<E3I2<EWL9D09c9Bl\Z@?smr*Jpr0$LP:>3LPh+OLPCD9NJ3"3LQVSN)Qdgp
EHcA<Chmp'Am\kI@r,gg@:*8JBPCm[ra-:HAn>CU>#S<t<`N7$:0:V1<^n?$5Wq:n1b("JAm%Sk6q'C-
6;CWh@;BXuE,f]0BkhC(EI2qQrcgPECgU.B=C5KG@;^F';aa&;5!_Y+:ImrH85`T!>[1<9C0XM0>\e.g
C2Is/Chn$4G^+4ICNF`<De=!8riHs:CiFB<E,99)DJEck@9R/UBObO[?"*nLBk(BH?j1%PBOb=Rr_jY8
='8O!=]o?<77':(5<h"U/P0PX77B[8r^'LY>@CuVCN4<5C27NuC2e0=GB.kNGAq;)<E3:3@q0%eH>$5G
7Qrt%77BsD7S-3N>%1]A='oWH:JY84ChdX#EGoT-EH?>IEH#]4G&D51EI%Pa"m-C4(EXFl&.oQc$3^S7
#7q:K#6b57$k3FDrWNH1#mpn?"9&?#!X/T)!Wi]1pAb4$"8Mp9!X/c>&/Q)u&.f9\%Mop-+<)@E+;PLl
!<N?,rW`N=,mj\G!!iT-"p4r/"UtPO!!!*5&.K'](DIDl(E+D;(D[Pu*YT4p(F9"B@D@8UPc9mnJqAc,
F)l>BHA$<H?t=%qKS4;JC3Fc@E,Tf3C11L\BkhHu?u9_'@nKKl:J+%t!WkB2EbK2r;.+?^H@q!4MMd1H
ObAC1IY*?1MiNp^O,o0TG%>-&H@CMWKS+hr@qf[l;a!`F<E`i1?m0?0I=?a$KPX@WBmtVgLR=j$JV&At
Jqo#3IYsA=IUI)>rkCt*BmtMqIV!;2F(nug?!_,\?;F<n=CQ/d>Y%n(@p`JG?W:'$:Jt1n=Ar!u=CY/g
5!;%i2AZ>n05=fm<_ktU>[1iYEHu\$F`DPMDJruuCN4?9G^=d`H$+7<;,^_3Bl7g,CL9n;<`MI@3]]Z"
:/4S\=CZ)\CN")m4ZueZCN+9EO+(k\C1V7%D/X-2IVELk>A!l:/ZWT6I?K"jCM[s(?smDOAo:sN9iP8)
DJWTN=(>`J?!Ui<<DQ@g<`N:(:0Le5@o>BQ5X7Cj)?BgkBOOnB:.%f_?"e.rF`__FFEqb?@VKXuEHZPO
H$FRUFCS9K?"RegDJs;u;H6^t68Ubc77p?M:/4r%B4u(!DHT.e<bZ>gEJ'7!CMITrCN461Blnc;BhquG
ri6Cf%4`r9.gch!(Cg<H":>eG!!!W4!XBAP!rrB-#6b23"T\Z)!!3$""98N*#6FQ!!t>D7!r`0J!sArF
(EXS8(E4V5'*esY(De&6,UOZX)]K"_!<WZ<',)&k"T\W*!qu[9!XB,C&/5cZ!!!'0&/H'<:Fctf%LNda
&ekco.h)ph!!<Q,jrhErOcc&lKSt_NLOFW#H%(3bEcZDMK8YV1?uq!SJpMV=E[GjJF)uAJJpr/sE*HIK
>?4HU*#q4Z>#A0d4]ZB9CM\'@H?j[_L&QZ<JV&W3MMd1OR@'+lL4b/2IYNuIK`-'!GBR\(@:3V[rbr$X
F*W@hMB%:uH$+:ZKSPGCPbF=sL4=8rM2R7KL4jl!Des7h^It\OH@:BiDKU)KEG0*$Anc!g?XI;TDfp22
:LA!WCh7$]?=.#G?XR/GASc'pBO"/$84l?7.M`^T<CfA@2DIX&=]ed5Bk:gbBlEob%<6B1F`Db[K6qZY
Df9G'C2eKIDII$`@:E_H8kr,[<W65I=^>QRCisW.An#1_DK0fAI>iVpEbJfqF`_bKE,K6!>?G#,XX:)j
H$OsbDK9iFEG0$"Anbpf?smJVDfTr1:LJ'XC1q*c?XR5K@/aRQAo)0qBO+2$8kDK9.i9'[=%YhH3&3p*
>$4u4?tj4c@qflZCD(W,FEDMKJUr,dE,TQ-BQ/6BDYmoo<(]q\;cI+0?!:ZLCMIs/C1^pcBl7p4EdWXj
EGoQ!CNO`AFDu,0AmAJAri71()^Hac+;5\5,o6t!%1*IQ"pG/8$5=Eu#64o@'+bKUqZR'+"U,59&.K'W
"8;cq!rDs)!WrK*"UteF#7VCF&/#cq)]KS>1,C3m().Dn%2L39'Di"7!r`0$!<NE'"!IgS&.fco%1*7E
%20Ns)_+9,(D[G`&/uT.)\s(o$3L>2roOd,R>m2ZMiX-fRZW>[L4aquIXZs'L5V+XP^[.mPa%)XIs-6h
JV&K&IW^O>OcbBDCM@HrA6M\p5t4U83&rcH8n_mA:0MIIBObt+Jq8f3Jqo,=KRJuXUQpIsUnX!&O.Dkr
BR,MiKS"JmF)l2CIX-6[FaAguQ%X43R$a"oMN3^^S!B+tJo?+!Ocbo^"`o!9Ir8Hh^NHZ1G^++IGCP'q
HZ3tDD.d?nD/O<8GCY*U;JLW/F_kf$BkhF"Ch[WmFGP?kE+W6Q<)ldd4Z"uS4Z"cE-R(WO<(];E=B&6t
>\7efF_tr9EHH)3I#j><Dh!e-H>@_\Li67)F`227Amo%Q>[hDZAR8hWIW9FXDI774K6q`_G^+[lIsZQY
?#"Y5H[fp?AS#U[9!#.sX+>G;DKU/PI=libEH#c0@qon!E,p/MHtcMoI!p$OC1CskCM[a"BOZ%<H$O@@
>#nX(<(]>42)mcY/h\\#4&o9Q5"f$Y<Dd%6Chn-0CiFB8DJ49TNIGep3K8uCCNkMgDcLCiDes0#A7/hM
@qfOe?XdVeE.)V3DLm@bEcZGKI>!&qG\^SuG^4UaDI@'gC0=.-X!?a^*Zbt6+"Sp%,o.:4&e,'T&ec$"
+"JfM!=gS0)\<Ja%1W:J%1NaN)F,Vp('t$D!<N;p!!!$"!WE'!!r`3r!soMM)\N\u(E*qq,uIGh'J*$S
,S2%]5SO5*)\`qs#mUV;!s]8A$3^YA(DeS8"VNRH,o[aF+=fH',pX$)%3[&E//&0o$4[.<jQ>U>rf@&@
*06/>LP'o!F*;hXJV&Z<LOk&#D0gnhKnP,7M2M:p!/Cf7I=m9.KS"RME'.rI>#Isb:/FPP75cVfBPCXG
=_;2T@:X2&IZ95?KS4o*HA%<=Mh["EMMm@HJV%]=H'jJHIY*0#IX6>>IL(@OIX-6cI=?tNOXH0AG'8Lu
NK&sPIXcs)LQ@(4IsuiuK"o(9Xa#&8I=$<dH$""DAS*)m@q9:hCiaf?CM[E^Ao;L)DJjH:FaSO`E,fQ.
E,TW0B)Z$J=AqaV3]oSl3]B#J+?EJ$83KQD;\Di'=_MPqF`D;;CMII!G^+:KE;jtkFDu#3=@HhRF`_A6
ChdZqB)ZKUBPM6nAS,UjEI3%[G\pr!DuFn`DeWm%EBA/aDe*TtBkqOeXfSRIGBS7XH?a[VE,T?#?t3b^
CM[s6EGK<!>%VYiDf0H4FEDbRG]7Y9D/aE2ChEZP4BYTT69@:o69@+c.j6uS<D#MJ<)Z^k;cm^HF`_V@
Chm]rDKg;IE,]o@EcZ28C0=#<JTPsJCM[a"AnM$V,%t_*AnYdiC2nQGG^""7A8c[8G'@k=CMRp0GAh,/
C2%Huri7:++<M^Q,pa]X)\s+p$3^Y@%1j'e*u>J"#6P;H',2)n(E4=m,n1V+$ka<i'+kQS"9S]+o`5!m
rW)ou%fcV3$k49t(D@Gn%13ak+9EJt(B,6a)AWkq!WWN^)]B.s&.K'U$N:J?$k<^Q$471N(]G^_+;+na
'HeG<+;>7o&Jl6*'F>6Y%1j*5k2a:0O,f]tP_Y!>H[TgO>&T"AI=?m1IV`h>EcZ;BIYNlIS=?1FTp:mr
H#IbEG^=OSF)YYi;c6Fl<DuUd4U*B)@q8b;<W$#R<H`PMNJ`==G'8.WG^4muH>@>MR=8OO;*fN)Ocb*F
MMHq<JUW<*L4t(qDd%4@rf.eWP'U;9E.N\"M2R7?F+&LmK7\]+JWZZ*^Efq!G^+spIW9=<AnYFS86ftG
B5):/BinJB?=.&GBlJ?HKnbLcMi3(7DJ!*Y?Y*eW?XI&97RBC+7RTR*4Y\'=:f0bH7S$'B84Z-W@t&]F
CMREgA7]:`Cij8j=Di_*:/4&3AW_:eBlA-6E,06'Df'H3C0Xt6?Zc9l(OLL@84m-&DKU)CF_P,pC2e',
Chmg5MuKgcX)N9,KRnPkE+W^#BO+n7?#41hBlA30=]o$=?sm>UE-6S`KSbM@IXZ0H>[_#OAn5:W>uO0Y
6:"(069dXj+ZNA!8j5^:8kDQG7:ThUF`V>6@q0.`B4Ph"Am/>TJSItV6T/V=H$O+BFE)88CM@^(E,TJs
>Y8CGrc\TnH=ffA?#+?VF:2ekBP;F*Chda$HAVX%)<MVU+?;2-(D[>b$j-V4!tYnM%29oo!WiK&"VqO_
+"KB47R]`s//&<l"U,2>#6b86!VHHm!VcX/#6ub$)A!Gb#71_D#nS!^!Wj#j%K-86$<AE!%29`t((_#a
%29Ej'Fb-H!!O>@+;#nG$31&.&/-!%)B0+h$k4!er=AuU8,hWo^OqE$Q&gTMJpi<4JqA/pLQ@gjNIuCh
Bl%^1JqAZ/O-om2-CBdQJU26KBjbIcBPD-j?r]im:/Y"b:.n2_Chm'7:0M=FEcu_Rrd$2BJq8]/H?s^W
IY</nFaf!mEcYr&H'*uALPq4RO,o!@IXQg"KmnMtJr>M@L4oqcH?4.NH%_'4L\u`/KR.]fI>3cIrkC.h
D09rLH#IJ7Bl802Cgh%!G_1NmDdc[H=Bo<OCi4-7Jq&5uItMujCLpaN<DQOlr_tRK:..0*5!_Lu5!(hs
=BJ!H5"JXQ?X[JUAn>RdChn$,B4bU]C2Rcp@;0Un?=-]-,A):FF`DPJG^"CNASGgnCN!p%ASZF1E,]]1
ARA_QA8ZL3EW0b\CMRj"?YX4mG^o^p0WT&4F+&:LCMIR$GACr'BlJ9IJTYm@=&`=.@VTXqDKgY\I=6Qq
G'@_6>uXd!;ciru(0"'u4?Php6U!^s4%`XY7P[,!<E*@:+(](sBP(jkCN4*#An#7bDJE]kBl7Wn?rg'8
H?=7KErC2/De<]sCMRj&C1_7%F)Z)9CM$s_@qT\#FE)&1Chmg&Amf7dE-Hd1Wtsh1)]C4M'+b]a'-Iht
#7VIl1,9pc#Q=c?!s]AK',)HC/1W5%1EIYM$3L>2!!*0"!VHHm!rW*&!<NE0#mpS<3!g--(D$o\#6t\O
%0m(H'+G*K!WWNQ)]KS4+!;XJ'FG9X&.fNb%LNad)AX)%&./RE#72%^)]/D`+VP1d$k*mo/EZ'V^P@Z'
MLou#IY*TLPa%2fNLm/LR!rukA7fLhIZKMEKT;F[O,&XRKS+`"F';a1:An@)@qet05Y=aF8kN6'Df]tp
/Oa&fF+]O@I=GX8Ck@8+MLKkmEd<7gIXZT`HA$s#Fa8ChK9)%PPa.VhEd)\QJqoDJOcG?SJq85eHA@6(
Ee94,Jp2d*K7n\lA9rQ_MMM2G!NgGBFU2bkC2.O0L4+OMGTMX-Q\0$X;c?XpBm=lDDKp_XH#n+RDJj0"
>tRXA4T.f@:f^"B1cdc_3]K]5>@1Yu+uW5'?Z1.?C2-OC=DVf+F_YMq?Y4(iC2%6cAT)I#@:j1kDg?SP
I=?fd?XdMWCiOZEH['[Q)/O)#>\.npBjY_"FDG?$G].G5>>\sCG]e!)XT>JArcBW*@VTRlFbG-jGBS.a
Pa$`6>uO^%<G?Z$E,KlPFa.kGF`)/4Amn;(1I1n2/Q,Y>2DmQ[5!(ku>[1ZF5UABc?XRerJS/^n;d!jO
JTPR;?smM]C2.Hp@:j=3DJ<QlBQ%g4GBS@^JSnk*@qKOsGBS:VEcGo2AmK"gEG8frEcZ#+CNaW6Bj=VL
Ap8?9ri6(^(]G?c&-`UR&0En^.j,lS5&"Xc%0QP0&.Ka)(D@oI+!DF>*to=t$3g5*!<E8s!<30$"oSE$
"b$Uh+#467!!*-4&2P77$3^S>&J,B\$3^bM'+G-P$ksBu+<E!_1D9os#7;"Y+!;jP)]'%s$3LVO(C^N[
)]B7m&0;Mu%0HV<$6U9'jlY^@LPq(JJp)QkJrQ4`P`CfbSuSfYI;i_-Bk`!TNJ<+GR?!;^MN*7AI<op;
=ogf_rE<W?C/mPc8kr,R8m?.NEH=l,7::.VK9)CLIUQc(JqBDJI<fmTH%CQrIsQ0]K7n\tH@:I"NfT6d
PaI,EG'/+_LQ@IXO,A[DJU29]LPL;!JW#J=Fb5U+KRIfLH[:a1L]5$tXDrB(F_bK#Bl&$JI=D0?!f*/1
!eP)jr_jP5BR+iADKpbXG]@kNDf09#?:[[D4oIoX;H?7D1H[ib3]]l9>@(Su+uN,%?Z1.?C2$FA=_qo+
FD,8n?Y4(iC2.<eA8c=!@V'1iDKpANIsuue?=@8RCiOZDH[0aQCMRNeAT;^'?Yae+Cgh+(DJj,m;J'JA
GBIm(XUV=NEccD=@q]RmG(Y0jrc]E<Pa$`4>uO['<G6MuE,KiMGB\%KG&M84Amn;(1I1n26rR)T2)[Q[
4Zb_s>$PEC4s`-`?XRerJSJmp;d+!RJTGL:@UNe`C1q?o?tXCqBk(aiDJjZBG(+plDI6m`Anl=0GBt6P
FDu#2AmK"gEG/`qEcc&*Cj']6BO+JIAp8?9ri6Lh(E483&-iUQ&0<e\/,gY05&"^d$j6S3!WicP*YoD1
1*@\U)]f\,%13:7!!**%p]1<rrrr?$(BjsV+#4<8!!*05&2G.4#mLP>&.f9\$<dT>'G:i[$4IR]+<M^W
/2@kB#6tSI(EXbG+<)(-&./OI(DdJ`&/uQ""q_mi'+>!E$47jo(?Xc@^j^leJV&T2LPh"NLPCJ7LQS*s
LNRWSCi=HELPCA.K)UNJK7nu1Jpr#hB4O_;@:3MP>?Xon6rdc*>$><EE-chE;Dr'.JUrl>LNRcSBPi3H
MLg(rG'/7bG&;&9I>=&PK6)?jLPLbJOd)*"L2qTdKQh3XHA@61K`6N<I=[$(IX6[-Ne;ItG("gkIt!$'
MMm>j^B1KOD#S2gDfKc;FEheED/XKDKnXMT?WgK8@V9\"CM7P`E<^?!E,09(AHZF?;a!SJ:.IoI5r^ek
;,9_R:/P8-AQ(lm@V]b'FE(_t<E*+9C3=<(@UW_[CLL@J?>+>-IViA&CN4?:G^FmgL2^I1ASts[B4Z(%
EGkbk$#"*mDJ<^#G^+0+@0UF[Chd[$DZ4eXXTGP<CAquUDfKc=G'@qFDJsJ)H%^ij@UNAB>[hGfE,0-%
rc&<aDK'B-BkCmT;a*\L:IduK69$nm<)6%U9iPD1Alh;t@V]b'F)bZ!<`N=<B67p$@Urq^CLgUO@;'Y/
I;ND)CN4?9GC"[cKQ(:1Ao;*^AS,q$EGkbk&85itDJ<^#GB[t7@q9:fCha,fD/OH9FT/<Aj:2&!)AEu(
)B9k9((q;t-9*t$"pG)1!s]5N((^lcrYGkT',D,j%13=@!VHEm!W<!6!<WZ9!WW6+&.fp%(Bt*G!<Wc>
)\<AU#940a#6P#2$l:EE&d8UR(De#5,qCK+('P$P'*eRB$47Rb(DHcZ'+>Ed'+G9^+<V@&#6t\I&.T-^
'E/sMjp$T`F`qnZNrG/<L4OVrFa\pqK7nPlF)l;IK7SK#H?XOUI=Hp%I=d'%IXc-M>%D;VA7/G5:JFPk
F)Yr4@odN"JpqloLQ.@ZKQV<UDfBQ:G(P!_GBnL`Jo)K-<H*\WTqI9^HA%'0MiNpfR\#:QIX[/n8nMU`
rdk9*K8,DArdkl6L67UOH#I)2F+T@9O,esPNgQ3-F8]N0Cj:8QHZ3b2Amo@jDf9N)?X7#FAT)?sBk:a^
@;0IoChRU#CMITc=\)Ij;H$=[5!;%m:L.4-=].[oCHcNJ@;Bk-G^aO=?=$i@=^tlVAmo.\ASGp_6pt:"
IZ',+>@h\lE-->OJqAbt?"n"q>Wbq^C2@[%Df'H<F8fu<BlJEGDIcsI?X7GhIs60WFa/LiN,W68@q'7u
H$XdUCLq*eBPqa,DJ3Ed?sdMaCMIQs@q9+aC2Rj$COU#6C2-pU8lJ_e;bokI5X%>,@9m#>;+=i,Ch[Eq
EHZPSDIR$_>[:NC@qoUc@qK=eCKa.q?#b:LM0!!8DK0Z>GC"glL2gL5BlmWC<)dUIChdm*E-H8;Chd['
H?sI?>Yea9CNP#LF`;GHJUr[p"pP;:&0N5E,o.$u$3g\C',2,o$N1,3$5=$\%1<(>":YhS&IeXM":YhB
!s&9#q>_04"9JZ+!!EiF%0mF\*ZusH"pG20""sla&.&RH#mq+Q!rr<((Fr!F)?^B\(De&6,r.8?(Bb0V
)Zp'@!=fYQ&/5`m+;b"g#RqOq,ngRe!!PFf&0!/B*u5e<1,;D8KRn`(KSPGCMh?;+Jqf&8JU;]aCNY5[
JqA`<Nf&RHLPCPAMN!=GJpMBD?qsVu<W$#/Cj:)@Des-2LPCA)Jc:<6LP:>+H>dY;H?t@"IWfRFB)Q-H
Ee]U=Q%!4`JV&H)M>iV?O+_h+H6RNOBlJ!3Jr551I=[-%F)lPXL5h4JKn=W&JqT#CNfK'VNrHd9X_qoj
Bl7p5F*2>1CM[s0E,0&t?W^`QCM[g+GBe7LEW0nhF`heGE,9)j:/=&>7RTX684rkP+'<&^>[(<1@rZI'
A8?+$DKB`4AS#+L=_2/aDJ<T`=U\8*:JOYkE-Qe[Bi8:9CB/MVHRF&UAS,L^>ZP*6?#4Y$B4u("Bjb7Z
CN+NCE,TQ*Ci"!3H?a[VFa3nf+KKBqC2%R*FEDP?ASZ+$EH#]*An"nPChmj'E-HMJE,kkr$Z^?2EH#`+
>u+6\6N'=[91hfI93Gn:?!LMZ<+BoeCM.F!DJjE3C1_-b>$>NOEGfK#>$=m#:/=YmE-H\XBi/79CB/JU
H7*oSAnG^d>ut<:@;9n%C1qC%BjkF^CN+H@E,TQ(Ci"!2H$=ISEd.M`(?Q8A&.K9h)]BY.#nR[a(D[Ph
$3gP9r=B,J+!;L<(]G0M)[76#(D[Ph"S;[&!XT&5!s/N/(D[Pg&H3=G(DIDf$N:,5$47R_%0lt;!W<!'
"Vr41.h)L_r=ArJrZqRf'E/=f#6Y)1!sK5T'+G?]((CHO#nRjn+;PY&$4ma^)^HOK)]Kp^jlX@@Mi.Id
!eZ8V'5rPVP`:EHE,]Z(HB!u?IuTtfRJN-YR#?iQF(8-I77BL78l&W-rb2FSJpRE>8p>lEMM$>*Jpr2m
Jrb>/E,0<>IZ]YFF';a>2GS"%FbPR*L2p=5JpM]cLR!aSJqAYsEaWj;F`hJOOb@aqH%'gH@rm<YNfT0X
"ce_+NeWGjNWP)uO8clrXF556rGEKiEG/TpDLQhLBj=nG:h=lqE,'WPL4Xl)JGjpWK6;<P?Vj'U2E3NU
4?Z5<;cHe(Ch7*b@q'4rFDY])CMIToCjBZ->Zb*CBmk8G>t@LJ.R$m6@;l-a$suD-Ch@3fEIN%PChk,1
?X?K4CLU^SCjU&+?Y3qX<)?k<E-Z\QFEi.VG]7g)GQN#4GlFfIX*J`-rGEKiEG/WqE.)nKBjG"J;J()r
E,'QJKRnQ!I/SI.JT>jJ?rB<X3&icW4?uMB=&i=/C1dES+)H%?D.mTuC2.6pG\Uqu=^5WSH$+(784kro
5?CoqDuO\p?q+F:An>IlI<9OHCi3]j:L.aF@TdMnDI6d`&8GTP;IOH^Fa&"PGC"IWE-2)'!d&X1ri6.^
-6!p&',D2s$j..W.ioH8"9\f-$6C9)%N[Si1AWL)1E.8E"TeAu"p4o-!X0,Br<F)M)]B=t$kNjX#7r$e
%0HY6%1OX+('XU9!s/N.'`JjK"TU"S&./^K(FpFC&.oQ["TSZ:#6k5@,ngFc#n7%=!<j,P+!;UE+=/*P
(*!5q!ZN7)roPlKPa.K#OcP6PKPsk6G*.E'G&hVBCjLklJpN$%Knb>ERZs&"O,&==H?*b1A6Mq28d@d[
;HdI9DK>_q!HNGaGmAbLMOKH\H?gTYF)l)6BR4r]KRIfJ?r9?i@:3qpIY<B&G(#$hH#nT:M?\ikKQVHJ
C]8?OG(PX-LPCM8F(8a$KT2@dP`h)_KS4o.JqSc2K7:VN^TDs6J:`2oEH,l#6t'MPDe3Eb?<gTDEH,f+
Ci4-0E-d4eIX??[CM[Qg<_u[b695E64#T8g85E#b?iF;M?Y!b\A8#e%Jou3IAn>7S=BSU7Ap&!)>Ye-\
2F(#5=^c#^DJETpDJ!KfCNafBEH?#+@8L'4?X@5YFE);>Df&iX;I43cJq8H!G]@V=CMRa)D/aE-XKAV*
I=6KoH$=7JDHoV?A9i**@pr_M=_8LjEGB0'DJjE4H%UNnH?O:EChR0U;H$1Tr]:?E5=.t;:0D!(>matP
AnG[hC35&JFT,l=@:<;B<G#c`DJ3<N:I@*/:JY/'Bl7g$@qT[kAmfCpF*)D@DIR*R=^b]F@r-=.EH#c3
?rBp3DKUM_I!U!VDJj7hC]eNnDe]3O!9X82.5E4m(Dd_e!!``U'FG'K"Tnf5(DdVi&/,]m(*kji.jZ;S
&J,9Q!W`>q!!*0*rW<-(r<X,G&0!DE)[ZlY"U+r0!=B,P'+>!>!#>Y@%20B`#7M7P#mCkZ)B0J/'*\[B
!r`?*#7qjk/f,9;&d8::"VMn41Fjao(D@Gn&J,Tg().5=k2sFCSt2dPR>m5XAj'jAMKroSrcU/AG_1Ns
H?3n=EdEb;R@0+hH?FFQE,KW6F'q^276s("8m5D+@q]RjEd_qBC3G8tVj*EtF8f\`BkV1'G(P$YC1Lj_
>#eBs?u'h31Ok.>MMHM'E-[+lLQ@=JH?s=:?ug=>KS5DTR#cuC?sn#2PbFbAR#6B>H?O@KIX[*!E;mTa
XaZ(^Q&C6=G\^85=&a<S<EoE10k>*:C1UaS=C,QaLk:5'DIm9d?!LQ<>[L5h2E*HI0KM`q:Jb"j='oWI
<*!LHJsCcdIV`Bj;b'kf<+03OAR/>8;bfkQ5XA1G?YX=pG]e";A6`_bEH-2EEFi`_;,1G'CMn$7JqA5d
?VaI(Ed`k(M1]qcAn>CX>\@biAR,5:/ZX;TL67=DG'@_#10%=rAl`/IA7K(]Chd]u?s-W>Ap&l[JTl!D
@UihP=^>;Q?r&sG2Dm6G4%`%>;H6at?t`nK<F]otOaVXm@/a(p=&i72@r,a_=&W$n8k)*5:01h9C2eB=
EG/ujAo)I*GBRt<Alhr-?X[_fDKg\`GApqc:LS3iLl$n<FD>E$A7/\VBlR`jri6^p.mQ:*7PZ#-&-2b4
!?2=H!s]&G#6kJG&.T$N!WiN4+$_S:+;5(e#6k&.!!W&r&-2e5!X/u9!WiT?11)O^&-`%6$3C5/#6teI
"9JT)qZ&DR"UkkV+<)+(#m1JI(D\)4(CCKN!<<9,&/,^"1GU'g"TSN+(b.sD5r0Gi$47"A":P_@(CC9D
jq5@nSt;jQR?!;ZA3=O?MKiiSrcVdoH%LTrH?*k>EdEe<R$itfH$+=PE,BQ5F'qa476s+#8m5D+A85gl
Edr.FBm,,rVj3KuF(8`jBkV4'G(P$ZBk(a`>#eEu?taS0IYWrAL3e/bHA%'/NJ`L;H>$htF)umPKS5AP
R#cuC?sn&2Pb=_AR#6<<HZaCKIX[#tDuRKaXaZ(^P`(-=G\g;4<*"*P<a9/6@7Y!HCM@?d=]o'BH&.$'
G]%,%@U35A>[1W24uYAW1,1g^8l&Ad<E*:>?WL-9Dh=7(IVW=f;c6Up<FKBRAR&22;b]eP5XJ4(<*j<R
E-QMEAn>4YDK0Z@F`:o'<)ZLu?YaOsH%CQmE*lC9?ZCOQNJN1/Bk:mb?X.;ZE+N>SX[K4<LPM"KJTZ0O
;_qERF(JEY@q0%YA8H$qAmnkH?YF\>K7S5aAn#7Y?!(B<?r'!H3&WQJ4%`+@;cd""?YWtM<F]rDJWYD0
Cgg7@;-$[t@Uj.b>uag&:J+)D6;LTgC2%X2Ec>W&?"RtoEHZGCAnG%A:LIRGDJjTLJTu-A:JYA<I>Nc8
JTPU<An,4SBk_Nu?2gl:jXWS]>t-Rk+:nPR!<O/G!X/K-'a=sU&.JsM!s8]6+[@h=+;5%c#6b23!X&W0
p&GX)!WiB+%Kun7#8Aq#/1V;:rW*6*!<NH1&./R>!W)jT!<ioA(*FP3$46kB',MH+)\rbf!<E0("V;=\
+#>Yq('O[<"W&[Y7mJgK%13FI"To2C(((3Djq,:ePa%`'MM$S.C//_eMLp"NF`VSKIt*'%IX,d6>%qr!
JqSc3K7S2hCMdp0F*_P$>$><;<FBW[DJX0.E-6_[GBS7`N0AjFD0'lGH?j[SBkUmbCKa>&:/4DS8m?"E
@q9V0If4[!IY*</Ob\DbJd6I:F)lSRHA)9X$]fm_G'SLhNfK6dLAlK"G'=+:KS>G<ErNg%Xa#;FLk'Vd
DIlj4>[2De?t!DKA85jpCM@B`84Zcd@r-%"EGfQ%@K'Cg?X75D7S$'G84HBW=^"p1?!LfRBOYI`D012A
CfjtOA7]@]?W0p";cu^P3'KMf4$#u7<_uY#rb;aQC2.I!E,^/DC&VoL@9NhA?Y3n]DZ4krH#$huAnZ(,
G^FmYAn>O^@V0LrG\^[cX]qiLI=-csFDl&/=$KtrFDGAq?t!\_C2@["Am.i"=']<PDJaB4CL^jX=B]*@
AlhGo92A/K:K^k(=^#*:@V]Xe@qKLuHu!P'@:Nk\An5:N<DQOs8j#4#5<BfH4%WLT;H.%=BP2!kB5)1$
E-cM<Chd]p=^YY:AcQ`JG8>F>A7K4bDKg;NI;ie3An,=_DJs`7@/d2[jrQ$'4t@Qd'++d@"9TSS#6k>8
#n@FW&.JpJ!!!''#7qO](DIDc#6Fr/"U,57q>^j(!s8T,"9Si>$jRFN#n\++&.epI#71_D#6b/0!!*/r
!!WK+!<E?6%K-\>%1j9j,o7$i&-E.>"U4l4!#,>S$R$)e#71eP+<Vs\(B+Xr#6tSL'Hdqjk2td?Ko1eO
L44JrG&:W2G)(g*IWKRYL4Of'H?s'r:/th4?uL"5KSO^\G%kZ(F)ueK?uKt0G&MI$G$B$/EcZ_`KnkD7
H[^Q^CfPM6MN!OJITfo5:1I'X2E3f_4ZuVV<^]AWBQ/!@IYWN#MMmmVF,,O=LN[`[EcH&FK7o,IO,JmI
F*;kUKoUh3F`hkVK8ttVL3ij6%BXMjFaJ+BAnGIS:1@]]E,]Z.?sdSdCM@NpAPbQS6rQlV>[1oZE+*0T
<E*=4C0XP=>@h;M?2e81?XI,IC2Rp/E,0'"Cfsk.?ZgI4G].:e81Hf$4Xqp60JP:95ZU<42FUSM?>=1o
Ch.[2Jo>"9E.W(>?XI,G>\7nlFFSLWF_kDnAn>k*DJ!;_@UWthG^+XUAcAfPX)<$"H?!Y2An,"?@q0Is
DJ<NeBQ.a$C1_'U5<hS8:/>/$BPqj$A6)`4?sm_T:L%.<@pNMQA7K"T@:<ngDK0W3Anc'b=[c_=F*)SA
Bh1iH5>aZr/M8h91,D3t7Q3:r<F&sFBlRm#FE2qN?u^-0JT51-?sd8HAoDR.IWogSCg^dcAo;a/An#4Z
BlA3>HuN]sWuL17)]L(>%13FI!rrQ2()@Ml"pGDN&.K*V$3C,+#lt#+!sB#G(C(3E!X])7%0HS4!t#89
"o\c+"VV(M',)/t&IJsY!Wi?*)]BY:'+Om?!!3'!qZ$Ttr;[E1!sK,C(D$ll)_r*2(D\bB#Q4fJ":>hV
)CusL)\</X$47Fg'+"jJ#7V@i+=\-6k2ka?rdGE0JqA8oGBS"LGBS.PG'\I]rH\flD.?s]@q]RdEc_53
(Nst>D/"'3IWB+4A70>)G&M;9BPh^,IQr^ELPL+gF+/:TE.X@.Km%Z_BPCII<^ef#7UTD'>A8%[8kMiY
Bm"B6CMdm>JsqUDJUr]2IY<?2IWBmjK8TVi&q4P9JV&Q5IWBa\Jq8?0Ngl;krkAoEBkh?tCi!Wn@UWSO
@f9a7Ae/HaAn>=P;GL"a<)lh'?Yj[tCLLXT=]8^8BjOb;;GLG1@9d&?<*<I2Bln<8EFi-WC11OVCOU/=
@:EYE<^]AG2^]t3:.e&L<Er-X4?c57@U*/@=]fKVJot[@CNXQ0DJaN1?>47nFaAC_HYHDcCM[m2BjP@^
CMRU.H%pfkriHO.BkV3rC2.Bn@q,^M@UiqZ@Uo@KF(f/t?s6E':Jt1n;.*dHC2@Bj=^"m8?titJ;c?Is
Bk1LR>#ea3?"nA!E,fGi?ts1\?>Ft,DId6d<EDUY7Q)_F3)<.=8QK+g4$5_s<ao??>$>'DCk?\>CMS$1
Bl7d0BjYRlD01&LH$X1+?u'RrEXQSiAnGgoBQeNOIWYRi!9X7irX]5>$3pe>#6"i."pau3('Od@!!!$#
!W`H.&.fEY#6P&0"pGG>rW**$!t>M7!rrB$!u)1_()Ibn!X0#<"p>Jf',(TU"p"f!!!*-'qu@'*#6P&0
!s0#F1E.VI&.fcp%20?n%0[1R&fW)B-7'*&"V;4Y)[urX$4maW*ZmBn)ueuK^N+73DgI%bIX-L"G'7D0
Bl\ZNG&VMFG%jreE,TT0D/4HDLOODeF)l,3F)ueRE*HL3BnpkAA7/SNCMSBYO,Aj:;JCE.JqfDWI=>@0
E,ouAA4o$:/QR.>EcQ;GA4fH`7::FP@nKHrH$Yj<Jpi,oJqK2JTo=&AK7f$sOd))qH<#!@LPCJ-DL[+r
KR/]?TUhYQ^LXHQ>?kHFDeWruCN3ck;cHh)BkV!]?X[GE6rR>p=]eg/AS#jq@p`SL=]Jg9Bjk7=82X=c
@o?6#85`PlBm=oGF^IF8Ao)7%I=u9J85`]!?=?bm0I%f2Amo"P@:<%p3]Ar>:M!F#4?Z,DAqG8DBPM-q
DgQnkFC/a#DfpDUIXbou?N+mPD.ZsdC3a].GBo+&M#OMKX']+;?"S"hC1_7$A7JP<<FKTT@pNPQ@oc#s
?!LQ9>$5HLEG8oj?t!5>?sm\Y>tIXH=)h_I;boq]=]oH^G][t66<@c8CN+P[L1k9l;dEa=@T,BF,U>fj
@UEJP@oGHN2`OQE;c5_A7V?=aGALr-Anl71H&?]OBl@p3H@:3jAjp/-E"$Vr=__VpDJ"*9M2$caX!Zs4
!s8Z5'FbKX&/PQV!<E6*%1EIE"pP;6!!*3)!s/Q+$47RY#Q=l2!s/W0%0m"7!$D=Z#6=i*!!*-&%3?Z3
)[-3C#nRX`-92JD!!*0*"U5#*!!W`6"U,,9!W2p!$3:2,!#Z(M1*@,:%LE[\,pl/%"Uu.[)^R!b/.)@\
rY>nT#m1YH+VP2)+@\OYroP!2EcH,?E,BK/CiFE6DeiNO>%hYfDf6;0EbS]eDJaE?E+sH<KS"]!H$4B1
E]S,]H?4.CF+&1LE+iZlBP;jUIV`h=E-[+hKS55CIsu6ND/sZDE*u[@:0M@FD/4*2?qsHi5[\bOD#RW<
D#Jf-It!'2R$jV(F+&guLPh+OO+MFuJq8AoEcZ;BG'\UlLQ7O^rkE-K?=$uG>Zk64=Bo0;>usQ\85rVm
?!L]B<(Khh=^GZE<FTBSChdKm@q/hP?<puN?XHrABOP+M<)-@k<,$Pj=BJd4Ao;O)DKU2=Bj"P@?=%5K
:II</86&Vl=Bf*,4?bh`:LR@-r^d&krb2^SC2%R2JV&f&?Y:U&E,g#FH$=%2A8>sq@pWMJ?=@DZE,g,L
IB9QQX']4A?sQt8=]\m9?!UW+5>"pW=C#3>?WB]s>?G6G>uY9DDJEotAn,=Z?sd2KBOG:Q@;'+T>ua["
<E3aWBj"SD?"RtmDJjQ?C2$jS>$kWK>u*mS5>#$X>$5-<:I#:P4>foE=]n9f8m,<rBd@G.Bl8'GJVeJV
C2e-3FE_kOCLC^hCMI?d?t!JRAnc4(GC"Z9WrV;\"UP;6!s/N+"Tnl/rW!c9!WiK,"U+o,!<WB,$3L>7
#87XY#mghArWN]5"ptM<!X/u:!sAW)rW*<7*t88Q!s8iC'FYWg)^#V"!s/Q."UYD1!!NE)!s/Q.qZ$[&
!Wr?$rrW-.(Cglf+#>ZA)[-Wc()Io4+!2$t#nRXW#Q4f7#7:nU(Eb"RjQ>U>ErL+^A5ZE-r`U1QBl?m)
5u(0_E,]W1A78t^C3kb\?up@?Jc:6(IY*/mF#RKIKSG8BIW'7MF`1l&C2/$SE(*33LPh+MMhHe;Jq85g
BlJ$;G'7qCD.$@I?smM]?rBlp6!F8/!H2`P?k$:VH%(3oMNjX$To*f<reE(YLPLV=M1U#!E,'?;DJ`Qr
Jpi)sK8..U^o^pM?!gJq6q0d@85rMl5q"TS4qURq?!(6-:/Y(mAT_EV?X@M`rbQ:_CMR3_:0qgXEHl2%
?=RDJ;c6XsAp@Q=2HY$CG]e(EDJsB-AR8AA>\.>P?W^H+6qC'J;cld\5rphn?!grC<_lIc8m,b@BkqjA
L4tS0>\S8!EG]]8E,]r9An>4J>\%#@86ftDBe*q:E367DX'oCE?rKB\77p-D<EEEl.5jCR:L.:0>#S3o
<``mT@o$K>CMWoc6"t.N@:2l<DK0Z?Bj>(V@U)l2=''!X>rXfHE--;EFDbu4CMRNj<*`dA@q8tM>#.RZ
9i"\j:I7B02+h:b?sH_2:C9ZsAnl$qFF8[pLE(>?BlJ'3DK0Z8E-,i*AmJJDB3AD1?#"+gC2\(jWrV;\
"TST#!!30&"8`'.!sAZ-!<<-%!X]kO!!NQ(&2+J)&-W4;"VV[g+:SDV#6k82!<N</+9VZE!Z)du)]B>&
'+kc_"Tec.$3pe>!X&?#!!*'$qZ-U!!<WE%!"8r9%1Njf.l]RY)ZpQK(ISlP(D[c*&.&[H!X&f3!rrH8
$k3X[(?Xc?^NOO7C1LaV>#esHE,]i$5tXmI>&7nbA8Q:%BPDpXJoH-eML&rWF+/30BGP?(JpDZbC/nbZ
D.$@I@:3koC/\#OO"--GIsu9YKnY25IsQ-UCNFZ?DfBK,BP_Ku@9HT1:.eo;CM[BsH?OINEW1,*H@CL#
KS4YfIu9,;IsuirLQR@@IX-6`F(f5pFc2$1KS+sW^FH?q>?k3-:.RoD:0:b+?:Zk65!DS@<Dudu>Zas*
C3sc%BPMX#<*s!H?iF#;<aTZTAn"e/:fgdq6qC'K=^b>s6!\b\F_YYp@;]t$DJEfk?W^TD?X-i<<`E1'
<)-"S6p<Y,@9?W->@h5Q>[CiK@:a.kDJjB(=DDu!Dea!$C2nT?Bk_0j@U2r4:L\BbF)Go6riHa4@pE;@
;bp"X78I&l?!g2^)*:&I8m,1o;cm=.<E<j\C0bLdF(SE[?tj$J<FJs:C1_'e<CKeh>#.RZ:JY/(=$o;_
G'7tBC0P1cDJX3*ARJnK@:N\N?!16/=]na#8Oc-34&9?h=\i:7A7JnP@q0%_Bl@m,Ch?gbFEDG9BkhC&
H?!Y5AnGO]<E2h("a+g(DJsFlWs.Vj!sAZ+qu?g#!sAf)!#5P:!<E6(!W`?3,nL1f%2oQS"U,>=rW*?-
"V:tI#6Fl+!X&?#$j$Y8!!!0F*ZGRu!sec<%h8pM"Tei4"Tnl/!W`?(!Vud&#6Fr,!t#8<"9nc0!X]AN
rY$7Y!Y-.f'FkQ]%MpE-%1NUN#6b,/!!aGZ(D@JrroRG"G&VD7A7/SE<FK]^Df])J9285cD.mHjCi=-(
Bmu1rE.3:qH"qA@Ir]7<C2%a?H?jXK<b#o\?rgH>?u1"$;,VFqNf&:7Cj(MdKS4f"F)u/<G&hP@CM@KC
Ci*in>#eTu8mlgYCg_4.G'@nHGBJ%SIY<B,Km@H^Mi*1;IXQX"Ob\C7H?saUCMR@$MMHt?K7s6=6*4R#
>ZFZs84l9G=Bo*<82NCl5"JgU;c6_%=B/=5HYZl#C34&g?<q;P<E<.#?Ya4b@9#`m=BJ<e8l&5b@9,Wi
6!eh]F_YVm@;g(%DJ<Wg?W^WE?<g`<<E*('<),tR76We.@oui.>\.>Q>[LrK@V'7jDJa9'=D2i!DJEm!
BQ8?;C2.<k@9ll59k&6bEW0kTXXC/Z?!UK09hJ#H:0Ck.?qN@?5<hbD<Duh!>Zk*-C3jZ$Bkha%='o6A
C0sq?=&r^EBP(^T7T*Al:I[rO:0D+/6UG.)GB@S6=_)GhDJj0"?sm,E@p`MI>#nX+>#e?k7RfU(9k.=/
:L.RB@pNJP@Ua"bDJj</Am&efF)G`,BP;C2E;jMZAn,7N=&3:IEH,l8DZ6[?jp(tj!Wi3!!WiH+!!W6"
!!E3$&HW%9!W``V&-E@O)[QQL"V(_7!XT#A$4-n<!!*-&qu@i@#6Fl*"X,!-%1N@D'GM2o%1*1A!X/f4
"9\c-!<N?(q>_iI!Wi?($3pe="U>5:$4RU]&ebQQ$l^)u%LigT(F0b*%13FI"Ter2!!aGZ(D@JrroQAY
H>RM"@r5CQ9k8QnF`M"j;GKqiA7T+VDgueAC4Ve2IYNW?Dan>LH>-,^?u:(9CM[!F5YkQf;FXPf>Q.e\
?snGKNJDIl;/Ur?L6%4LF`q21F)u8<Ed)\RH>$2W>$=s%@sMTp9llGSMLp"iE,Qq=F*;D9?t=,'NfSd8
Ec5oLR>uiMK8b+m@q8tqR?<VhLP#N?=KQ1<=[Z(h84YmBAn,7U;*dK34A&LM:/>)/?<($AJotgIF*h.N
;H%1+5#4sW@;8nH6p3@i84l0,5tFU=84lWPC4CJJ>[0NtCN+6<F`h/':0Cq2>?j9t@UWk[<'`uE845X<
AlDMh?$g^9CggRQ>[(QF=]\Bt=_W/,CLLOT>],.<CM[p2AQVi/:2#6,HZa=DriJAbAm/A-;Hc[b5#Z''
@UE)$69d\+;c?If>\[\J=)3A-C2e-<>rYh_Alh2m:0M.B>?OBY2*ac*68q5'8P3#U8P`,qIWf^:>shb1
E,^&DFCJ`U>$t`C?!q/PAnG"/7S69B5>l#j;EeN8FE;2-?!^fA@UiMD:/b>1F`qP1@9m/XJTkmEDffSo
;c?J*JTuK_EGPQS#3H6p!rr?(rW!*&$3pb=!W2p.!<E0#!tGJ9!Y@++%2Ka+"Tn`*!=Ao-!!EB/%0?V$
!#l@u*Z"q]!!<cJ(*OV9#6t52"U+u1"U>8>$3C#(4okrj!<<9L)]B7m!sA]."pY22!!*02+!;+""U"oA
1*@,>'H7A\!<E0/1*n4c(D,`jk.c%H?qO@%?smY[$YEpZ?r]ro91i,jB`)fQDf:5iKm!B?9kmF>D1m%G
DfBlBF'rBJ<b,B4;GpG$E,]5`?u9b0MM$=rE+F-FKnP,1IrB75CNX]=EbfB'DJa0+EHlbF?ts_$E,'f]
I=?'PEcQ7#E"co"@q05!MMZq2IY!*0Q&UNRI<#^:E-$)DLm3gTJV8^U^Bq#N:JX#<8l&2]r_j,":..6+
3BBK%<;^!">?boiDII-fAl_)t=`.YI>?kZH>u"-U7T)cD5s[h4>[1#i:0C_6FDbet>Z,'MDf0H.BO"b:
=^bZE?<:-*=BJX-?=[YM:0(\+>ZPQ`BPCRQ-!jnb?!LW6<`2gqATW'1Anc$sFFSOSEG8`b>[LcHEdi.Q
CMn(iXVRsH:JNu=92A>`<)cdo:IRH/4?Go+<W$,@>[2)jDIR3hAlh3">&IeL>[:iK@8BZ\7T2qY6:=1:
?!U5m:Kgq9F)Yi!>uP6LDf0H.Bj4h<>%1lI@9QW3>$P67?Y<tR:K:h/>ut`aBPCXT?XI2I?!UN5;,^M-
F*)15Anc$qFFJCPEG8cg?!q)NE.)bJCMmtfWr_;dq>gEoq#CBqqud0*!tZ^k#6"o:!WW9('*\I>!s]#6
r;ZfuqZ$X!"TAB8!s8uN'Fb-H!='8P',(od!s8N)#6"f*!XJl1!WrT4#m()6!X/Z.!Y$7\%0H_3"X4'O
"9JW*!<NTH)\<>c&.fd3*YoP$"U+u3"U>kp)]B8$'E7,$^N*=S3C-)GA:A7j8ifF16U=IMD1-kRA8H=-
IYrSnBP:dW>'4tMLOOZ#Jotd+;a"N?BhCut?uUOBC.`#`H?t$`F)uACIOpA.JTZ-WBkU[aF`qqNBMql=
?uU^UQ'?l9CMe6<Jqo5&E)LCqG'7qFCh[V_@gI42KS"Z-NK0(uOUZG2BQeuZNfT<UKQVm(rkC.h?:717
2)\B2C/mAX3]oG^2`*<S8Qf_A?;js5?YOXs>Z=Zu84[/tHZ<b5Bl%6W'LG,@:MWlk4@DqLBPCL,;J'KO
Bk.*K$>FTtCLL^[<)cIjrF%ff5t+RF>\eJ2IV`+h=^b`SEHPMl5uhH(@:*5@<`N$o:gn6[Ch[j5G^4X^
H[9-e<+0QYG^4XRDII@(riHR/?U[C:2E4Z7C0!Iq3rh8>2?H*7=t+,u@8g<:?tj^s>ut$%8kNT&H?!Y4
Bkh*Y6:*G&CKEV[78I3&BidDqral1FA,Te.Ble'*@UieG<(U/#@q/tJ6:O^G?#4P0I;E%i>%;&XEHGJm
6<7`/@q&\G=&`$p;IXN[Ch[j3GBeFZH?isd<+Kc\GBS:MDIRF(ri6(^"oJ?&!<EW2p&GO($k3@@!X/`:
)[ulN!WE'*#6lIj%1E[W#6Oi(!>#>2!!NH5%0?M1rX&Z8#Q4f:%2och"pY;4!<<0*#6tG6r;[T9&K<5N
&-;n8#6teV)[$9D!XT):"p=i+rW*!'*"rts%2L!-+XJB[,R4;M#7qIi+=.[7"qVa8k2uWW>u+<tCi"Q6
9hJ#I7R]U05uhcFKS+5DD0gGQHZaCLEcZ;FJq8l5H>mh6CiX,u<Fg,`?slu1?ug=&>%r%uJrYV>LPCS;
I=H]jEc,Dt>%r&!G'._5@qK4nLPCR=L2p:)E-Zb`JpV0F<G?buDd[9tF)uMCCNbJgIr]jeJVB#9I=??U
F*`7aKRS&^Df,EerN-Jk5X\^VBiI5V3]AuUr\H>u=^u>f>XV_,A7fF^?X@&E?XmnfFDkbr>Z"U0<)Z7b
?;sZp6p4:O?W9Qp?X@PnF)Q"jE-#o1C2%3b>#S6i<a]3C@9lc-;c$nBEH#o(6rI9#Ao;Es<)l=dAR&J8
<Eig;@9cf@EH,Z!ASc.#F`1o,@9?lJBP;9t@9m,@r2opu#s^jH=]oH=5!(k*3#jh82FUeZDJrfL=Cu2X
An#4V?X[>PC27p0AmJ[Z<*<X/;as\m<DQCZ5Yk`p<Cg2!?YXe(D#SBFDJ3d!B4"e?;G(#!@:NbP;,U@k
@W?C,EF2.5?"[beCh?[J79!l)>u+L+?smMN=(H;jBjbOhCN"63C2%3]?tO(dDJ<Qc?!@0,"6Sb-k5G>_
!Wif3p](a'!s]JR"98K1#mq"D#5n]:#7qFc'FFpE!<NE*!<<-(!W2p<"U+o,!X/`=+;Y\,()IVm%Li^J
!s&E&!X8f5"pFl*1^4a4()I,S!<WW8'+kQP!WW9/"9SW*!sJi5!s/]D(C^NT&.fNp'FYEU!X/o>%200T
"9SW+r9!sm$t*U\F)ueD:.n2J6U:W:4CNMhMi2OMBS(hWBkqd9H%Lg.LPLV9H=:5J@"*9ADeW`tF)b2?
:1RmKBPhO#KV"QrR$a=tF*;_QE+])W,\(Y2G^4IQCh[U/MM$A+@6@S0IXQroCLCOSCO0`0:1/*gH@m,Z
CjV(tH"Lo7EI3:]CM\0BIXQKfH>?D^>%@KFrN-E&;c[12BiI5W4?*0p&l3+WFECbN<,?>W<ENU?Ao)F/
rc'c1Aku/Y:2+3I>?+U(?X?2T5#YBZ<*<=*DMWjnJV&Sq?X[AT>Z4Bn:Jb/"A7f=X=B/C61j*_NBhg?N
>\Rkj@9$)u8m#Y*;a*u`AnGsh=_;f!A5l]=?=mt^=BK'HC2%9kAQ;#e8l5GfrMp<%;cdC8BiR>Z4>o+r
2%iYrDK^2/5ZMQ7?rgK>AnGjuFT-7uCM$=;2,@pr@U)l2=^YT+00`B6<E34*=`0!&K78H(K5k:/A7f+H
r_GIO=^brT@p`A<=(HDkBk^@!7U9_AE+;sE9hAK$='%U^?Y3ng@T[5_FCeBS?sdM^@p)rEBP;,ZAcu1%
8kDqYX8V/b!!*-)"UtM,!"fMN*#o%\!>#eG!WiN4#n[plrYGPG!"/Z)#Rq"D!s/K)"U4l*r;dH3!Wj$#
1Ft=;3#;`'#7:P6rW!-'!X/l:#6k).":6"]%1W::"U#8C('ap?!$D=M!Wi?%"UYSN"p,,N)[QNI"U,5F
#6Fr3$k3XP$46k6!!!&tjp]#>^qWlQ?tNn`<D#p`8cVTg76Ne6rbZUiC1(k#F`VD3>B"P5JphliG'.hE
DfBiNI=?KfG&qV@?qOI1A933=A7TV)K8thHKRnGmG&qhPE,]?+G'JLcF(f)p@rm*>BkUL>@s3KYO`sf/
>%)Au?su2Z2+gJK>#AdNF)l>IIXZj$H>mhQreCT6MN)l`BkV0qr4`rJXfSWm85E/^<^]&33]fAd2DHmR
r`NN.<_cb*@:*/98mGV;ChdKl@:EPJ>?kWQBk_-j@:*8D:-:pB;."$B;Gpb2Dg6DID/3]k@:*MV?!L<4
@:a1f?W9p%;I+!C<E)FL;IaW_HX]B685<E):/<Ss.NLW2:Im`I?XI,HA8,anDJ!*YC2n64F`htA<`E%#
r2opu#Xq?]<)HXa4?WU)"@"k&1I_7G6<?rc@U`_K<(UA$C2@NqAn5@Z?!LZECM@KrAn,4S>YdIO;cI.=
>uO[-AoDm8FDbl+@q8tWAmSbA>\%D\Bjt(@2cEX`BjXn@76FFWDf0l277p0J?"Zr.1,1:A4ASR:;IEm@
?tF%dCMm`i?>=J"E,p&CAlhu4=o><&jlPRcrW!!#!<VrprW=8E!WW9+"pG)0!!<?8&.AjP#6tD8!s8c>
%1NXN#6b23rW!*&!<io7!>bb=$5=U%)\N\h#6tD;#m:A3!s],B%0lb3$j@(D!W`9$!=';P,mXAK!<Wc)
!!!&u"VV1O%1j0[!sB)M(D[r/*shuL!<W2]rP'RP;H?Xn:.7H@928Mk9ftO6=].ja>&\CtCN"8t6Y'\Y
F`;4(D/![#JqB,BL&HcPN.#YaA6NANApTS_<E2pmE/K'mE-R%ZGAM_gIXc0WJq8K)E;a/hBQIQR8lAZ+
I?'A\G",A.A9*6)=tU]u*#pjt4\J^PCP%1nreCu4EcQhqOcGfrSr\/?F`[JqrN-Ah5t+%*4uP8Z3?gXV
83JX\4\7q#3_EX_>$,!982O7ACggUQ=]JF(CMS6=DuFZ$FD+o`;FjS[<+UGe6ps=(>]j^o>\.b\@T[>h
BkgaYCM[d&>l@GC<*rB_3^H/:B6\]X@5gJ=;dO6180\cN'GN#L0fq]g=DVkorc&0W?XI\tI!C5KJr"V_
@:<NFXT#@#X"6G$7RKL,3&E]Z5=S7/0f)'b69@8#?!UT9>[g;`;c7F@?<LH4='BEUH$"!'EBSDW?!^H&
:Jt/(G[j0269nguBPCa`DId6[Bm49+=_);aCM[9P:/=Yb?qiaF6:G'mGBemQ3'or1@;AJ-%O;bl()JJU
1d",l=__nprc&E^?smkuG^"^iLNd??@Uf89"6S_-k3E!_!sA]-!sS`*!<Ec:"9S`-!Ws#G,T@Hr(CM/j
!sAW)!!**-,mXAK%g*aZ%0QtM#6t;>+:Se^#Q526"8r3#!<rB$"To/U+[?;3!!30)&G,r)!Y?%]rYH+T
"U,Pc,p4ru5T^:;"pX5NroX0o3_iOQ;Gp7Y5tXaE<a&6]4\o6[8kN9*E,9</F':k?A:\oCCi!g!DLmA$
MhHk?LPLb9E,T8j?t<eo)Nf/B<DuV2MLKtmH%^?`CjqCmI;F(XJqAPlrEpg_F'qU4;H@X`O,olU78m,q
Ee7M!/K"d5*&T`>8l/H'JqO&X%u,RTF+oa=NL6*(O*PnlEr<]NXWTem76s4'2DmTY5"8(,0JP^]6975"
>?k95>[L)[;c.=7@pE,<<)d%:CO:,?EH#o;F_P)b;+OGZ;e:;a6ps@)>]a[n>\%_\@9@5gBP:LVCM[g&
>Ye*j:/kLp4$#Ys=_`5+M.8G06;q3+8k:-=";DY%0/,FP6<S)@rc&HfC0t=cI=$3kK8=eb@:<O@Xo5:)
5=7n,69dGP2EX&c7S#a"1dFZ"4$6&=?!1?:?qN:T<,5uL=]na)>AJ##FDc);EH-)7?!L?$:K18+H=B<3
69\[rBkUdbDI[-YBm46(=_);_C27*N9i"Pb@88mG6:P-nG^"pQ3($#2@;JM-,811r(Fq-p4$c5;CMj&j
"`S3a?uC5rH?OjjL3@0>@po58rT<DG-3FAP!WrT+!!**3#6Y)0!<E96&1&5.(D[f')[uoP!<<*#!=C+W
r;[?1)@[)X#nmOJ!Y$7\$j$\4&-)h2!!**(qu?m&%3ZfZ#Q=](!<iH8oDepp&/+sY%i,WY"VW4/*]#T9
+:/8X"oRN]^MIt*=@Pb32`X#b77p<L9i"Yj:-h-??smMUBPV-dChn3:G].P0?sn"qK7SW,KSP,%EbfK*
A93?RK7eA]C3+]QLOk&'JqJN#G(,*nIs$$gJq8MsDIcdKD0g5<D.Hg\CNFQ>AkPBT3B/ql!!ETT77LGp
Cj(D^IX6HrKnkSIQ&:HNIXQd!Jc*:]X^GL97lN@N.kNJ12EF#c4Zu)'4u>)[:/=bc<*<-p=BK!?A6`A6
:/>2&Dej0+DKBT%?<LB1;I=3TD/Wl_<aTHTEGKB&CN!p$@;9[oC1:^hChmfp>#@aX=_1oA=].cu;cmC6
@8f6E1bUI2p])'7*B#iK=CZ/_Bk;!rDK0fCIW]dKBk[K]r2opu,[aYD3&i39/i#1A4$Pkl5XJ%,2)RTo
:K(1l>#S4"=^toR>@%5(*a`>oCM[j*E,/uk>$4m)?u0UqDdudK?tO.nCMIHs-#[L3@q]aoC1:glChmfs
>?"']>%V,E>#S$l>@:iJ<'3#q0.ndM!#>_\3&jN5@qodnBPD@%EH68OFED>5B`;fFX8V/]"TmuirW*<,
!<<0&#6kJ:"9&9'"U,SO&-W[[(D$fTrW4#>"VD:Y'F+X?"UYeW&.f0['FbKV%200\#72"A&.o-L!<<*%
$3^J5!<<-%"U,)2m/R_"#7qFU$4RX^(E4GH)]K@u%/ph9k5E%-Oa1=r3>Nhl2E!Z[5uM)u>#n*73B0;s
;d*@4Ao)X0DeXBMF)t>];/'cgG'SXjLNR*@rG;spR$ihXG]e1fSX"tbrJ(]3K7\SrH$Y'nIf=p7H?Wjt
;/Ci;L50hY>$=g&8kVc41)^Dk!#c/,4[r1[H$XLLJX)IWJrQ4KITp`BLPCf'^])"HXYP68:+n73)C$^]
0JYLO:JOMN2_Qd@3^QA.:/b8'>[(6=EEup>7R0sS@q0+dCN*`\;uKi-CP.4]AS#=ZFbkKdE;ac$Df9H*
@qK:fCM@R"Ch7'P69nXiDfB]'9h7f@6971h-R]W2p&G's(GRX'5#c-+?<_2oIW]IOKkb<o>AS7tH2OfC
X"o!5:G=F6*@*-c1GUjT:JXPO3%lmB4$uV2:K1J,?!LH@EFE6D771*W@q0+dCiEi\=8c;2COq%YAn>F]
Ee]!^E;abkDf9H+@qK=hCM@R"Ch@0U6UP!lCiBi'?r'Bf6:*ar4";Zn"SMg4"u7qn5?2<-?X.ApI<94I
K5,*l>\n@uFo89?jo4BC,mic8#lt)4!s8T0(Bk!A!"&c/#6tPH&JbTP!rW30&2Q'\$4-qB)a5bg(B#$U
'GM)f#71_L&.SUM$47"=!!!'4',DAfjT#qp#mph<&1]7M&0<e@%0-JA()A"ik52n@@nfZU4[Mb5<D#MG
91r#U;H$LW.S=Af?s7`6Isu9ND.mZuBPV[1#C:E+EcQVTG5ce6H$XpjJpMKZEcQV^JU3!&Nf&R?IWK[X
IXcruH?F:MEcPr+Aoms'$\<bRCKaV490"I'!qQC+!<=6.;J9`XBm,2_LPq:aMMlY$F8<QNXSf10:d.#l
0f(mR6p*:b4$-M,4[DD$0d&MV<)6+rG\Uqr=]n^)<`E1.?Y*PD?=%>X@:j(^An>[lCh6s\?=%>`CLqC$
G][n=BjY:\BkhHuARSqR?=$`3;dF0SCi!ft=%YbE4"h]E!!3un62jgn<FKfaEH?J[F`h2&?*17+Xo#.A
;E[2o1,h9W76EFe4?Pem6:4*q+Zi\(:J,,@C2$gS>5hS2<EW^;AmnbL@;0=ar+7]uCMIHh?sd>VDJNj%
DKg/@Bk^sbAnc!rBkCg^@:*GG;cI1@CM[g$AlqVk69HnF!<Mloqu?d;2F@CC$s$kVDfKlFL3.HG@q#26
!9F(?!!2Ed$3:/-!!aVV%0HY6rW3H.!X/`7"Tei2%13@>$3^_C%1j'Xr<4,L'+bKa'-J2/%1NIG#n7@U
%13:C"pG/3!<E?.&.fEb%131!!<*!-!XBDR(E+S[)]K"e"oRKajlY_&^EdN'A6N/:@qKOW4ZP8R4A&dr
D`ndtE,]2_I\;RVE*>Y;?upJiI27EO<F]QXIti`;MhZt0Bk_6tE,T]4C^Y&uJV',GLN[iNDghV:(O^FF
BP;7$E,T]@JUVccK9UU\;c-1;$h"'.!B*5@;-ILIEcQhtR%0P2Oa:I3^\b,Y<_uXa846?S=@P"u-7:Q1
86f@R%P_3n:-iWQF`gq[2c!1U@P;D-Bl.!@:f1J4EH-)AE,];d<E*.,?!LN7=BoWXIX#jB@8L6CCM[d"
@U)l3=^D#3%;'Bj@ps;)AOJjM3?SXr!"g\;5X7k<=C,?PIY*9*JpV')q5sOp$<L,)8kMNL<*;[G/h\V%
1-8*6>VZmH?!U5mBSghO?V<=R:L[dHC2%He78d)hC2n68FDu2/<E<+(r`p:C=]o$GC418F@q8JCBPVF#
BOY7I<Ef?,%;'Bh@q0G*AOSpQ4<Y%!!"^Y>6UOCC>[_#XI=['&JU1o.:ALpjjo4BFjlQUF!WE'#!<E8t
!!*3)rW!3,"98E27N39Lr;\qa#7M"M&H`"6!<WfJ(E48.('ajA!<WE,"9S],!tZ"o*Z#%d!<`fB&.o<U
!s&E)"9\f0#nRON#8AZpnGr.\$ipG6"VWCA3&368$39naqnFF\<E<+-BMq_o8lA)<3CQb?91h)c4^)#s
C3kbkK77cCF*!"iLAliKIX6HlKR.ZfKnOnuEc5l;EcZ8AH@C9kJq8T-JUW&kHiAI"H?a^O>?YroE"68`
E.3+SF+/jiD,jS%(@;)6$nbR\A8lU2Ee0@5L4k5/EbbQf!5STKqlMqP7RT^A<'`f,3^GYW0/u6\3BAW/
0M"`1<b?JmDeWHI?XI\jEc,c3C1V-oDIm-hDf'6!?X$c@?=.%f?=dhcBl%R%Dej*&@:j7eBk:ge=@u1j
Bj=D.>\RbV?tsXl=[YY6&FBH0#pVl.;-[C6?>Fn4E,TW.?<$m*!3H1%ql:l37RfgB<C0#04$kn[0/u9`
4?G&41J188<G$>kDeWKL?iseSEGtho4(r5@Bl7NkC2\!'@piPG@:<PO?Y4"bBl%R&Dej$"@qKIjBkV-k
=\24kBjFM1?"mt[@;9an>"(k<'(#Z2#p_u/<*`p?@;C15E,9E+@9E?+r8n"@qu?d!!!)Kg*WcZf'GLuY
!!NN>(D[Yt&e,0W%20'P%29Ea#6b23qumK9%1E[W&/#Zg%1NOLrXBMJ#mgY5!!<Z4!!!*1$3^VC(((0*
!!**'rWNE9,p3s:!tu+I!r_6]jSn<=^]$u:9k/666lJ4%;`m3<>!XVf/i>gc8n<3jEe/e$I;a^gQ'@Dl
Ne`[`Pa.M[>&](FF(B38H$XpcG'8P"NfJ[BEcub]K8P;0H?jOUI;)SXF,k<<;eUGtD/FKFIXY[43!K*X
oDfF@>$>clF`DGRNe2:iE+s*,q7lg/;Ed9-4]5WG2A7fE681,W82DA1,:YE03`0L!?>F>$BO#@hIsucj
G]@qZIXZcX86fqH?W(-?An>^g@:O2#G^4(@?XmYcD09c3AS,7ZB2_)_&RTfj5XJF^?WgN@BPM6V:+cY8
!"]f786KY8?=%JnCgL=N<EWT&Xo#.V5<h=q;.)@B'JrfV1GV-d2Ba7k.l'4K<+]WKCMS*,?#"/(I<]pZ
EHct^I=>d#?#+7a;dKB7.qiO*@r?I6F_b`"@qKXrFDkf*A7&ta=$f5]F^RL%=(YiD>%;5ZBh_AU"7-"!
'hV)%BjtFVCNjN%>[:<4?2:Puk5>8\!<rE%!!2]l"p##8"V;4d5n!i,&1f=X+<VIB1+Ok+$312?&-W(:
$4.%K$3peL+<Va;&-W:G'G;?!$jm:E#n-k8!!OGJ!!!',"Tni3$k3[-!"B#>"pG/B+:n\Y"9JW-q<%Rh
"C#&5<F@e$91gfu77K^7;d`?d5V!g7<`X0nG%br<Jp)!LDfBiJJV&Q,JVoANJo#CHEbS]kEcQ#3HA@69
rfJIYKmJ2sI=?WuMMmCPKRIlYD0gqcG'81[G&VDAF)>;X8i7Lili7;<-;&2qCM\9L#'k6<IYWW2qnE0I
^\b,r8k;K@:KBJ;,;(r72E!lt4u>)?'JDmE?#O.N?XISY=^,*8@;0LmDJO$1Fb"70>[Cc:8loA,=]T-S
E-_G0#]FWmB5)$nC2X#n(jKq5?<C?AE+r`jAS>LW>[:]>:HLNc'*A+4n,Nt>*B7;/=BK*PAmT1cEGodm
XT>N*ql:#r8kMNJ=$/Pi0E!j`6;Kg'2'Wnj7Rpd'@om&GCL^OQ>[:fQCMRg'CNOTECKXqO?r]cu?sm/>
AoVd5rd#i.De<ZsBPD4!FE2DFDJ*<[>%V_f@q0+a@pNAK?s$2e4=_*JmJmh!!$E=F?!UT9ASbscBk_R*
Du$F;k2kaek2uRA!!;Th#6Y_G!X/`=#Q=fD"9o;H&/,Td)]L:=!X&Z1!<<0)"Tnf5(D\.m,mY2!$4I@P
%1O!M)\F,)$j?_8$5O'U#7:kE"9\l3!!;0\%0H_7!XTMH"UtnW'GT[,joOQ*qnEG?>$=p6C.h/O3rMJ[
;.*-b5qX-:<E4!jG%u)=JTbl/D]*\HJqAZ-JVoAMJo#CHEbJQiF)l,3HA708rfI;9K6htHIK"^9KSk\F
Ne;b$CM\<PI<Kd[I<BLJF)u,)91h)\"mc4"-72?(E,BB:KR.]gI><K.q7lg/#t[ZY7SZuG3[69V2B=bB
:HgTl,8;b"6sOY=<aB'J@9?`=>@D5^CMdm'&p8>GCKOhK?;sEq?!g`7AT2U6rd+ogDe<]tC2.F"rcK'&
DeNK[=ClJe@:<b^@U*/F?W^)a3[tdFli7P;*BIJ2=]f6RARB(`EGf[iXo#.*8P2TD9ijG=,Vf6W!^faH
/2]:1(G80G?#O7T@:3k]=^56;@VKXpDJEs/Ed_b,?!q#>8695->#o6SE-D5,,]7O4Bk_<sBl8$5FE_Y:
@TciGEG&fmAnb^[?!q&C:-:Tg'Ed\%%j)oU?<p`;Ao)'gC1qU)E;Zd9X8M)[jno)Y!q-*p!u(tA"U,GB
!r`9>"q;+U&eGTn)_2L%!sJi/!!3<-!s/fF(*NT&#SRmZ%1NdW%28^[&g.ks"p+i5(CUNR$4R4B!sJi0
lN$_\$j6\8!X]SJ"q:tW',:9)qnEYUA7T(U>#J6k2C:I\:0(d%>!4GE1Lt$AO)e62A9)X*<E;LfBm+ZN
F)$/QQ%jR*C2-pL?tsFZ;L+b%P`_2qMi*+<JU)Q\KUJF'UQL"SrdkB/M3O6[IsQ/EF)Ynq4ZYPX2E`B6
(\@_-#Q=]6!WacSA8#^rG'7qaMkcc+q7lp2'!/4;;c6Oi:.RZ:4"MC(4[);0r^\Xc"Xd5IAp@WM;,^e+
=@>V96rm`)CL:+VC4:,6?WL2u5Yb?\8O6sCKmnAsIs!)\Ci!m!AR',)LPV"<BkM3sCi=HEIW/t3?!U];
756AH-7U\i*>%iC!<iW(!"C&A;cHe%@:<McFcM3)riH1%rN5st%p)\.:/+>I69HeA0L.ik:]<s#,mGht
;eC5\79!2o?!0Tc3(6nZ@mFg;=(u>rE+WQ\=%YhU='%s[AqYhcH@10^FD>W-AnG=dJVJr>H>.&.Chdm1
I!osJAmo+R=[k/#/gr5+*Zu*f!!*6+qu@0L92ehj>[q8OFE3=nI/0iBjosi.joPPap&Omg$3:/6+9_`G
!<iQ,r;[9.#6teD!Y#Sh('t0H!r`0.!Wi?%#rssq,q:Gb)u^Bc#mpeK1-Rs!,n17o&J,Wq.Ou8D$3^S9
!oX+g!<E6(#6tDO)bi=Bk2l^,jSe69^ERN)?r^3)67t/^6:t0T<`Lpm7X9<$CLggjD0C&FBkgXXF8g1f
E,^)KLOsepEcP\hr`'_38op5]Ocb][Mi3IGH$+:OH@^j,NedRb%#U1-L51G5F`;8?H=?e=!C[dq!;QU(
*#pS">&A(pG(,%*OeMNarN-($rN.8H;GTbO5r0`81c%0Z6:=3h&N=<5>uss">$5?E@9$>r:ga3.(L13W
AT2Es@:!8;6:O@25rrD%J9uWeEW1(fDJ!<e?Y+"mEHlL%C^"s.G]@\@$Ys0U>@1r91c.'J&aKE+'GMcM
86K&"@;0P)H]7s+!3H("po?J[;,9YN68p/?2)dT`6UjKn&iXE7@9QT*>?YNG@ocZ";IEj?@9m/NAoMNt
A7&bE6UjL569AV'I!U)bGB%YDFDb]"@pinaEH-2BC2@X"FF&.NE,9<"?!LiP:Gk!f3"bHV%2K^+3(R4U
?"@YcH?tJCX8_5^jlHC&!<WAl!!`f;"Te])!sAN-!s/N(!W<0/!s8i:((^cW"U+r(!!WWW.jZJ`(]G?\
'+"jJ"UYeW(EaOm&.9F'+;Ye,&-i=?"q'8g#Qk,2#7V4j,tS$t!T`A?k4l[lG&7+b!D5*i2Dm?O5tb*R
4!\!jNbggU@rH:3IXZ<WBQAQ@De*g4GlDsmH?ajeCK""-74LZ@MMdIWLOFo4P_=*uF)l,.CM\$:KS>,5
Q(X.\Fb5?kBkhdHBgGHg<pK_r$p?a31/;e,E-$VnR[]tbpqQU+!F]+/:EhhH/1N,%1cmuh/fR?+GZZXc
;HmC<B51aZ<*j9D>>\X;AGp*SA7oUY69[:d3&F`[Fa&7RBQ.s?DZ3u^?<L0.=C,TWDf0HBMg8`?CN*]^
<ap)K1Hdojo`4^d"UQn;.OI=X>QnJMI>*E6pT=4k-tHIV:JO\I.4cu"/i>aX689HNGB[1G6;q,pAnl'f
?WCNK?!L?7AnV'S'PD/p=[G>42E3TtFED_PEG0<2I;]$l%:N@;=]o0FDJsE1IYi1V@q'4m@ocZ?E)ee[
5=Xr="UQq?.k!U\>m4VOH%Ud,pT+;U!9O.@!=&\q!#$It!WW3$!s8l>%0Zn9"UtS:!<i<,":>GD%0HD,
!<O2G)]pCC$l0X0'E&(M!W`?("UPhV',)od*sW#^('amB#8dL#!!i]0"9f>`3&sJ&k4l\"A8,joC1L7/
4>f#T2?#KD3^$YmH>-8X>%q\kEc5YBC0GP*GB[nIJpM``IYWK"H>$2T;H$b,EeK*sIWf[VHA7*%JqAZ"
@rQ@7r.5K8ObeL9K8Y4qCNFZ0:.@]9k5YiI79*B!E.3[tK73L/poOZr<*3.$"&hNC0`!7[/MTe-AlV,b
86/_s?<^E186ot>@Td,TAS#1^EGK)r<'`i:6:amYDJj6(@9dATE,B?+Ci3][>[(tBCD(H"EI2Y>B5_p-
=BJp=;a*-!1$8NB/2fma;I!jWD?4ThpT=4k$WL,/<``3d2)-U3/c@1B0JZ76AlM)d8lnu#?X-Q18mQ1A
@p3DZAnGCaEGK-!<W5<96V:-]DJj6(@pN\YE,KE,Ci3`]?!M#YCM[a%EI)V>C2\--=]o-C;a33#2#%(?
!"(8:77L3]C34?1BD8J(jojf.joGM^!WW8n!!3K7!r`09!WiN/!s/N(":bYA!s]DF$3^kT&.&[EqZ%H:
',(od#6YA@((q&f&/,9L!s8rD&.oHb$l:3+%Lj*k%KZ\8#6E]^"p"i9)\WhmpuVS<pqIA8?ug4)Cg'P%
3BArD,9S*lrEpaXBj+DB?u'Ia<E2h0IX6<]Jr4l!D1Rq+H?s:+>$t`V)gZs]I<079?uKt0JVT8HP^[+d
FbYO#IX$-eJc:<1MNNL2Ec#Jt<^&Vhk5YKAr]LHcCO1_RE)QGFq5kX<5#5Ki>?FEZ2D6[1*Z>k40MYA=
:/Fq]5u16X6rm)Q6p4RbAS#.`F_,)dCOU56AlV;k:/5&*BkV0e=]/%">\7bkG^4^O;IX*SDJNrtAnc%!
Df0ZDCL1=M<),n<1)oBV$8+%e0go/UE*HR5pT=4k!C'?i?X6o>8j53f0e+7c)]LU3:J4Sd8jZ9K=]\Bg
76jpgAnYUfFD,;jCOL/6AlM5j:JY8.BkV0f>#S4%?"RklGBS@J;.F'SE,00!Anc$sCi4<?CLLRR<D>t>
1)oBV"YMPd1dtRNAoM!\6MIPYjpC/3k2ZLB"U"o/nc/[k!rW-!!rW*0!Y#JD"V;U[#m1_h(((BMr;[f>
$4RCP"Tnc*!s8lA(EahM%06\=().;h#mh%PrY#JS,nL4`!s/)qkPtbf$5N^G!;tsZjo+?8^B/IjC&V:=
8j,<^&1UCL>&7A88lfJ1?uBh)C/\;>BlelIF)#uXI=?6`KS"JqBhi&PCiFH=H?jOHD.mj+G&V8DHAZu^
E,U&GF*`LnMN3aXO,&C?IXZHWE,S?@-3ro<qu?s0.T02^IY*1D^AtG7XT5I$XTDj.<;oEe3\`<.%3[ku
86ADE4%3(D:Kgn0<^K>L<aBNK?WL]ZBPCgbDes#s<Ba/[=C#9BAS,7O=]AU1?sHfGAT_Tb>[1iK?Y41n
Fa/+UH#[b<Bkh'Z"^G:p3ZSCf!!`fQ5se^gCM`XF!3,^n5@@Pm84lE71,BmY,!J4^=\:e<7T3)Y=^#<:
6:sgN@;91X<Fp5bBjtalCh@9[5>PEb?=78TAm\_F<Erg>>p!3]AoqQa?!V,R?tO:oFE_qOG]@P8Bkh0\
?!TQS*X1a-#72P?6We&=D"Ob.j8A$>jSe3B"Te_t!!!*!!!WH(!!<<.!r`0)!X0,="TeuK2%0ou$53sW
$3C2-!WiK.#7:b@!WrH*!s\o0$47^Y!WrN3#6bGJ',r&9+!DF6&.K'R!X&V`!!<93&J4s(!9O%=!9Nph
$[,od79XP,4['ba1K8XGG&gSB3)3soBQeQNBLQ<:H@CNcE)gq6Jq8,dDfpPYA4BsPH#[S;GBIqFDf]u?
F'qXQAq"o=D/ErsA9s;tPae&-R>5p6L5(1uIYV*1.NfVq!"(,$"TTNWBml"rIJ:MU^\4d*@nocW86J85
0bXO7An>CW7P6;W;GpJ&@;Jn&:JYP9DI$L:??'ds@U<>LC2$R):1e$C<aB0C?<g]A?X@#54&]'l@oul:
<)ZY*G^+[lrdkSu@;0\"C0kUq84Xj?'(Gu"!"'_e"99-:<G6VrB_8G#X&!5$:H1sM68LA2!%DMl@p_YW
/jE33<FfTU<B*cMBPD?i>t/1@ChmNh?".P_;`IQbB4"_G@q&kP>[UrH@8B!b<,#iF>$=m(<+^>uI>%TN
")q^`E!^Ju?YOIO8g,&cli7A9+9DNZ=&s!YE+nmEp>u>[r;Zg"qZ$^)$3pb5!<*!$#6te@rW!uH%2/jH
!!O/M&-i@A#7_1D!!!<3"Tef3"pG)2"U,5:"TSN'!=]88!sAN'":?7o.lmSa#SmUR()@A`%2\"("Te`6
+;PCZjoOT+p:hep@:;W.Cf3AZ)#uI=H$+1/3B9iFA86:2JnRS\@![<UE,[s@F,,?uGB.YGIXbls@![-?
BQ&':F)Z)=F)u>08n2C\F_kl2Bk1_"NfK?oR$j@sG(5:%IWBmm>$<Bu)XIG2-RT#s*,'&8Ne`,X^BD?e
Xf\]#XU&?19fGXG5r(/a&ca:jAmnt60/#Fc;H@47CfE;f:1\0X>[0^)E,9?"?<goRC/[#cAS#4J>@CrI
>[1TB?X?Jg:f;%;=BJ^+;G^tMH%:VJJdl[-C2e-,?>=IN8g"rali7A6*WlBW<)mXWF)(QR"g+o.Y,nc!
X&!5$:H1jI68CA3!%DSn@UV_Z00iH7=(GfW<B*cMBPMEj>t/4@Ci!Tg?"7Va;`RQaAmeVDA7AqP?!guI
?V`a];eTWC=^"j);J(,qI"_KM%<,imE,]Q!BQ6X:+W2$e!;QU%+!1Rb(KFFKGAq<kWs,K'X6/R*q;qY^
r;Zg!qZ$^*#mLS3!!WH)!XArA!WE'=$4[^P!rrK?&.f'M":#AG!<<*,$3^G4#6k>6"T8K8!!!$#%0lq9
!s/K($6UE@3;tZ5('b'S()@>_%2\"("T\Z6+;YO_joaZ(jQ?'K-X'ng;aE]%*(ta0F)>;Z9j24HDLR"p
H=Uu5IY*6%I<L'mIXZ<YE;jb`>"W1FF`MPABk_O0-?F-EDf]SlE,U>RG&D,)E-[%iLQ%7UQ'?`-Dg?VK
Chmut?qr9jkl:kf12q2UK(?\NXT5I%XW0l,;F3/r,8<.PBjFk:4Zl87=B]EPG\'fY?"n*^DJ<ioBl7X!
?=-t:>;A`1:L[d??!UK2>[^uE>?bH66sO#6AmnkF:L%LIE,fuEH[^EY:g@UE?<C<7:/3nq&a02t-sU"e
D"t+4XSf3lWrbmh;^=^g2'`u#Bk_!Z:Hh!8<EWI=BQn&e?!V/\DJ<`nBl7X!@:3C?>V\o5:1@[?@9lr8
?"@>K>[1Z:79s28An,%J:0hIJE,fuDH@:3V;I*mH?WgN;:JX5%''K;u.:$4hCAY(,X7t`Vj8S0B!!!&s
!!<Z>"U"]''`e@<%1F?d!<WH6&JGT^#7V=U%0Zq6"9&9,#6tD9"9JW-#6k)/*<cHD!sB/A#6P#-!soPT
(E4JC.k;&0!so8;!WiJp!:^$k"9Sl?roO4Br8n"?rT4+Ao=mh8C1'h'6UaU]JqA&RA85jnCiFHNLRO*L
IXQWqLPh"ML4OYrE,]T+?slu,@;p./I;;kaCO1#<E,]l9Ap/?MJpqKO<d'OYrdk0)M@u&6F&,tSBk_*]
:LdpV4VJ,."mc3n*(k?rEcAhc^[nQ`>ZOT_1c.*O<GZJY:fCCq<ENL3EH-SQC2%ErCNFZAG]@M1AmAPB
<)6:X4&&sb@VJq5/4EWO?<LN<?Wp?9@;fpr=BJ"#H#RP8CMn9CHX/d*<)ljp83KdI?SN#p#QsDn"r01-
@U<<@o<%Vb)-p<>5W(GZ4'$06?rBp)<E<7.@<$:=FD,AXB4u("EcQADCM%0a?<L9(:IR?@?!UrS=[kka
AmnkK?!pf8A7KOoBN\J,A9`'/C27^/H$Wma8lo%p;bB;Q;d_?k"pY7s!!O0#@U`bOnuMWL!9O+?!<`K$
!!NE8&-W(8r;m`:"W%t2)\!5b$kO3o)^#q.$4-e;!Wi3!)?U'H%0?M0!X])5!sAc0!=&iD&IedC!!aY_
rX]8I)^Zj7!!*!""T\T'!<EAc!!WW4"U!iJjoFN>joFNBk4?>FF)5Mn;G^P-F+T!eCLgsfD0'`@Jq8c2
I=?ZlH@CHtL4b/*H>dtVG&;&2DfU#DE,8r_<GMMV-@^JrE*?d_E,]i=Ec68XIX69bH\IK?JobsRF)5T%
?t3_]5o^:@quH6e"qa4&CMS!;r4`6IpqQF&8mb_#83oL3;dX<U@9$3&;d!I7@r,q'D.mWuAS#LiCiF<2
AS,.VC1CCK=Bf*?@U*#06q13c@:O%dCg9S1;d<R6?!^`HDJE`p"_;4_G^+$&?OBn9;GU+f<\tNt$1%Wt
$T(=T=C5XAXT#=%XSAphX"[p`<D#SD8lK,5CL^FE<)d%/?t3qeFDY]*C1_'kCM[s.Ch@9a@qoLW=]o!:
A7AgI=\hIU=8l\GC2%Eg8lJYo?!h#K>\7keBP(gfDKg;?rEot8=&Vmm;cbgn#moqu"q3CY=^,9GnuMHG
"QebL!Wi6""T\c<&-i:9!<rW0"U>SM)]B=t%1W^P$kNsc'GCf\!s];@!s/N+"U>87!r`0"!r`E1%LisP
!!**&"TAQ4!t#\N$4."G'-JD/r<3B,!W`9%!<V?_$j$J6$KgF2k2taek2lL&p:pUA4`td_Bk(XkIXcfq
GAq8(@;U=:H[U?lIt)ckG'A"QH%CR#G^47ZNeMb(Jr>;-H>6G[;Gq%HHA%'/Nc7bm;B]4XG'8XmH$+1L
DfC2cNfT<XIXcBRChmWp?pQ7R&-)h>nGihE.SFSf>$>lto"Xdu4^q`$<_u\!Bkh?p@U)l-:0D1?AnYmm
BPM*j@:EMSAnu4#A7f(^G].2)CisW-AQD2g5s\@TASuL-G[*H35p/d"@q0LoAn#+S?!M,hG^"LSC2.*Y
=BJO$:,O1&$NL8/#4V[!+!<RG:e4,^Dt:%%Wt8`K>?=^"?"n%fC1COL:JY0nAcQNDBdIM+An,=ZAnGgp
DJ*QeCNj]/ASQ7'AnG+57RBF@@V0LtEHb\Qr^%c"<b#WZCM%$`?sR&QG'A.VEGB5r>$5!-<)#7p%1<.<
#4hg%!!"2d4BYTT8mQB+X7PHb#6b22!<E93%LijP"9AK&"9&W-%/p\Q%LNOJ#6bD?&.fK]#m:e^'F>'W
)\WMb!rW*(!<rlE(De1rqu@E4#6u%V#mUV;"9]2U+<MmG%1WOCrrW3$jo>Vf!<<*&'^"NPjoFNBk4-2I
;HdUAE.3+ZH#R;%>$>?KDfp2GH$FU_ItDucF`r1^H?FCMG(+C@A93?OG'7e@C2.I'I<KRaLRiu8BOkU`
>#J@#>&Sh3Df9<"EeK*uJpr#lF),Q*rbMd<5rLSM)%#g5#!G+QG&:YrrkAQN^V@SY^AtA+XUmch;c?q8
An>RZ;bp"V9iYHt@16aZAnYpqAR&YPBk_/h@:<DLBj=M6?Yj@`@9Zn6<[1sc@9dbkKkjXd:fBnN7RTdQ
BOP+M<)I"?DJs?*AS#4M=]GB&#":?u.NoE/nGibJ0h>_U9ht\i"0AW,XS]+"XT#?lWs1m];c?t9Agh8'
>uONj8l&Jn@U`hZARoIhC1^a\@qfXh@UrbTBjF\:?tsFd@pE4:=!M*e@pO%nKPORd;H$+Q77BgSBOY4P
<E*@DDJs9(AnGFS>#kQ)#":C".j>Z3nGibK1eM7]:J^S_ri6%[p>ukHk2tb*!!**&%13FK"9JH$"9JZ0
"pb,6(^plc$3LJ;%1NXK#6P2?!s&E+&.JjL!sAN(#6bPA!u;\5&H)Y-!"oDC"p4r.!<j,M'G(]\$3^J4
!WE/h!;QTs#6Or+roO=Dk2tb&joOT)roWac'0/fuA936HEcYtq<E<*t9jhm\ErL5CJV&f/Df]uEG&M;<
Ec>et8kNW;F)Z&@IX63]Jr4SLKnQ@dH$4=O>!Y&(.U%OODJW]YBR4uJDfU+5H#me=BQA->E+!0cA24Dg
!!!&n!!Z1nBRXl-@.:o4Xf\\sXZ%ms;c6n9AR8YC7RT[55s8"K?X@5N@;B\%C0P%PA78\I>[CZ:83Aq2
@:*8E@;0:^@;C!m7;jSlP^6qM@UDY^.OlQ3De<0T:-hikARSeLAnGCP=]A^6AR&#-:fAbGnGibW5#c6$
:J^nj"0Sc.Y5,3iWsLFB;c@+>Am\tJrC%5`5#5Hl?XmVVCM\$)>[Ur+B4P7Q?!gl@8j#16@piSJA8,^e
@r$0o7;m(+H"LPq@S/O/.j7N%Am&846<.W0@pEGSAmebF<F9*H>u+?r;^hk>!!YYN<G>`6:].6qWN3)!
q5XSZk2cF%"6J\-jo4EB!<3''"V(kC"TnN#!WrT0rW`]?&/u&\"U,2;rW<3*"9SQ&'`eOC!s8c;$3peI
)[-3U'3uji#6tJ1!#?7T!s/H&!=B/=!sJu;"Tec,"U,58!<*#d!!E<3!rr?#jp1#1j6#Lak2uX)!TiJ4
^EcudDhEXjI<'(1>?P-;D0^8IF`1r7F*`"KF)uMIG'\L]F(o1`=ta8k@:<POA7TIuF)lqdOa:PPBPh9f
<E2e/IV`"a;bghKH?*h=D/4*2DfBQ0@q>RH$=lOP&.egL,81^q$O6nG',(]Q-<aPkK)WLb_"#28XT5Ht
XWC#(>An=mBjOh88kDQL=_(rN@Tuf=?Y3eQ?sR8N@K'j??WBu%80^l):JOY\;,^P)?X@SfHY$,V<*<-q
6q0==Bimhm69\4WAmPjI=BSa2?X-i==AVrq:)6be*X`>U#oa?b"U"r8%M&dE*Crb*C]:F9XST%!XT#=%
XSo9iWual*>]4FnBjXq98P)NM>%_>T@U)o@?tNnS@:<YTAH$0I@THH#8kVcP:JUmb"&r3&@O5DjDJsi7
;cct&;bfbN5$2N%77BR,;J'NL=^5-5?!prD>$4a%r_Ei!2]iD:!!sVU&,l\<#nIIM!$Fm*?#8o/!p8Y,
r8n+BjlY\%jp1qe!u):U%0Zh2!!*0.rW`T/!<iW6#6b57"U>5:rX&]2!Wi#q%KQS3"pG/C'I=(e!W`B(
r;Zm#%0HJ.#ltA?"Tec.!WrW*!s/N)!WE'!!UTjf!tkOp!9F%>!TiA@joFKAjoFN9^Au(J^C%_Z>&]+F
IXZ<O@/a=2?u1/gFqnq/EcZPNE,ouBFa&+WH?*\0>$5$4ra83(?smMTD0BuAKS,D5A8#[n@pi;:9k]#m
<`N$mA9rTCCMn$+E,ol9D/<`n?smDQ74&QY!"1"b'*njK$kj9]!%:uSE.[eupqQL(!3H+##tRTlDej'%
?<'c"80(K.ART(Y>Z>';AR\nN?X[APAn>R]<)Z=Z84ZNPrD#1H;HR@7?#=M+APlE,=AVa\6p4La=@>PC
5#Z$)?<LH8=Bo0:>Zk0-;bp.`:c9=%%0-\Q%LrsO"U#,A%L2tR8P36(mB,iX#tmlrDej'#@9-2'8chaj
B)Z9V>ub9?An,+R?t3YUA7fF]<DuL]84lZQrD+>2;-[X>@;^"/AlMc2=]8*b76X^d=[tnI5>rtDAmnkI
>?P6?>[:N9;c?Id:K'4q%1N:D*=`S_"U#,B%L2tV8P*3&mAopB!9F(?#QOi-'G(]_"TnT%!<NW-#8%%=
"U,5<!sJi5"pYGA$3^G2pAb0o%06P9"U,MQ,ROPQ!WiE$!!302!rW**!=B/;!WrN+"9nc,!WiB'rVup!
m/R7k&E`-:qW7e>pu_%['hqJBMMHn<IWK73?t4&!KR\GnBNAXGA8?+(rc:/FH@ga%F_5?,E)o4n9hn,>
7S69N>'GmVJp:Zl;H$t>G&hYCEcGJV77BgWG'._;A6W5QF`r(AAkQ2'?kl^?5sR1g8i8LO2FUV[BkV*g
BkhgEmD&7prN-o"4^<)JDf9>s<_lIg=CuGaBjjt0;,^S$rEiQ6Ao):$@8g02>X^J.4Ztb[2``uc87H^Y
Ch-:!5se=K@pWMI?X?Me2E!Tk@prSB;bBS_@UWhH;`dEC:JOYR5rCJI0g$p:)_*g8<`N*u:fUP+Du$O.
Xm`;-5!WCpE,TZ/?rp*!;-[^NBk_$V7T<;h>lA%X@qKOlDIQRG?!ToW3'KMc1,h9V6:ta.CM[WZ3'ou.
=^tfH?!q#8r\tHN:Ldj==&V[_>@M)U;cGkKrD*Mb68g\5.5F"9/0$6$79<Mi;c6Xt@r1P5n)bGe!!=,T
'GLu[!WW3$!soVM%0ch5!<E6(r<3K4$4ma^"p"c-"SD`t#9+6d$2ac-!XAl4"9eu.!<)s,#6k83!<<*$
#6tS:!U]sf!r`3&!WiT?rT4+Ao&fSZ!5SHG.=-;eH$47JBPCjSFcguq@9-*4@s2m0D/3s$A7T1bBPD'j
@o#6bD/<)T4\AaU:.AZ7rc8*N<rQ)"DLVS2/okc=>$><DD/X?3Ci*m#CN+HGD/E9N:1.IKCLL+=8lA\f
;GC%mBm+Z@E-?\Zo=k:@qS*$3orS4qqQ19>AS,O_?X-Q1:./N:AS+[a76OIF@:!)>=BJO";G^=l<E)mp
4Y]3)=@"Z'77BC!:1@R<?W'>l6igJ(rac=@=A_[]:Jt?p>U*?R<E31-@;/hH6pX"4:0^dn5s[Or76s4%
5tG$b@:*8JBkd1@!3H%!p8dqgramrs@piSB<)5qlH"LYa7QsaJ@prPE=]na(;c6[s<`E$s5Vb]1=[Fr,
7RfU%:L[^??rKPo70-P+ralCB=]A!c:Jk<p>pEKS<`WC1A8,:P77'47:L.$t6:*b%7RBF+6:t<h@piSP
BkdFEnuDlQk2k_"joFK=k5G\q#mUV:!<N6$"saN^rW!0(!=&c1!s/Q&!<N<'!r`6"!!*0'q#CO&"U5,2
r;Zj#%K6\9"Te`(!!!&u"8i3'":#A<"8i-"!s8/r#m(>:"Tnu=%HcdFjoFKAjoFNBk3ThtBPh^,F)l>A
F':_JSTAj@6pt^%K6I3-!EDSf5nR+2@p<,03FIGi?oUbe?puhCramQlC27!U:2PW:KS=JTC3"<:H#d\:
DfTl;Df9H8K5u$@:-N&nIWB+9rb;aLE,]u@DfpV_IKOnOOcf4L!5SKH!NiHsXT5I%XT5I%X\Vo!>[1WB
?X@#/0jfWA?Ss`#<)ddE;cct!6oHkY1IP5>8k:rq:MafB/j)m)2CL[e;c?Xr=@c"I=D_qoDd?+=?=%&P
?<LB7?=$lB>Z_DCDdH^E4u#f-BjXh>r`0J)>[1ZC?".ScC1VC2Hh+9=XS]-dWt&-5?!UiH?sd>7115cC
@/`)+<E3sI=&i:#76*:a2FUYE8P2)u:MafB/j)p*3%6rg;up!#'j4.#5?r&CCi<`X<FK6DAmnkG>[Lk;
>om-ZDdQpK5;H#1BjaqA<EE0u?!UoJ?".SaBP)70HL%U7k2YUdjn\$AjQ>RdjSn9D!<WH,qum6(!!P@d
"o\K(!<El>r<!!!r;Zj"!W2ou&J4a<r;lp"rW!f<&ebom"TST-"U58:!WiH-"Tnl0!XBDC"oJ?%%0Ze2
!Y#/4!sSo3#7qFU$5Xs6pZ;J;roO7CjSe3AjlZBR!5S3@@s)p;G'A+QAl<;cCi*?gCN=HAAkcZAE+DsQ
>$u#_<B`Q79j)1D<^otp?pu\CE,BE+CN!]p<G?btDe`HM?uU%5L3@9ECiF0+CL^OeKmnMrE+jQDMLok`
Bjbb#GBS"JG5ZI^EqmBL_"GJA^\b,8XKAS*oW;Y4@UWbU@q/G'<+/m385iSr?Y*/!:JP.l7S63H<*VgG
0fD0d;cH.D5u(37+['(5=B8O/;H-+bAm8M@83K^Q>A8%b<`E1*='/R&86g(JC1UXLAS#t#?<1'$=CYfK
?=.,Jr`oM2poOOtnu_2Xs'kn96W?BPA6E).<*EX:AlLri:L-pg8P2]W>t$S*3'Ko8<CSo6:JWkn5$_>p
<EWU);aj\u>[(9%5#5HhBlITa='8g4=V=k78mQ@KC1U[NAnH+"@96K(=oMn5?XRDPra>e7kc=UC"6AV*
jRhR7#5\W6!<<-*!WrE'!X/`7!WE'""9JH$!<E?#!!*-%q#LEsrW3?-!<E0$$3LA3rW!''!t?"NrW3'%
rW3Z4!!<oE%LE4<$47[`"Te`*!r`E+"U,//"o.3[jS.d:jo+?,^B/k4H2VmsE+rKJ?t"))LO+5_;`7ZW
%<cc/F)uMJF%RZ#5\*mn:*3YOAjn=MH?4.FE-?&7?tj[c>!Y;3<H)l.P^R(QBPm`_**H$NJVT#?N/*OX
RYlQ2D,kY4G^44NH#R;)C1uhGmB-Ai!bl:ZrF',<<Cf/G:0q[SAS,(3.Rlg7?Wg`A@pr_**#g_56p*Xs
4\/LM2BtM!?XR&B@oul0<aA<g1bgXQ>[2)oBN%f.=]JL&8Np0jEH-5FEI<+eF_Ou]6sjqFAm8\U>Z"C"
<:6jhXfVK'lDk#$C1_#U@p3/=8iogE@;'UnAm.MO7Rgor>$tcK@phA<)`:P_5X.Cq85rPJ,XQ*N@9HlG
=]eI$@7j-L1+l"$?#4q&;c?b$<``<n5?DW?EHZGDG^>!aBj+\/?u]ag>R"_N>uXa(<TpLKjoPu#$2k)0
!s8E$"U,>N$4-h5!!``4!sJi5#6k&+!!2rsrrN*!$46q@!s8c0!WW9*qZ$j'!tZsk!<E6%"9&?A!!!'3
(De,3(F:@e)[ulO!!O/F#m1D="9AN)!U]"MjQ6C'pV-^Do"QGhDf9T5E+r]qDK:>dH?s:5<G6)hE+sB7
H%(3P77C*^<_>tYr_`er<E2"oIW079CisN1?tsUf?rB`pBmkG^KPa=R<b,o[D.HgbG'\F_IX-KrMM$M,
H#e@gI=?3WG&V//k.gYm!3Gan&6rLH>[(H5:KUe,Cis<#<DO8r<*!F4;dEdABkgI(2F1)-4?G_*5s%D&
6s480>YnO3=]nO$>>@pZ5!Dt[BkqTh3]KQ,<EWI'860/1AnbskCMS'2Ch73bBlRm%?=%&F;cNLn!3G^m
n>l>brEUON>uj^'=^PueAnG(>79*Du>utHCB5)*Y3&s<$7Q`arr^&\677CBn?!U?2@Tll/='SNq69d\8
BPD7">!"i8;c[(*;bC,$AnGakAnu1(De`rt@;0^oBjY4W>ut%pX8&aijoFK@joFN;jr=I+"9S`/!WW9(
"VD[\$3C2-!<NH.!X/c7%1N@0!"/i;!s8Q*#6Fr,!X&?#"Tf)A&/,0F!#>S:!WrH'!XB&=%1NUT&/u;p
$4-kF(C(?X"U,,5!Wi&X!9Ee7!p/S,kJ."1"DDapF)q8$2M-s8H"1Z2F)l>;A92d?JqeSgCLggN8kVoW
8k)6[I=d&iE*I!rBPCmcD.I0bA8$.AL4+5C+YtoC?u'b'D/!ZsCi"',CN=KBJV/`5MM?n8IWfaMDf'@R
^\Fo2XRWFl<<Q9+?<pn:?Q<m-An4_??=.#G=]8[6Bl%a"=]\Hr5rq(j5s%"e3)XF*Cg:4;<*rU*:/Y4n
;GU4j@<$7$@6l7g2bm@Z?!13-<*37,=BJp;ASZ1'EHQ5>C2.0a>[(?6k,mgIr`0&"?2e:3?ik.eAlWJA
=^b]F?s6K:?YO=qAm/A;:-q$)5!h=j3)aL+CgC=<<FAg.:K(Fq;bp=l@rZI#@mVUo2GI7[@9?T2<EWI2
=]o-?Anu@*EHH/?BP:m`?!LQ:k,S[Jk2kafjo4BBjSe6=joFN?k5GD_!<i9'"V;a_#lt,+"UY;3"U,>H
(((-F!VcX2!=TMN!s8N("T\Z)!<W?'!!***(D[Daqu@T9"U+r/!<E6'"9JW."UYeT(De#+(C^fY"oSQ!
k5XQBk5XQ<joXZ,k3'J^BP;*oDuF`QEcZhnH$Wt;F)uABD.I^/IY*<"D/<`j;bBYV;G'AIA:9&]Df8ip
F(o>rA8Gde?tO+rL518%;_p3u?ts_&CM7EsD/=0.CN=HAJqJf5$AsRmIsuN]DfBK.n@nt=pqQ0t!3H.$
"B8?$<EoH02IKiuCj9Q(:g%.2?=$f6?X7D^E+E*R;GTV?3]o\h2E+QJCi!?]8lf>"<DQOq;c?Fi<afre
,\gaS-RUfI<aT3:<*!%&=Bo!3?X@>\DK'T<E,]Q)@:*;F=BP'p!3GstkGn_c<EE4+ra6^S@:3nqAnFqE
?t!DL>>np<BPVQu>$4d!6T[@o5!h=j2cFC+C0b+:=(,-1:K(Cp;bp@oA8lO'@m_^q3)<O^?s6Q3='Aa4
>$><@Ao)F*EHH/=C1q'a?!UT9k,\7=!9Nt;!9=%?"9AN)!X&E*!X8f3"V;d_$3:8-"UY>4"U,>H('t'E
!VcX2!=TMN!s8N)"p+i+!<N9&!!*-+()IGcqu@`="U+r.!WiH*"9S]/"UYeT()Io*((L`W"U"r0!q>=P
jS\-?jo4E9^[SuKE,];j@r#puE-?_[IXcNXrbs#sBQ.p9H@BmJBjk%MD/<BK7R9:CG'7qGDeX?GEcYo2
F8g+tA5[K,MLKME4Zu\XF*`.RD0CAWIsQToH$XLWre(N2Kn=`%H@CJ:^[f/(XT5I%XUeZA:eFPc=]o!<
C2%Et@9NS7+]q]K>\7P^?;sp#78?uf838ae1e;%`?X-i8@V]:U<*<T->T6R,?ZU@(>XgD$5uq?(ARASK
Bk_<nC2.?l?=aI]DJsK4Ch[TpC2Dq4jf8Mi>uF9mr`TP4@qo^mC1LNI>p3?N?!V&SC11+A:.A#_=\:e9
2)Rp7A7/\K<FT`N@9$K=r`pjL6==nWBjF.`1I>)LAnGFS@qfXlBPM9oAmo@jDJX91Ch[TqBPdXJkH":<
"6J\-jn\$]jQ5Od!sAW)!<N?*":#DG%1WUF"9\f.!<WE1$4R.>!r`0#!s8?"('b'J!s8Q/&-W4<!sJc/
"9AK+)B0+gr;[!&"UYS?!t#8B%1W^T%LEIG$N:\F().>i%13OUk2lL&!9Nb5!9O1AjhEEhE`tS(A8,ap
Ch\?IP'q"[Ci+$)Df9f>Ec#E!>#'!kLM9%;4?QY`CMI^%F+OOPIXZ6Vrcol>A3b!oOa_+M91iT4HA$rr
E.O.4O,&[VJV%`^JqJ`1Jpr/sIYX'S^Au(C^At@tXV>&I82*A-<E*+'<GH5pC/e;;=]n`s>[1cG?Wg<+
83U9uEE+hM0JZ(%=B8R-?Yjk!C0P"TAnG^R1g,3QBimnf3_s*oD/NlhCO:;OEHHPCCft7aDf0K0Bkh9p
E-n\UXT5HrXm2tbX'T4C8hiY3<`N=+<bc>pB2r);=B\d1?"78M>#\Em5@&8K<])]g1.>JO<E`R6CijB+
?=@JYAnY.$=Eo.+=\Ck=:LIdPDJ*6jH?XURFF%_=>%;AeDJs?*C2.I%HKM:-WrV5Ck5PVa!"&`.!<WB)
%1OTl!WE-2!s/Q,#6b85!<E0#!uDaTqu@*-!WiH*"V;U^%0Qk6#mUk>!!4Gm%0HJ.*!HZ^'+"aP,p4?I
)^Q%,!s]AO',1ue%1E[]-04j`!9O(>!p&M*rT47Ek2tdfr4`6IrkAHKm(YkbA8l<t?tjS$F*2G9>$=[2
EcuVOF)5Z1Cg^.XJq@K%9iY2,Ebo-&E.2kB?sm/UH#dqECMS*FJU2BO>?Y`[Fa4aLH$Y'tL5(>6KS"f$
I=[0.O,8UEKmr:$!5SHGr2ft#riH1%m&_[%;d<=%:/tP+?Xd8=84Yj>?X[GV?W^E6=AM4cCMQa*4[qh=
?<C!.*F*>d;bp1[>%CrG>Zk0=ChmTf<D#e_>[h5UAn>fXE"?l)DJX*#B5;L+GBIkCDe]0P!3GXks/c(!
ii<PU;dEI):KCb/?t*DC8kLm);IF!EA7/PC>?O`g>&7tQ3'Kc"<F8m)?!V,O=&)O`>@h/M?!:B@ChmWk
<_5nb?".IGAcQTFE"?l)DJEs!C27g.GB@e?D/%t0r8n"?roO4AqW7k@k2uO&!9O4B$ig;2!W`9&!sJi5
"9SQ&%flh=#71P8!WrK(!!<fE!W<!(!<iN)!s8u9!r`08!so,7"9JW0&.f0P!WW3%":#5?#mq7C().Gr
'+b]]$kO3j*ubt/'Fj3dk2tasjoFNAjoXW)k5=?Ajl4$XC3+lAD,OnbC2$j^CJ@S\<ITCFIWB.AEcPho
CjC;98mu[XEdDM)F*!7Q4[D>!@!QR)=a#[SEcZAPEbT6'E,]l=H%^cuI=?`nG(P=$K7Sr<R$<kjL3Vgp
!5STKk,eWdriI_N?YW_H5uV)j<(Kkg4Zt/\Bk_6p?<(6:?;s?qA7eY!:L%.3AQVQ3?ZT1$r\P-\Alr/,
@<H?l?"%GR<`N6>>[1WBA8Z3uBPD6o@;K_!D/499Jpr/fE+SgH!3GXk!3H1%k,SK]ri7>I?trkK6;q5k
<D$4n5!UPcBk_6p?WLH>@9#d"B4b%':0h.5Ad2C1?sn(V1B'-[:M*a48RljX@:<VZ?WU92?!UiFASu6r
BPD6o@r,q#D/405JUMrcE+S"/o&^&9k2te$joFH@jpM4o%Kce5!<iN*!!*'$r;[`F%1E[L!X&Z1!<<0-
#lt#+!s8]6!WWB-)?Ka9$OHk9!!aGS"U,)>"o\Q@!s8]1#nmjZ$k3aT#7qF_&eH!#1+Ojj(('j"!p/S)
qW7e>r8n"@rT44Ck2tdp^[Aj4CM@3nD/s]=@q8MQH@g^'H>@5)A8?.'EcPYjBm"TIKl^X@E-c>$C1qd>
K6DETDf]u?F+/jlDfBZ4E-$)LLPCG8KnOr!IX[!'KT2%WqnE-HrP&?JpV-^Dr4i$Ah5s7O<DHY"?<po7
;aOMrCMRp%=B/0r='T!:?;O'j@:<he?VXj2AQV?$<+0N[@q/YH?!UcDBlI]h>[1E:?XIMdE,TZ4DJEZr
CAr,SG^4b?Xo5@%XSo7$XS8gsXRiRMX"[^X:K^n1@:2u36W[r;CN3rh<`2k"?!UlI;as_q@q]af:L.7<
=[lIm@qopl@p31;@09nOE,$1o?!UW>?sm\fE,TZ4DJEZpC2\$,G'8;hX7bTTjmD18jlPV+!WW9(rWO#;
!<<0.&J,`c!WiB'!WrQ/"T\T)"qh.L'*S@<":>21!W`N8'F+jF"8rBB%2K?S"9\f0"U,>N().Gr'+P6V
%29Ki*Zuupr8n%@jo4BBjSS'>jo4BBjR_O.^Au(A^]2+D^B8q!8o%(8L4jtuF`;DFK8#G>F(8*HCk?hI
D/*R!H?t7(IVEJ1CiFHMLRs`hK8"Vg<G6GpK9:q8H?*kDG'8P!MM@"HMLp"tH%L['NK08"^Au(1^\=i1
XT#=&XfV?#s/bss:ME`g=]fW\BjkIU?Xn"mI;E7e5se[h@9H`6:g@UEDL#qr<*!++?Z:"@IWTFFAQ_E#
?X7SrEFi`g=^PTIDKp;CF`__@@qB1eDfBrGIep/HXRN@hXT5O%Xkg$QBidB"=`A7m@q&_Q@rH:2Cgp:/
6Wn27>$>!*?"R\dF_OlV='8g:E,gY]FDYr.>")G!@;gF2AnGCR?t3\aGB@eGG&qG/AnPpuE-?F*IH%:-
WVigkjoFKAjoOT)q;qb>jQ61!1^sKd!Wj,N%0m+@"pYhV-4g@^!!!'3#6P&0!<WZ9'-@Yb!<N<)"Vqn>
.iT*8$3L8/"U,eY,Spdp"Tno5#884!()n53&-iOK&/5m$+=m<N!T`A@joFN:jp'r0k2kafj8A&o^DKse
Ck@7kH?jLQG(G7"Irf:,>%qnh?smLLBl\fWLQR>jIOBVoIY3<2KR\T)K6_BRF)lbcJp)<YEdrk!MN<gX
LPCM9KmJ&dH@bq-!5Ra3!5SQJiiN3^r2h*D6s*Q,Ci<ls?=@8XCiF,r<(KP]>?4Ko;c[4?CNFiArb3`n
BkM@$F`(r1CN!fi>[:ZNE,8rk?X@JeEHQJNG]@\?DJs)t?Y+$LXT5HiXT5I"XT5I$XnJgXWujc5=_hbj
An57X@r#guC1(+88l]+t9hePf?YjLsH>rjt-YmF2Df0Z7C2@[(AmJVL@;9at@q/nRC2n68GBe:NE,KQ3
BP:dcCZqhiX7bTTjo+<Ajnn3?jo"6AjQ6=%*rl?D&.fN_#mCM<&.fTe"TeZ(!WrK(!!*-)&J,a)(AeOc
'G;>u%M00c#m185"V):Z#6tD9%Mop#+!D[A()%>q$46qD!YFMUr8n%@jnn0?jn7a9jSS'>jSe65^Au(?
^Au(F^IhLCD1R:kH$XOTFb54"IWB.+>&%tj?smS\Ee/dsOb\@6IXcfqKS558ItE9)H>mhEF+/jqG'.hH
IYWZ8NfB'RL4k85H?sXYK(HbC^Au(K^\"W.XR`InXSJt?7Til0Ci<os?XmM[CN*uo<CfY[>?4No;cR.>
CN4]@rb3<dBk_I&F_tl/CN!ch>[LiQE,8rk?=.DcE-6C5G^+1HDJsH)ARB"brN-($qlKk"p8nFuXf\c$
XTPZ,XfU9X+%BF;CMId"An#7ZCMRm'?WKck=Bnp':fLJ&CMRp9EW0YQC2"u.DJjQ5C27U'AmJ\M?taLo
A7AnTBlJ$5GBS1LE,KT4AnYRaD!.i!WV!7`joFK5joFK<jpD(j!tZ"X#mpkA"r%U[((CEK!!!'&!WW3$
!X0,H(F9ms%4;Vp%20Bo&e5Ha'FFsF"U,>N&-iCC"q;=`)^$1E()@Pt'FG0N$5!0u!9F%>!9<e8"6AV,
j7qa=jQ>UclG*>5!5S<C$=IdjH@gm'Jp)EcrdHtQE,B9&?s6T*9jha`KS,/EOckihO,8XDJTc*QJqB,?
JpMHXFaeXXF*;kbPa%>nOckKTItiu4IVEhKgqWj'kH+`cp8nZt>?b]UE,9;uA7kgT&7JgH<)l^b76Ne/
=_;PiFaX18."-A`EGTE!?!D)\HZ<h4?=.,TARAeQAT3*IH[C-eEH#Z4G\Lkj?=ro5jK71;$;Xo3Ao)F$
CL_!hrb2pS?!:6/:J+)?5##3mDJsWArd#H-G][q?CL^dXCi"E;CM$p]@VKF^?t<kgI1C[OH?aaUE,'B:
Bk^XUB%a6\joFNAjoFN9joFK@joFN?jpD(j!t#ST&.f'Q$N:J;#6P&/!rDs#!X]ST)uV'$-6X<E&.f'M
!tc(j(D$oW"U5DC"U,,<(+Up6,mkG(%Mp5s%0?\?jkAkJ^B0(;IM6aFF`hnLF`qqPG%t2mCMdm$G(KXE
+F\KZH?t4(MMd+AJr>JJK6VQ[F*`FaG'/%YJqf#0E.7eD!eu/EeA(m_!3GgppoOP!rN-($q5lo"Bkh!`
@:E\Q@:NeV@9,ou=BSa*@;B[qCM@9jAS#e)F`hS?CNXcHDe3?a?"Ih`@prn^CN+6->\S>'G&V/&g9(@V
!j&N+jJr9[oW&:9Bkh$d@U`hT@f9dl=%ZFp>$4j8CMI[$Bk([cAoDm8FDc#4EccVGARf+VAo)'h@V9Ck
E,]PtBlnH;E+r_PX5U,XjoXZ,jSe3CjlY^eoB$8;k2kafjQ67##nmaW"U>5:#6b>1#6t;1!<N?)!=/Q7
)%?fW$47Ii)]KG)&/uQ7'F>!J"UYeJ#6kJ=%1s?k%Kd1>)[$oc"m4q'joFNAjoXW+k2sDY_",5XIWfmR
Df]l:CiXlNJqA#NEeB!c@rm'IF`7Lr>$t`KIf>T1OVs=HJoGdRFa\jjG'81\IsH?N7;Ra>Ng+TZlb<G8
qS*$Go=t+'!3GXk!3Gjq!j8Z-5\XY:>[1W@>Zb<EC2@]n:1%pX?Vk$ABjt=G85;oXBn1V^H@(!dH[]a9
?X[DWCM@3cAnl'mAl:NhF*MqY>s7MU!3H%!!3Gst!3H.$n>kiT,,qWDBk(XY>@:`B=^boTC2@9R?uKsk
;IO6Q@U2r*:JXo'rd5`3H?sg^I;<.s@Ua"dBk(XbBPM-k;`Ip!GB\ID52E:7X8:rZjlGmm!9Eh8*TQ;D
%0m+@!sJc0!X/o>&.f!F"V_XS!<il@#6P#+!!NB4.k3%pr?W:2&-N.@#7M.Q#6tSF%LEIC!!3rZ+=dTq
qrRn?roWq:!TiD?joXZ,jS\-?jo4BBjSe64^Au(*^B\.hMMHk<JpRE>(j1.IEcQ>KEc?&?FbZ-COcG<W
NfK?VG'j4;s+1N.JqSo*Df9T3c+a@^Xf\]!XT5HYXTqX2FE)29ChEZV"(>eM?Pd'XAm\eL?Xdu'H[C![
Fa/.]D..$jC23]`$#X`o?!CQ:XKASoXT5H]XkBcKWs;F0F)c)8C1dHT-=URr?smJV?sR2K@W6aAH?XIO
GB\FO@qKFgBP_F"C2S$'?!LZ=c)Us-k2tb!joFKAjoFNBjoFN9jojf.k2k_'joFN?jp(kk)Aa&#&.8CA
(^:<O"U,,;"Tno3#8Sg9,p4-G+<W0I#7CG>r=B&E(CC<E!s[fJjQ>Udjo"6BjlY\'joFK:joFN<k5"->
jo4Df^EZd/Srne_MNN@%C3ke`A7Tb7Jpr?*LQ@[[Ne`7=MMmUPIY%KM$AF7mMi*O@A7KqCo=t:>!5RL,
h5p[Yo;s<-C5@1TE-6MA<E<[RAlDQ6DJX'+DK0oLG^+4HCijfJEGB9*C^Y&sEHQ>EG\'fOAp*UF!3H!u
!3Gst!3GancDq=BC57(RE--D?<``lZEb86L?uB^mDf0Q=I!9dSDesK8H#[M5C2@X&EHH;DG@jcNAou:u
hrY"%jlH$q+oi*<,Sh.7,n0nW$6'9P!<j,J%29Hl+=\KV(DIE!)^Z@1r=B;L(E482+:8,M$6/p*!9Nq:
!9Et<!9F.As5j4A!9E_5p:pC;!5STK!5RO-,DV&,KSP>3E,^DkMLq"QSrnb`L5(+sJqB#6GC"^eJq\l0
K(-MT_#1qI_!Sl<^V@SW^[8-'XT#='XKAS`XWqe)Df0N6Bj=nYI<97OHAHldEc?#3?>OG&Cgq!jC27^)
CMWpO!3Ggp!3?@+XfSY,XQutgXS&^9Wt95iDf0N6BjG"[H#mbIH&$\EE"?r%@;K\&Ch%'kBPVL'CM_q0
kH"7;!9O+?!9F.A"m"h,k2tdljoa`-k2lU),8M(0',DAn"9]8_)A"2?5U7*^()IA_&.frq#7:nL&/,]g
&cUnmj8S3>joFNBjp:)2jQ>Uck2tamjoa`-k2cF%!9O.@pqHgEq7cpFg:n2NNguT$KS"JqNh);cSXusN
&pf+[KQ^sNFbb9YF*W(\K7/&khnK9/^V@SN^\Fo2XSJsuXR<1jXS8jlXX.e.KnaqlCh@7'Lja/sLn'*/
CMRfr;dj*SAQ`ANASH'tAnJ-GiN33`Xf\\kXm2tDX!;G)KS4YhC1_(%L3[ZkLRE^*CMRft<+BBWAm/SR
Anc0rAnK/cri6%\qrRtAk2cO(!9O1A!p&M*p>uA:rT4.BjR2.V&0Nqm,nggr$6VMZ'0\[/1C=[)'*eOC
"r@UJ"UPMF'FY<Tj5^+#!9O(>!9O4B"Qeb-k2lI%rT44Ck2tamjoOT+qnE-HcG(TTNLH;uKRnGpO.DDc
SXlmNH@ga&G%>`>L3RNUH?t$mIX-8<^[]&=_#;"J^u3!)XT5HJXUT&jKnXhjCLq+'LjNup'o8B3Anu4#
@o?`EE+E'XAnGaqC1_&EXT5I$XT5H^XT>T,e#W/B,AVITK6_?MAn6(>H>SCkR=SscC2RN[@q0Ij=^YiR
Bl@ZsB#q"RWN5pY!9Ek9!TiJ>k5XQ)js(EY3&i/s&./^d4s^h*5(#*m&.fK[!=&iF#m(8;$4R[Y#n$@f
!9O(>!9F+@!9EY3!9O(>!TiJBjoON)j1bT0m_8b;l+[4EeA'tWqQ0b#l`C/gm]?JjrN-+%Y4estXS]+"
Aalf&XKDB%!3FJJqPsUqdAm8HorItj!,/a?qW7e<rT4+AnE'`3p#ZA<jlY\(joFK@joOQ'roO4BqW7e=
qrRkcp>uA:roO:Dk2Z=#!9Et<"Qee-k2lL&"6J\-jn7a9jo4BBjo4BBjne-/^WsRo_#1qJ^j>:\!5SEF
!5RI+qS*'H^V-`LXSf1$XC^\!!3H!u!3Gstm]?JjoW8.qXgY81B(;q?WrV8[joFN7k5XQAjoFN@joFNB
joFN4joFN?k5XQBjoX]-jSe3Bjl?dIjoXZ,jn\$=jnn0BjlGRcqrRn>kiN!/k2tatjoXZ*k(!~>

%%EndBinary
grestore
np
0 0 0 1 cmyk
%ADOBeginSubsetFont: GAAAAA+MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginWJCBWI+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/ring.cap <1C60D8A8C9B70B6BB490CDFC91A7F54FF4F3ED747354251C3C32E58E451F1AEE2DD2B7BD1598560CF845B332C9C80408AD3E3CA3CC922041BE51215E8E5756A8FAD113EF0FAEC957A602> |-/period <1C60D8A8C9B89DB76243241956147685E9D04DE27F343A7EF0A25AE4387D3A3D08796B7514395B9CA8F4> |-/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D598E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-/three <1C60D8A8C9B7BA8F622456C4A5B0CA9B1BA284AF806928062A6B7B09FB3F0AFA0642F9B368E55CBEC860ACEDE00F619B43869FF145573EE19FF4FA261BF5938247732EEA9C997694C21F3826519E5860C319187A2BE7C4798BE40539D59DC5F8C368613E2EF361E84E1BE9A2B721FABB539C13C42CCE1FC716B22FBB381EE1131CEA0A76D50B43FAFEFB6984253871A40EF8DA774460484F> |-/four <1C60D8A8C9B7BA8F425ECEAC1E8FFE1F2E4A9E9BFE692DFC86F0914D1950B7E9330CFAE2AE0CE50BC8F9A81B99E65C7EB21064416D8548FA09CC9C6588AD65393A47B2EBDED97474D4C03B3488707365B1350A023199FD7F8930> |-systemdict /gcheck known {setglobal} if end {end} ifendWJCBWI+MyriadPro-Regular /Encoding getdup 33 /ring.cap putdup 46 /period putdup 49 /one putdup 51 /three putdup 52 /four putpop%ADOEndSubsetFont
/WJCBWI+MyriadPro-Regular*1 [32{/.notdef}rp /space /ring.cap 6{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 2{/.notdef}rp /one /.notdef /three /four 14{/.notdef}rp /C 5{/.notdef}rp /I 10{/.notdef}rp /T 12{/.notdef}rp /a /b /.notdef /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]WJCBWI+MyriadPro-Regular nfWJCBWI+MyriadPro-Regular*1 [4.3765 0 0 -4.3765 0 0 ]msf381.083 65.9426 mo(41.3)sh388.725 65.9426 mo(!)shgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/WJCBWI+MyriadPro-Regular*1 uf/WJCBWI+MyriadPro-Regular uf/GAAAAA+MyriadPro-Regular uf/WJCBWH+ArialMT*1 uf/WJCBWH+ArialMT uf/FAAAAA+ArialMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
